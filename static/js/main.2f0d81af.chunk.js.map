{"version":3,"sources":["data.js","utils.js","warcraftLogLoader.js","ProgressBar.jsx","HealerReport/HealerFightSummary.jsx","HealerReport/healSummary.js","HealerReport/FightReport.jsx","HealerReport/HealerReport.jsx","ShamanReport/AncestralFortitudeReport.jsx","ShamanReport/CooldownReport.jsx","ShamanReport/TotemReport.jsx","ShamanReport/ShamanReport.jsx","SummaryReport/GridContexts.js","SummaryReport/GridRow.jsx","SummaryReport/Grid.jsx","SummaryReport/ExpandCollapseButton.jsx","SummaryReport/GridColumnGroup.jsx","SummaryReport/GridColumn.jsx","SummaryReport/GridIconColumn.jsx","SummaryReport/SummaryReport.jsx","App.js","reportWebVitals.js","index.js"],"names":["healingSpells","name","type","icon","mana","castTime","ticks","tickPortion","cooldownList","cooldown","protectionPotionEnum","protectionPotions","rank","sharedHealingEnchants","2544","score","2543","2545","1503","1505","1483","1504","1506","1507","1508","1509","1510","2604","1891","1893","928","1892","911","1887","851","929","2566","1886","1885","2565","1884","1883","2617","930","931","2619","2620","1888","2621","2622","1889","2505","2504","2567","2568","1903","1904","1890","926","requiredEnchants","Object","assign","2590","2587","2591","2584","offhandFrills","23049","23048","23029","22937","22994","19366","21597","23452","23468","23469","23453","21666","17067","20582","19142","21471","19922","19891","19312","19315","15942","15989","15941","15968","22329","18523","13353","22253","15988","21185","23156","18695","15940","13385","22319","15805","15987","15931","15857","11928","worldBuffs","msToTime","s","secs","abbreviateNumber","num","toFixed","asPercentage","decimals","sumNonNull","params","reduce","agg","obj","WarcraftLogLoader","reportId","this","key","domain","Results","_loadedStatus","fights","characterSummaries","deaths","character","details","casts","buffs","damageTaken","protectionPots","Promise","resolve","fetch","then","res","json","Fights","Characters","friendlies","acc","id","raidStartTime","start_time","friendlyPets","forEach","pet","petOwner","pets","startTime","endTime","length","end_time","reject","response","data","playerData","playerDetails","tanks","_reducePlayerDetails","healers","dps","entries","value","playerInfo","roles","intellect","armor","stamina","strength","agility","weaponEnchant","enchants","catch","_resolve","playerid","all","_loadCharacterCasts","_loadCharacterBuffs","_loadProtectionPots","_data","_reject","events","auras","guid","protPot","ability","amount","firstAbsorb","fight","timestamp","characterid","getClassHealEvents","getClassCastEvents","getProtectionPotionHealingEvents","getProtectionPotionCastEvents","accum","current","role","playerId","slots","0","enchantable","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","combatantInfo","gear","enchant","slot","permanentEnchants","push","slotname","permanentEnchant","permanentEnchantName","gearId","gearName","temporaryEnchant","temporaryEnchantName","array","keyAccessFunction","a","concat","i","j","splice","removeDuplicates","x","stats","Intellect","max","Armor","Stamina","Strength","Agility","healerData","context","tankData","status","Error","statusText","nextPageTimestamp","sourceClass","sourceid","sourcename","getBuffUptime","innerAccum","existingCharacter","totalUptime","totalUses","bands","sort","y","results","abilityid","LogLoader","ProgressBar","props","summary","maxHeals","className","style","width","getTotalHeals","getEffectivePercent","getOverhealPercent","getWastedPercent","Component","HealerFightSummary","state","healer","spells","manaOil","classType","isExpanded","toggle","bind","setState","row","maxSpellHeals","enchantScore","count","colour","tooltip","onClick","data-tip","data-place","data-class","data-html","manaPots","runes","manaGained","cooldowns","map","idx","src","alt","castsStarted","castsCompleted","getCastsPercent","effectiveHeals","overHeal","wastedHeals","wastedMana","spell","colSpan","HealSummary","getHealSummary","collection","event","getOrCreate","aggregate","spellInfo","console","log","overheal","tick","Math","round","FightReport","error","isLoaded","healSummary","expanded","characters","healerInfo","getHealerInfo","getHealEvents","result","eventsByCharacter","getCharactersFromEvents","characterList","characterName","characterClass","characterManaOil","bisEnchants","total","keyValuePair","_event","sourceId","abilityId","sourceID","spellId","loadData","fightClass","boss","kill","message","rowSpan","height","effectiveHeal","HealerReport","getFights","showTrash","filter","item","AncestralFortitudeReport","tanksPerFight","buffCalls","getArmorBuffUptime","allBuffs","buffUptime","tankCalls","getTankInfo","allTanks","charId","class","_getTanksForFights","_getArmorBuffUptime","_results","colspan","fightLength","tankBuffInfo","tankBuffUptime","preBuff","CooldownReport","cooldownRows","zhcResult","zhcCounts","getCharacterCastTable","cooldownRow","entry","xValue","yValue","typeCompare","localeCompare","found","resultRow","TotemReport","ShamanReport","shamans","GroupKeys","DataPoints","emptyData","GridRow","_logLoader","logLoader","report","getResults","raidTime","Data","_flattenCharacterData","loadCharacterDetails","getCharacter","characterData","_getDeathCount","_getWorldBuffUptime","buffCount","countNonNull","_getProtectionPotionCount","_getProtectionPotionAbsorb","_getCastCount","buffId","characterBuff","countByFight","cast","firstCast","protectionPotion","spellId1","spellId2","absorbed","castCount","spellIds","includes","children","Children","child","isValidElement","cloneElement","render","renderCell","Grid","collapsed","hiddenColumns","classFilter","roleFilter","handleColGroupToggle","prevProps","colGroup","renderHeader","onColGroupToggle","renderSubHeader","ExpandCollapseButton","onToggle","GridColumnGroup","visibleCount","visibility","_getChildCount","label","cssClass","_getVisibleChildCount","_canExpand","GridColumn","isVisible","format","isNaN","field","_cleanupValue","GridIconColumn","icon_name","SummaryReport","Load","loadFights","loadCharacterSummary","loadDeaths","roleName","_props","classSortOrder","Warrior","Rogue","Hunter","Mage","Warlock","Priest","Shaman","Paladin","Druid","values","aValue","bValue","classCompare","handleRole","handleClass","ctx","App","reportInput","handleSubmit","handleChange","handleTrashToggle","queryParsed","queryString","parse","window","location","search","setReport","target","preventDefault","to","onSubmit","onChange","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f0d81af.chunk.js","sourcesContent":["export const healingSpells = {\n    // Priest Spells\n    '2054': {\n        name: \"Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 155,\n        castTime: 3000\n    },\n    '2055': {\n        name: \"Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 205,\n        castTime: 3000\n    },\n    '6063': {\n        name: \"Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 255,\n        castTime: 3000\n    },\n    '6064': {\n        name: \"Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 305,\n        castTime: 3000\n    },\n    '2061': {\n        name: \"Flash Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 125,\n        castTime: 1500\n    },\n    '9472': {\n        name: \"Flash Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 155,\n        castTime: 1500\n    },\n    '9473': {\n        name: \"Flash Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 185,\n        castTime: 1500\n    },\n    '9474': {\n        name: \"Flash Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 215,\n        castTime: 1500\n    },\n    '10915': {\n        name: \"Flash Heal (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 265,\n        castTime: 1500\n    },\n    '10916': {\n        name: \"Flash Heal (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 315,\n        castTime: 1500\n    },\n    '10917': {\n        name: \"Flash Heal (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 380,\n        castTime: 1500\n    },\n    '139': {\n        name: \"Renew (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 30,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6074': {\n        name: \"Renew (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 65,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6075': {\n        name: \"Renew (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 105,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6076': {\n        name: \"Renew (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 140,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6077': {\n        name: \"Renew (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 170,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6078': {\n        name: \"Renew (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 205,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10927': {\n        name: \"Renew (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 250,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10928': {\n        name: \"Renew (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 305,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10929': {\n        name: \"Renew (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 365,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '25315': {\n        name: \"Renew (Rank 10)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 410,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '17': {\n        name: \"Power Word: Shield (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 45,\n        castTime: 0\n    },\n    '592': {\n        name: \"Power Word: Shield (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 80,\n        castTime: 0\n    },\n    '600': {\n        name: \"Power Word: Shield (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 130,\n        castTime: 0\n    },\n    '3747': {\n        name: \"Power Word: Shield (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 175,\n        castTime: 0\n    },\n    '6065': {\n        name: \"Power Word: Shield (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 210,\n        castTime: 0\n    },\n    '6066': {\n        name: \"Power Word: Shield (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 250,\n        castTime: 0\n    },\n    '10898': {\n        name: \"Power Word: Shield (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 300,\n        castTime: 0\n    },\n    '10899': {\n        name: \"Power Word: Shield (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 355,\n        castTime: 0\n    },\n    '10900': {\n        name: \"Power Word: Shield (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 425,\n        castTime: 0\n    },\n    '10901': {\n        name: \"Power Word: Shield (Rank 10)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 500,\n        castTime: 0\n    },\n    '2060': {\n        name: \"Greater Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 370,\n        castTime: 3000\n    },\n    '10963': {\n        name: \"Greater Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 455,\n        castTime: 3000\n    },\n    '10964': {\n        name: \"Greater Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 545,\n        castTime: 3000\n    },\n    '10965': {\n        name: \"Greater Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 655,\n        castTime: 3000\n    },\n    '25314': {\n        name: \"Greater Heal (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 710,\n        castTime: 3000\n    },\n    '596': {\n        name: \"Prayer of Healing (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 410,\n        castTime: 3000\n    },\n    '996': {\n        name: \"Prayer of Healing (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 560,\n        castTime: 3000\n    },\n    '10960': {\n        name: \"Prayer of Healing (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 770,\n        castTime: 3000\n    },\n    '10961': {\n        name: \"Prayer of Healing (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 1030,\n        castTime: 3000\n    },\n    '25316': {\n        name: \"Prayer of Healing (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 1070,\n        castTime: 3000\n    },\n    '2050': {\n        name: \"Lesser Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 30,\n        castTime: 1500\n    },\n    '2052': {\n        name: \"Lesser Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 45,\n        castTime: 2000\n    },\n    '2053': {\n        name: \"Lesser Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 75,\n        castTime: 2500\n    },\n    '22009': {\n        name: \"Greater Heal (Renew)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 0,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 0\n    },\n    // Druid Spells\n    '774': {\n        name: \"Rejuvenation (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 25,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '1058': {\n        name: \"Rejuvenation (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 40,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '1430': {\n        name: \"Rejuvenation (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 75,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '2090': {\n        name: \"Rejuvenation (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 105,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '2091': {\n        name: \"Rejuvenation (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 135,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '3627': {\n        name: \"Rejuvenation (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 160,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '8910': {\n        name: \"Rejuvenation (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 195,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9839': {\n        name: \"Rejuvenation (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 235,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9840': {\n        name: \"Rejuvenation (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 280,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9841': {\n        name: \"Rejuvenation (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 335,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '25299': {\n        name: \"Rejuvenation (Rank 11)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 360,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '5185': {\n        name: \"Healing Touch (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 25,\n        castTime: 1500\n    },\n    '5186': {\n        name: \"Healing Touch (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 55,\n        castTime: 2000\n    },\n    '5187': {\n        name: \"Healing Touch (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 110,\n        castTime: 2500\n    },\n    '5188': {\n        name: \"Healing Touch (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 185,\n        castTime: 3000\n    },\n    '5189': {\n        name: \"Healing Touch (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 270,\n        castTime: 3500\n    },\n    '6778': {\n        name: \"Healing Touch (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 335,\n        castTime: 3500\n    },\n    '8903': {\n        name: \"Healing Touch (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 405,\n        castTime: 3500\n    },\n    '9758': {\n        name: \"Healing Touch (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 495,\n        castTime: 3500\n    },\n    '9888': {\n        name: \"Healing Touch (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 600,\n        castTime: 3500\n    },\n    '9889': {\n        name: \"Healing Touch (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 720,\n        castTime: 3500\n    },\n    '25297': {\n        name: \"Healing Touch (Rank 11)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 800,\n        castTime: 3500\n    },\n    '8936': {\n        name: \"Regrowth (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 120,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8938': {\n        name: \"Regrowth (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 205,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8939': {\n        name: \"Regrowth (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 280,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8940': {\n        name: \"Regrowth (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 350,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8941': {\n        name: \"Regrowth (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 420,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9750': {\n        name: \"Regrowth (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 510,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9856': {\n        name: \"Regrowth (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 615,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9857': {\n        name: \"Regrowth (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 740,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9858': {\n        name: \"Regrowth (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 880,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '740': {\n        name: \"Tranquility (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 375,\n        castTime: 0\n    },\n    '8918': {\n        name: \"Tranquility (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 505,\n        castTime: 0\n    },\n    '9862': {\n        name: \"Tranquility (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 695,\n        castTime: 0\n    },\n    '9863': {\n        name: \"Tranquility (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 925,\n        castTime: 0\n    },\n    '18562': {\n        name: \"Swiftmend\",\n        type: \"Nature\",\n        icon: \"inv_relics_idolofrejuvenation.jpg\",\n        mana: 250,\n        castTime: 0\n    },\n    // Shaman\n    '1064': {\n        name: \"Chain Heal (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 260,\n        castTime: 2500\n    },\n    '10622': {\n        name: \"Chain Heal (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 315,\n        castTime: 2500\n    },\n    '10623': {\n        name: \"Chain Heal (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 405,\n        castTime: 2500\n    },\n    '8004': {\n        name: \"Lesser Healing Wave (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 105,\n        castTime: 1500\n    },\n    '8008': {\n        name: \"Lesser Healing Wave (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 145,\n        castTime: 1500\n    },\n    '8010': {\n        name: \"Lesser Healing Wave (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 185,\n        castTime: 1500\n    },\n    '10466': {\n        name: \"Lesser Healing Wave (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 235,\n        castTime: 1500\n    },\n    '10467': {\n        name: \"Lesser Healing Wave (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 305,\n        castTime: 1500\n    },\n    '10468': {\n        name: \"Lesser Healing Wave (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 380,\n        castTime: 1500\n    },\n    '331': {\n        name: \"Healing Wave (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 25,\n        castTime: 1500\n    },\n    '332': {\n        name: \"Healing Wave (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 45,\n        castTime: 2000\n    },\n    '547': {\n        name: \"Healing Wave (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 80,\n        castTime: 2500\n    },\n    '913': {\n        name: \"Healing Wave (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 155,\n        castTime: 3000\n    },\n    '939': {\n        name: \"Healing Wave (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 200,\n        castTime: 3000\n    },\n    '959': {\n        name: \"Healing Wave (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 265,\n        castTime: 3000\n    },\n    '8005': {\n        name: \"Healing Wave (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 340,\n        castTime: 3000\n    },\n    '10395': {\n        name: \"Healing Wave (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 440,\n        castTime: 3000\n    },\n    '10396': {\n        name: \"Healing Wave (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 560,\n        castTime: 3000\n    },\n    '25357': {\n        name: \"Healing Wave (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 620,\n        castTime: 3000\n    },\n    '5672': {\n        name: \"Healing Stream (Rank 1)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 40,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '6371': {\n        name: \"Healing Stream (Rank 2)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 50,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '6372': {\n        name: \"Healing Stream (Rank 3)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 60,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '10460': {\n        name: \"Healing Stream (Rank 4)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 70,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '10461': {\n        name: \"Healing Stream (Rank 5)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 80,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    // Bandages\n    '746': {\n        name: \"Linen Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_15.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '1159': {\n        name: \"Heavy Linen Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_18.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '3267': {\n        name: \"Wool Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_14.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '3268': {\n        name: \"Heavy Wool Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_17.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7926': {\n        name: \"Silk Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_01.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7927': {\n        name: \"Heavy Silk Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_02.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '10838': {\n        name: \"Mageweave Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_19.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '10839': {\n        name: \"Heave Mageweave Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_20.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '18608': {\n        name: \"Runecloth Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_11.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '18610': {\n        name: \"Heavy Runecloth Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_12.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    // Paladin\n    '19750': {\n        name: \"Flash of Light (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 35,\n        castTime: 1500\n    },\n    '19939': {\n        name: \"Flash of Light (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 50,\n        castTime: 1500\n    },\n    '19940': {\n        name: \"Flash of Light (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 70,\n        castTime: 1500\n    },\n    '19941': {\n        name: \"Flash of Light (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 90,\n        castTime: 1500\n    },\n    '19942': {\n        name: \"Flash of Light (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 115,\n        castTime: 1500\n    },\n    '19943': {\n        name: \"Flash of Light (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 140,\n        castTime: 1500\n    },\n    '635': {\n        name: \"Holy Light (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 35,\n        castTime: 2500\n    },\n    '639': {\n        name: \"Holy Light (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 60,\n        castTime: 2500\n    },\n    '647': {\n        name: \"Holy Light (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 110,\n        castTime: 2500\n    },\n    '1026': {\n        name: \"Holy Light (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 190,\n        castTime: 2500\n    },\n    '1042': {\n        name: \"Holy Light (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 275,\n        castTime: 2500\n    },\n    '3472': {\n        name: \"Holy Light (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 365,\n        castTime: 2500\n    },\n    '10328': {\n        name: \"Holy Light (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 465,\n        castTime: 2500\n    },\n    '10329': {\n        name: \"Holy Light (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 580,\n        castTime: 2500\n    },\n    '25292': {\n        name: \"Holy Light (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 660,\n        castTime: 2500\n    },\n    '633': {\n        name: \"Lay on Hands (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    '2800': {\n        name: \"Lay on Hands (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    '10310': {\n        name: \"Lay on Hands (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    /*'20185': {\n        name: \"Judgement of Light (Rank 1)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20344': {\n        name: \"Judgement of Light (Rank 2)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20345': {\n        name: \"Judgement of Light (Rank 3)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20346': {\n        name: \"Judgement of Light (Rank 4)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    }*/\n\n    '17546': {\n        name: \"Greater Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_22.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7254': {\n        name: \"Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_06.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17548': {\n        name: \"Greater Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_23.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7242': {\n        name: \"Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_44.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17544': {\n        name: \"Greater Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_20.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7240': {\n        name: \"Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_13.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17543': {\n        name: \"Greater Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_24.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7230': {\n        name: \"Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_16.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17549': {\n        name: \"Greater Arcane Protection Potion\",\n        type: \"Arcane\",\n        icon: \"inv_potion_83.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    //Trinkets\n    '26470': {\n        name: \"Scarab Brooch\",\n        type: \"Physical\",\n        icon: \"inv_misc_ahnqirajtrinket_06.jpg\",\n        mana: 0,\n        castTime: 0\n    }\n\n    // Healing Totem\n\n    // Seal of Light\n}\n\nexport const cooldownList = {\n    '14751': {\n        name: \"Inner Focus\",\n        type: \"Priest\",\n        icon: \"spell_frost_windwalkon.jpg\",\n        cooldown: 180000\n    },\n    '17116': {\n        name: \"Nature's Swiftness\",\n        type: \"Druid\",\n        icon: \"spell_nature_ravenform.jpg\",\n        cooldown: 180000\n    },\n    '16188': {\n        name: \"Nature's Swiftness\",\n        type: \"Restoration\",\n        icon: \"spell_nature_ravenform.jpg\",\n        cooldown: 180000\n    },\n    '29166': {\n        name: \"Innervate\",\n        type: \"Druid\",\n        icon: \"spell_nature_lightning.jpg\",\n        cooldown: 360000\n    },\n    '16190': {\n        name: \"Mana Tide Totem (Rank 1)\",\n        type: \"Restoration\",\n        icon: \"spell_frost_summonwaterelemental.jpg\",\n        cooldown: 300000\n    },\n    '17354': {\n        name: \"Mana Tide Totem (Rank 2)\",\n        type: \"Restoration\",\n        icon: \"spell_frost_summonwaterelemental.jpg\",\n        cooldown: 300000\n    },\n    '17359': {\n        name: \"Mana Tide Totem (Rank 3)\",\n        type: \"Restoration\",\n        icon: \"spell_frost_summonwaterelemental.jpg\",\n        cooldown: 300000\n    },\n    '20484': {\n        name: \"Rebirth (Rank 1)\",\n        type: \"Druid\",\n        icon: \"spell_nature_reincarnation.jpg\",\n        cooldown: 1800000\n    },\n    '20739': {\n        name: \"Rebirth (Rank 2)\",\n        type: \"Druid\",\n        icon: \"spell_nature_reincarnation.jpg\",\n        cooldown: 1800000\n    },\n    '20742': {\n        name: \"Rebirth (Rank 3)\",\n        type: \"Druid\",\n        icon: \"spell_nature_reincarnation.jpg\",\n        cooldown: 1800000\n    },\n    '20747': {\n        name: \"Rebirth (Rank 4)\",\n        type: \"Druid\",\n        icon: \"spell_nature_reincarnation.jpg\",\n        cooldown: 1800000\n    },\n    '20748': {\n        name: \"Rebirth (Rank 5)\",\n        type: \"Druid\",\n        icon: \"spell_nature_reincarnation.jpg\",\n        cooldown: 1800000\n    },\n    '740': {\n        name: \"Tranquility (Rank 1)\",\n        type: \"Druid\",\n        icon: \"spell_nature_tranquility.jpg\",\n        cooldown: 300000\n    },\n    '8918': {\n        name: \"Tranquility (Rank 2)\",\n        type: \"Druid\",\n        icon: \"spell_nature_tranquility.jpg\",\n        cooldown: 300000\n    },\n    '9862': {\n        name: \"Tranquility (Rank 3)\",\n        type: \"Druid\",\n        icon: \"spell_nature_tranquility.jpg\",\n        cooldown: 300000\n    },\n    '9863': {\n        name: \"Tranquility (Rank 4)\",\n        type: \"Druid\",\n        icon: \"spell_nature_tranquility.jpg\",\n        cooldown: 300000\n    },\n    '20554': {\n        name: \"Berserking\",\n        type: \"Racial\",\n        icon: \"racial_troll_berserk.jpg\",\n        cooldown: 180000\n    },\n    '633': {\n        name: \"Lay on Hands (Rank 1)\",\n        type: \"Paladin\",\n        icon: \"spell_holy_layonhands.jpg\",\n        cooldown: 3600000\n    },\n    '2800': {\n        name: \"Lay on Hands (Rank 2)\",\n        type: \"Paladin\",\n        icon: \"spell_holy_layonhands.jpg\",\n        cooldown: 3600000\n    },\n    '10310': {\n        name: \"Lay on Hands (Rank 3)\",\n        type: \"Paladin\",\n        icon: \"spell_holy_layonhands.jpg\",\n        cooldown: 3600000\n    },\n    '19752': {\n        name: \"Divine Intervention\",\n        type: \"Paladin\",\n        icon: \"spell_nature_timestop.jpg\",\n        cooldown: 3600000\n    },\n    '642': {\n        name: \"Divine Shield (Rank 1)\",\n        type: \"Paladin\",\n        icon: \"spell_holy_divineintervention.jpg\",\n        cooldown: 300000\n    },\n    '1020': {\n        name: \"Divine Shield (Rank 2)\",\n        type: \"Paladin\",\n        icon: \"spell_holy_divineintervention.jpg\",\n        cooldown: 300000\n    },\n    '498': {\n        name: \"Divine Protection (Rank 1)\",\n        type: \"Paladin\",\n        icon: \"spell_holy_restoration.jpg\",\n        cooldown: 300000\n    },\n    '5573': {\n        name: \"Divine Protection (Rank 2)\",\n        type: \"Paladin\",\n        icon: \"spell_holy_restoration.jpg\",\n        cooldown: 300000\n    },\n    '1022': {\n        name: \"Blessing of Protection (Rank 1)\",\n        type: \"Paladin\",\n        icon: \"spell_holy_sealofprotection.jpg\",\n        cooldown: 300000\n    },\n    '5599': {\n        name: \"Blessing of Protection (Rank 2)\",\n        type: \"Paladin\",\n        icon: \"spell_holy_sealofprotection.jpg\",\n        cooldown: 300000\n    },\n    '10278': {\n        name: \"Blessing of Protection (Rank 3)\",\n        type: \"Paladin\",\n        icon: \"spell_holy_sealofprotection.jpg\",\n        cooldown: 300000\n    },\n    '23734': {\n        name: \"Natural Alignment Crystal\",\n        type: \"Trinket\",\n        icon: \"inv_misc_gem_03.jpg\",\n        cooldown: 300000\n    },\n    '26467': {\n        name: \"Scarab Brooch\",\n        type: \"Trinket\",\n        icon: \"inv_misc_ahnqirajtrinket_06.jpg\",\n        cooldown: 180000\n    },\n    '24659': {\n        name: \"Zandalarian Hero Charm\",\n        type: \"Trinket\",\n        icon: \"inv_jewelry_necklace_13.jpg\",\n        cooldown: 120000\n    },\n    '24854': {\n        name: \"Enamored Water Spirit\",\n        type: \"Trinket\",\n        icon: \"inv_wand_01.jpg\",\n        cooldown: 180000\n    },\n    '20549': {\n        name: \"War Stomp\",\n        type: \"Racial\",\n        icon: \"ability_warstomp.jpg\",\n        cooldown: 120000\n    },\n    '16166': {\n        name: \"Elemental Mastery\",\n        type: \"Elemental\",\n        icon: \"spell_nature_wispheal.jpg\",\n        cooldown: 180000\n    },\n    '24268': {\n        name: \"Mar'li's Eye\",\n        type: \"Trinket\",\n        icon: \"inv_zulgurubtrinket.jpg\",\n        cooldown: 180000\n    },\n    '15604': {\n        name: \"Second Wind\",\n        type: \"Trinket\",\n        icon: \"inv_jewelry_talisman_06.jpg\",\n        cooldown: 900000\n    },\n    '28760': {\n        name: \"Warmth of Forgiveness\",\n        type: \"Trinket\",\n        icon: \"inv_trinket_naxxramas01.jpg\",\n        cooldown: 180000\n    },\n    '28862': {\n        name: \"Eye of Diminution\",\n        type: \"Trinket\",\n        icon: \"inv_trinket_naxxramas02.jpg\",\n        cooldown: 120000\n    },\n    '28780': {\n        name: \"Eye of the Dead\",\n        type: \"Trinket\",\n        icon: \"inv_trinket_naxxramas01.jpg\",\n        cooldown: 120000\n    },\n    '28779': {\n        name: \"The Restrained Essence of Sapphiron\",\n        type: \"Trinket\",\n        icon: \"inv_trinket_naxxramas06.jpg\",\n        cooldown: 120000\n    },\n    '23271': {\n        name: \"Talisman of Ephemeral Power\",\n        type: \"Trinket\",\n        icon: \"inv_misc_stonetablet_11.jpg\",\n        cooldown: 90000\n    },\n    '15646': {\n        name: \"Burst of Knowledge\",\n        type: \"Trinket\",\n        icon: \"inv_jewelry_amulet_07.jpg\",\n        cooldown: 900000\n    },\n    '27675': {\n        name: \"Draconic Infused Emblem\",\n        type: \"Trinket\",\n        icon: \"inv_jewelry_talisman_09.jpg\",\n        cooldown: 75000\n    }\n\n}\n\nexport const protectionPotionEnum = {\n    GNPP: 17546,\n    NPP: 7254,\n    GSPP: 17548,\n    SPP: 7242,\n    GFrPP: 17544,\n    FrPP: 7240,\n    GFPP: 17543,\n    FPP: 7230,\n    GAPP: 17549,\n}\nexport const protectionPotions = {\n    '17546': {\n        name: \"Greater Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_22.jpg\",\n        rank: 2,\n    },\n    '7254': {\n        name: \"Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_06.jpg\",\n        rank: 1,\n    },\n    '17548': {\n        name: \"Greater Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_23.jpg\",\n        rank: 2,\n    },\n    '7242': {\n        name: \"Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_44.jpg\",\n        rank: 1,\n    },\n    '17544': {\n        name: \"Greater Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_20.jpg\",\n        rank: 2,\n    },\n    '7240': {\n        name: \"Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_13.jpg\",\n        rank: 1,\n    },\n    '17543': {\n        name: \"Greater Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_24.jpg\",\n        rank: 2,\n    },\n    '7230': {\n        name: \"Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_16.jpg\",\n        rank: 1,\n    },\n    '17549': {\n        name: \"Greater Arcane Protection Potion\",\n        type: \"Arcane\",\n        icon: \"inv_potion_83.jpg\",\n        rank: 2,\n    }\n}\n\nconst sharedHealingEnchants = {\n    \"0\": {\n        2544: { score: 0, name: \"Arcanum of Focus (+8 heal)\"},\n        2543: { score: 0, name: \"Arcanum of Rapidity (1% haste)\"},\n        2545: { score: 0, name: \"Arcanum of Protection (1% dodge)\"},\n        1503: { score: 0, name: \"Lesser Arcanum of Constitution (+100hp)\"},\n        1505: { score: 0, name: \"Lesser Arcanum of Resilience (+20FR)\"},\n        1483: { score: 0, name: \"Lesser Arcanum of Rumination (+150mana)\"},\n        1504: { score: 0, name: \"Lesser Arcanum of Tenacity (+125 armor)\"},\n        1506: { score: 0, name: \"Lesser Arcanum of Voracity (+8 str)\"},\n        1507: { score: 0, name: \"Lesser Arcanum of Voracity (+8 stam)\"},\n        1508: { score: 0, name: \"Lesser Arcanum of Voracity (+8 agi)\"},\n        1509: { score: 0, name: \"Lesser Arcanum of Voracity (+8 int)\"},\n        1510: { score: 0, name: \"Lesser Arcanum of Voracity (+8 spi)\"}\n    },\n    \"2\": {  // Shoulders\n        2604: { score: 1, name: \"Zandalar Signet of Serenity\" }  // Zandalar Signet of Serenity\n    },\n    \"4\": {  // Chest\n        1891: { score: 1, name: \"Greater Stats (+4)\" },     // +4 Stats\n        1893: { score: 0.5, name: \"Major Mana (+100)\" },   // Major Mana\n        928: { score: 0.5, name: \"Stats (+3)\" },     // Stats\n        1892: { score: 0, name: \"Major Health (+100)\"}\n    },\n    \"6\": {\n        2544: { score: 0, name: \"Arcanum of Focus (+8 heal)\"},\n        2543: { score: 0, name: \"Arcanum of Rapidity (1% haste)\"},\n        2545: { score: 0, name: \"Arcanum of Protection (1% dodge)\"},\n        1503: { score: 0, name: \"Lesser Arcanum of Constitution (+100hp)\"},\n        1505: { score: 0, name: \"Lesser Arcanum of Resilience (+20FR)\"},\n        1483: { score: 0, name: \"Lesser Arcanum of Rumination (+150mana)\"},\n        1504: { score: 0, name: \"Lesser Arcanum of Tenacity (+125 armor)\"},\n        1506: { score: 0, name: \"Lesser Arcanum of Voracity (+8 str)\"},\n        1507: { score: 0, name: \"Lesser Arcanum of Voracity (+8 stam)\"},\n        1508: { score: 0, name: \"Lesser Arcanum of Voracity (+8 agi)\"},\n        1509: { score: 0, name: \"Lesser Arcanum of Voracity (+8 int)\"},\n        1510: { score: 0, name: \"Lesser Arcanum of Voracity (+8 spi)\"}\n    },\n    \"7\": {  // Feet\n        911: { score: 1, name: \"Minor Run Speed\" },    // Minor Run Speed\n        1887: { score: 0, name: \"Greater Agility (+7)\"},\n        851: { score: 0.5, name: \"Spirit (+5)\"},\n        929: { score: 0, name: \"Greater Stamina (+7)\"}\n    },\n    \"8\": {  // Bracers\n        2566: { score: 1, name: \"Healing Power (+24)\" },  // +24 Healing\n        1886: { score: 0, name: \"Superior Stamina (+9)\"},\n        1885: { score: 0, name: \"Superior Strength (+9)\"},\n        2565: { score: 0, name: \"Mana Regeneration (4mp5)\"},\n        1884: { score: 0, name: \"Superior Spirit (+9)\"},\n        1883: { score: 0, name: \"Greater Intellect (+7)\"}\n    },\n    \"9\": {  // Gloves\n        2617: { score: 1, name: \"Healing Power (+30)\" },  // +30 Healing\n        930: { score: 0, name: \"Riding Skill\" },\n        931: { score: 0, name: \"Minor Haste\" }\n    },\n    \"14\": {  // Back\n        2619: { score: 1, name: \"Greater Fire Resistance (+15)\" }, // Greater Fire Resistance\n        2620: { score: 1, name: \"Greater Nature Resistance (+15)\" }, // Greater Nature Resistance\n        1888: { score: 1, name: \"Greater Resistance (+5)\" },  // Greater Resistance\n        2621: { score: 1, name: \"Subtlety (-2% threat)\" },\n        2622: { score: 0, name: \"Dodge (1% dodge)\" },\n        1889: { score: 0, name: \"Superior Defense (+70 armor)\" }\n    },\n    \"15\": {  // Main Hand\n        2505: { score: 1, name: \"Healing Power (+55)\" },  // +55 Healing\n        2504: { score: 0, name: \"Spell Power (+30)\" },\n        2567: { score: 0, name: \"Mighty Spirit (+20)\" } ,\n        2568: { score: 0, name: \"Mighty Intellect (+22)\" } ,\n        1903: { score: 0, name: \"Major Spirit (+9)\" } ,\n        1904: { score: 0, name: \"Major Intellect (+9)\" } \n    },\n    \"16\": {  // Offhand\n        929: { score: 1, name: \"Greater Stamina (+7)\" },   // +7 Stamina\n        1890: { score: 1, name: \"Superior Spirit (+9)\" },\n        926: { score: 1, name: \"Frost Resistance (+8)\" }\n    }\n}\n\nexport const requiredEnchants = {\n    \"Priest\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2590: { score: 1, name: \"Prophetic Aura\" }  // Prophetic Aura\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2590: { score: 1, name: \"Prophetic Aura\" },  // Prophetic Aura\n        })\n    }),\n    \"Shaman\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2587: { score: 1, name: \"Vodouisant's Vigilant Embrace\" }  // Vodouisant's Vigilant Embrace\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2587: { score: 1, name: \"Vodouisant's Vigilant Embrace\" }  // Vodouisant's Vigilant Embrace\n        })\n    }),\n    \"Druid\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2591: { score: 1, name: \"Animist's Caress\" }  // Animist's Caress\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2591: { score: 1, name: \"Animist's Caress\" }  // Animist's Caress\n        })\n    }),\n    \"Paladin\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2584: { score: 1, name: \"Syncretist's Sigil\" }  // Syncretist's Sigil\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2584: { score: 1, name: \"Syncretist's Sigil\" }  // Syncretist's Sigil\n        })\n    })\n}\n\nexport const offhandFrills = {\n    23049: true,    // Sapphiron's Left Eye\n    23048: true,    // Sapphiron's Right Eye\n    23029: true,    // Noth's Frigid Heart\n    22937: true,    // Gem of Nerubis\n    22994: true,    // Digested Hand of Power\n    19366: true,    // Master Dragonslayer's Orb\n    21597: true,    // Royal Scepter of Vek'lor\n    23452: true,    // Grand Marshal's Tome of Power\n    23468: true,    // High Warlord's Tome of Destruction\n    23469: true,    // High Warlord's Tome of Mending\n    23453: true,    // Grand Marshal's Tome of Restoration\n    21666: true,    // Sartura's Might\n    17067: true,    // Ancient Cornerstone Grimoire\n    20582: true,    // Trance Stone\n    19142: true,    // Fire Runed Grimoire\n    21471: true,    // Talon of Furious Concentration\n    19922: true,    // Arlokk's Hoodoo Stick\n    19891: true,    // Jin'do's Bag of Whammies\n    19312: true,    // Lei of the Lifegiver\n    19315: true,    // Therazane's Touch\n    15942: true,    // Master's Rod\n    15989: true,    // Eternal Rod\n    15941: true,    // High Councillor's Scepter\n    15968: true,    // Elunarian Sphere\n    22329: true,    // Scepter of Interminable Focus\n    18523: true,    // Brightly Glowing Stone\n    13353: true,    // Book of the Dead\n    22253: true,    // Tome of the Lost\n    15988: true,    // Resplendent Orb\n    21185: true,    // Earthcalm Orb\n    23156: true,    // Blackwood's Thigh\n    18695: true,    // Spellbound Tome\n    15940: true,    // Elegant Scepter\n    13385: true,    // Tome of Knowledge\n    22319: true,    // Tome of Divine Right\n    15805: true,    // Penelope's Rose,\n    15987: true,    // Astral Orb\n    15931: true,    // Arcane Star\n    15857: true,    // Magebane Scion\n    11928: true    // Thaurissan's Royal Scepter\n}\n\nexport const worldBuffs = {\n    DragonHead: 22888,\n    Rend: 16609,\n    HoH: 24425,\n    Songflower: 15366,\n    Moldar: 22818,\n    Fengus: 22817,\n    Slipkik: 22820,\n    DMF: 23768,\n    '22888': {\n        name: \"Rallying Cry of the Dragonslayer\",\n        icon: \"inv_misc_head_dragon_01.jpg\",\n        display: true\n    },\n    '16609': {\n        name: \"Warchief's Blessing\",\n        icon: \"spell_arcane_teleportorgrimmar.jpg\",\n        display: true\n    },\n    '24425': {\n        name: \"Spirit of Zandalar\",\n        icon: \"ability_creature_poison_05.jpg\",\n        display: true\n    },\n    '15366': {\n        name: \"Songflower Serenade\",\n        icon: \"spell_holy_mindvision.jpg\",\n        display: true\n    },\n    '22818': {\n        name: \"Mol'dar's Moxie\",\n        icon: \"spell_nature_massteleport.jpg\",\n        display: true\n    },\n    '22817': {\n        name: \"Fengus' Ferocity\",\n        icon: \"spell_nature_undyingstrength.jpg\",\n        display: true\n    },\n    '22820': {\n        name: \"Slip'kik's Savvy\",\n        icon: \"spell_holy_lesserheal02.jpg\",\n        display: true\n    },\n    '23768': {\n        name: \"Sayge's Dark Fortune\", // of Damage\n        icon: \"inv_misc_orb_02.jpg\",\n        otherRanks: [\n            '23769',    // of Resistance\n            '23767',    // of Armor\n            '23766',    // of Intelligence\n            '23738',    // of Spirit\n            '23737',    // of Stamina\n            '23735',    // of Strength\n            '23736',    // of Agility\n        ]\n    },\n}\n\nexport const dispelSpells = {\n    'Druid': {\n        '8946': {\n            name: \"Cure Poison\",\n            icon: \"spell_nature_nullifypoison.jpg\"\n        },\n        '2893': {\n            name: \"Abolish Poison\",\n            icon: \"spell_nature_nullifypoison_02.jpg\"\n        },\n        '2782': {\n            name: \"Remove Curse\",\n            icon: \"spell_holy_removecurse.jpg\"\n        },\n    },\n    'Hunter': {\n        '19801': {\n            name: \"Tranquilizing Shot\",\n            icon: \"spell_nature_drowsy.jpg\",\n        },\n    },\n    'Mage': {\n        '475': {\n            name: \"Remove Lesser Curse\",\n            icon: \"spell_nature_removecurse.jpg\",\n        },\n    },\n    'Paladin': {\n        '1152': {\n            name: \"Purify\",\n            icon: \"spell_holy_purify.jpg\"\n        },\n        '4987': {\n            name: \"Cleanse\",\n            icon: \"spell_holy_renew.jpg\"\n        },\n    },\n    'Priest': {\n        '988': {\n            name: \"Dispel Magic\",   // Rank 2\n            icon: \"spell_holy_dispelmagic.jpg\",\n            otherRanks: [\n                '527',      // Rank 1\n            ]\n        },\n        '528': {\n            name: \"Cure Disease\",\n            icon: \"spell_holy_nullifydisease.jpg\"\n        },\n        '552': {\n            name: \"Abolish Disease\",\n            icon: \"spell_nature_nullifydisease.jpg\"\n        },\n    },\n    'Rogue': {\n\n    },\n    'Shaman': {\n        '8012': {\n            name: \"Purge\",  // Rank 2\n            icon: \"spell_nature_purge.jpg\",\n            otherRanks: [\n                '370',      // Rank 1\n            ]\n        },\n        '526': {\n            name: \"Cure Poison\",\n            icon: \"spell_nature_nullifypoison.jpg\"\n        },\n        '2870': {\n            name: \"Cure Disease\",\n            icon: \"spell_nature_removedisease.jpg\"\n        },\n        '8166': {\n            name: \"Poison Cleansing Totem\",\n            icon: \"spell_nature_poisoncleansingtotem.jpg\"\n        },\n        '8170': {\n            name: \"Disease Cleansing Totem\",\n            icon: \"spell_nature_diseasecleansingtotem.jpg\"\n        },\n    },\n    'Warlock': {\n\n    },\n    'Warrior': {\n\n    }\n}\n\nexport const interruptSpells = {\n    'Druid': {\n        '8983': {\n            name: \"Bash\",\n            icon: \"ability_druid_bash.jpg\"\n        },\n        '16979': {\n            name: \"Feral Charge\",\n            icon: \"ability_hunter_pet_bear.jpg\"\n        },\n    },\n    'Hunter': {\n        \n    },\n    'Mage': {\n        '2139': {\n            name: \"Counterspell\",\n            icon: \"spell_frost_iceshock.jpg\",\n        }\n    },\n    'Paladin': {\n        '10308': {\n            name: \"Hammer of Justice\",\n            icon: \"spell_holy_sealofmight.jpg\"\n        },\n    },\n    'Priest': {\n        '15487': {\n            name: \"Silence\",\n            icon: \"spell_shadow_impphaseshift.jpg\"\n        },\n    },\n    'Rogue': {\n        '1769': {\n            name: \"Kick\",   // Rank 4\n            icon: \"ability_kick.jpg\",\n            otherRanks: [\n                '1766',     // Rank 1\n                '1767',     // Rank 2\n                '1768',     // Rank 3\n            ],\n        },\n    },\n    'Shaman': {\n        '10414': {\n            name: \"Earth Shock\",    // Rank 7\n            icon: \"spell_nature_earthshock.jpg\",\n            otherRanks: [\n                '8042',     // Rank 1\n                '8044',     // Rank 2\n                '8045',     // Rank 3\n                '8046',     // Rank 4\n                '10412',    // Rank 5\n                '10413',    // Rank 6\n            ],\n        }\n    },\n    'Warlock': {\n\n    },\n    'Warrior': {\n        '6552': {\n            name: \"Pummel\", // Rank 2\n            icon: \"inv_gauntlets_04.jpg\",\n            otherRanks: [\n                '6554',     // Rank 1\n            ]\n        },\n    }\n}","export function msToTime(s) {\n    var ms = s % 1000;\n    s = (s - ms) / 1000;\n    var secs = s % 60;\n    s = (s - secs) / 60;\n    var mins = s % 60;\n\n    return mins + ':' + (secs < 10 ? \"0\" : \"\") + secs;\n}\n\nexport function abbreviateNumber(num) {\n    if (num > 1000) {\n        return (num / 1000).toFixed(1) + \"k\";\n    }\n\n    return num;\n}\n\nexport function asPercentage(num, decimals = 1) {\n    return (num*100).toFixed(decimals) + \"%\";\n}\n\nexport function removeDuplicates(array, keyAccessFunction) {\n    if (!keyAccessFunction || typeof(keyAccessFunction) !== 'function') {\n        keyAccessFunction = (obj) => obj;\n    }\n\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(keyAccessFunction(a[i]) === keyAccessFunction(a[j]))\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n};\n\nexport function countNonNull(...params) {\n    return params.reduce((agg, obj) => {\n        if (obj) {\n            agg++\n        }\n\n        return agg;\n    }, 0);\n}\n\nexport function sumNonNull(...params) {\n    return params.reduce((agg, obj) => {\n        if (obj) {\n            agg += obj;\n        }\n\n        return agg;\n    }, 0);\n}","import {offhandFrills} from \"./data\";\nimport {removeDuplicates} from \"./utils\";\n\nexport class WarcraftLogLoader {\n    constructor(reportId = null) {\n        this.key = \"e422378c419a25cc1accb41845b259ab\";\n        this.domain = \"https://classic.warcraftlogs.com/v1/\";\n        this.reportId = reportId;\n        this.Results = {};\n        this._loadedStatus = {\n            fights: false,\n            characterSummaries: false,\n            deaths: false,\n            character: {\n                details: {},\n                casts: {},\n                buffs: {},\n                damageTaken: {},\n                protectionPots: {},\n            }\n        }\n    }\n\n    static Load(reportId) {\n        return new WarcraftLogLoader(reportId);\n    }\n\n    setReport(reportId) {\n        this.reportId = reportId;\n    }\n\n    loadFights() {\n        if (this._loadedStatus.fights) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return fetch(this.domain + \"report/fights/\" + this.reportId + \"?api_key=\" + this.key)\n            .then(res => res.json())\n            .then(res => {\n                this.Results.Fights = res.fights;\n                this.Results.Characters = res.friendlies.reduce((acc,obj) => {\n                    acc[obj.id] = obj;\n\n                    acc[obj.id].raidStartTime = res.fights[obj.fights[0].id-1].start_time;\n\n                    return acc;\n                }, {});\n                // Add pet information to their owner\n                res.friendlyPets.forEach((pet) => {\n                    if (!this.Results.Characters[pet.petOwner])\n                        return;\n\n                    this.Results.Characters[pet.petOwner].pets = [...(this.Results.Characters[pet.petOwner].pets || []),pet];\n                })\n                this.Results.startTime = res.fights[0].start_time;\n                this.Results.endTime = res.fights[res.fights.length-1].end_time;\n\n                this._loadedStatus.fights = true;\n\n                return this;\n            });\n    }\n\n    loadCharacterSummary() {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.characterSummaries) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime)\n        .then(response => response.json())\n        .then(data => {\n            let playerData = [];\n\n            if (data.playerDetails?.tanks) {\n                playerData = data.playerDetails.tanks.reduce(this._reducePlayerDetails(\"tank\"), {});\n            }\n\n            if (data.playerDetails?.healers) {\n                playerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), playerData);\n            }\n\n            if (data.playerDetails?.dps) {\n                playerData = data.playerDetails.dps.reduce(this._reducePlayerDetails(\"dps\"), playerData);\n            }\n\n            for (const [key,value] of Object.entries(playerData)) {\n                let playerInfo = this.Results.Characters[key];\n\n                playerInfo.roles = value.roles;\n                playerInfo.intellect = value.intellect;\n                playerInfo.armor = value.armor;\n                playerInfo.stamina = value.stamina;\n                playerInfo.strength = value.strength;\n                playerInfo.agility = value.agility;\n                playerInfo.weaponEnchant = value.weaponEnchant;\n                playerInfo.enchants = value.enchants;\n            }\n\n            this._loadedStatus.characterSummaries = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    loadDeaths() {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.deaths) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/deaths/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime)\n        .then(response => response.json())\n        .then(data => {\n            data.entries.forEach((obj) => {\n                let character = this.Results.Characters[obj.id];\n\n                if (!character) {\n                    return;\n                }\n\n                character.deaths = [...(character.deaths || []),obj];\n            })\n\n            this._loadedStatus.deaths = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    loadCharacterDetails(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.details[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return Promise.all([\n            this._loadCharacterCasts(playerid),\n            this._loadCharacterBuffs(playerid),\n            this._loadProtectionPots(playerid),\n            //this._loadCharacterDamageTaken(playerid),\n        ])\n        .then((_data) => {\n            this._loadedStatus.character.details[playerid] = true;\n\n            return new Promise((resolve, _reject) => resolve(this))\n        })\n    }\n\n    _loadCharacterCasts(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.casts[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            data.events.forEach((obj) => {\n                let character = this.Results.Characters[playerid];\n\n                if (!character) {\n                    return;\n                }\n\n                character.casts = [...(character.casts || []),obj];\n            })\n\n            this._loadedStatus.character.casts[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadCharacterBuffs(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.buffs[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/buffs/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            data.auras.forEach((obj) => {\n                let character = this.Results.Characters[playerid];\n\n                if (!character) {\n                    return;\n                }\n\n                character.buffs = {...character.buffs, [obj.guid]: obj};\n            })\n\n            this._loadedStatus.character.buffs[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadCharacterDamageTaken(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.damageTaken[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/damage-taken/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            \n            this._loadedStatus.character.damageTaken[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadProtectionPots(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.protectionPots[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => response.json())\n        .then(data => {\n            let character = this.Results.Characters[playerid];\n\n            if (!character) {\n                return;\n            }\n\n            if (!character.protectionPotions) {\n                character.protectionPotions = {};\n            }\n\n            data.events.forEach((obj) => {\n                let protPot = character.protectionPotions[obj.ability.guid];\n                if (!protPot) {\n                    character.protectionPotions[obj.ability.guid] = {\n                        amount: 0,\n                        firstAbsorb: {},\n                    };\n                    protPot = character.protectionPotions[obj.ability.guid]\n                }\n\n                protPot.amount += obj.amount;\n                if (!protPot.firstAbsorb[obj.fight]) {\n                    protPot.firstAbsorb[obj.fight] = obj.timestamp;\n                }\n            });\n\n            this._loadedStatus.character.protectionPots[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    getResults() {\n        return this.Results;\n    }\n\n    getCharacter(characterid) {\n        return this.Results.Characters[characterid];\n    }\n\n    getFights() {\n        return fetch(this.domain + \"report/fights/\" + this.reportId + \"?api_key=\" + this.key)\n                .then(res => res.json());\n    }\n\n    getHealEvents(start_time, end_time) {\n        return Promise.all([\n            this.getClassHealEvents(start_time, end_time, \"priest\"),\n            this.getClassHealEvents(start_time, end_time, \"druid\"),\n            this.getClassHealEvents(start_time, end_time, \"shaman\"),\n            this.getClassHealEvents(start_time, end_time, \"paladin\"),\n\n            this.getClassCastEvents(start_time, end_time, \"priest\"),\n            this.getClassCastEvents(start_time, end_time, \"druid\"),\n            this.getClassCastEvents(start_time, end_time, \"shaman\"),\n            this.getClassCastEvents(start_time, end_time, \"paladin\"),\n\n            //this.getManaRegeneration(start_time, end_time),\n\n            this.getProtectionPotionHealingEvents(start_time, end_time),\n            this.getProtectionPotionCastEvents(start_time, end_time),\n        ])\n        //.then(res => Promise.all(res.map(response => response.json())))\n        .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n            accum = [...accum, ...current];\n\n            return accum;\n        }, []))));\n    }\n\n    _reducePlayerDetails(role) {\n        return (acc, obj) => {\n        let playerId = obj[\"id\"];\n\n                const slots = {\n                    0: { enchantable: true, name: \"Head\" },\n                    1: { enchantable: false, name: \"Neck\" },\n                    2: { enchantable: true, name: \"Shoulders\" },\n                    3: { enchantable: false, name: \"Shirt\" },\n                    4: { enchantable: true, name: \"Chest\" },\n                    5: { enchantable: false, name: \"Waist\" },\n                    6: { enchantable: true, name: \"Legs\" },\n                    7: { enchantable: true, name: \"Feet\" },\n                    8: { enchantable: true, name: \"Arms\" },\n                    9: { enchantable: true, name: \"Hands\" },\n                    10: { enchantable: false, name: \"Ring 1\" },\n                    11: { enchantable: false, name: \"Ring 2\" },\n                    12: { enchantable: false, name: \"Trinket 1\" },\n                    13: { enchantable: false, name: \"Trinket 2\" },\n                    14: { enchantable: true, name: \"Back\" },\n                    15: { enchantable: true, name: \"Main Hand\" },\n                    16: { enchantable: true, name: \"Off Hand\" },\n                    17: { enchantable: false, name: \"Ranged\" },\n                    18: { enchantable: false, name: \"Tabard\" }\n                };\n\n                let enchants = obj.combatantInfo?.gear?.reduce((enchant, gear) => {\n                    \n                    if (slots[gear.slot].enchantable && gear.id !== 0 && !offhandFrills[gear.id])\n                    {\n                        enchant.permanentEnchants.push({\n                            slot: gear.slot, \n                            slotname: slots[gear.slot].name, \n                            id: gear.permanentEnchant, \n                            name: gear.permanentEnchantName, \n                            key: gear.id + \"_\" + gear.permanentEnchant,\n                            gearId: gear.id,\n                            gearName: gear.name,\n                        })\n                    }\n\n                    if (gear.slot === 15) {\n                        enchant.weaponEnchant.id = gear.temporaryEnchant;\n                        enchant.weaponEnchant.name = gear.temporaryEnchantName;\n                    }\n\n                    return enchant;\n                }, { permanentEnchants: [], weaponEnchant: {}});\n\n                if (!acc[playerId]) {\n                    acc[playerId] = {\n                        id: playerId,\n                        name: obj.name,\n                        type: obj.type,\n                        roles: [role],\n                        intellect: obj.combatantInfo?.stats?.Intellect?.max,\n                        armor: obj.combatantInfo?.stats?.Armor?.max,\n                        stamina: obj.combatantInfo?.stats?.Stamina?.max,\n                        strength: obj.combatantInfo?.stats?.Strength?.max,\n                        agility: obj.combatantInfo?.stats?.Agility?.max,\n                        weaponEnchant: enchants?.weaponEnchant,\n                        enchants: enchants?.permanentEnchants\n                    };\n                }\n                else {\n                    acc[playerId].roles.push(role);\n                    if (!acc[playerId].weaponEnchant) {\n                        acc[playerId].weaponEnchant = enchants?.weaponEnchant;\n                    }\n                    acc[playerId].enchants = removeDuplicates([...(acc[playerId].enchants || []), ...(enchants?.permanentEnchants || [])], x => x.key);\n\n                }\n\n                return acc;\n        }\n    }\n\n    getCharacterInfo(start_time, end_time) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let playerData = [];\n            if (!data.playerDetails) {\n                resolve(playerData);\n                return;\n            }\n\n            if (data.playerDetails.tanks) {\n                playerData = data.playerDetails.tanks.reduce(this._reducePlayerDetails(\"tank\"), {});\n            }\n\n            if (data.playerDetails.healers) {\n                playerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), playerData);\n            }\n\n            if (data.playerDetails.dps) {\n                playerData = data.playerDetails.dps.reduce(this._reducePlayerDetails(\"dps\"), playerData);\n            }\n\n            resolve(playerData);\n        }).catch(reject));\n    }\n\n    getHealerInfo(start_time, end_time) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let healerData = [];\n            if (!data.playerDetails.healers) {\n                resolve(healerData);\n                return;\n            }\n\n            healerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), {});\n\n            resolve(healerData);\n        }).catch(reject));\n    }\n\n    getTankInfo(start_time, end_time, context = null) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let tankData = [];\n            if (data.playerDetails.tanks) {\n\n                tankData = data.playerDetails.tanks.reduce((acc, obj) => {\n                    let playerId = obj[\"id\"];\n                    \n                    acc[playerId] = {\n                        id: playerId,\n                        name: obj.name,\n                        type: obj.type,\n                        armor: obj.combatantInfo?.stats?.Armor?.max,\n                        stamina: obj.combatantInfo?.stats?.Stamina?.max,\n                        strength: obj.combatantInfo?.stats?.Strength?.max,\n                        agility: obj.combatantInfo?.stats?.Agility?.max\n                    };\n\n                    return acc;\n                }, {});\n            }\n\n            resolve({context: context, data: tankData});\n        }).catch(reject));\n    }\n\n    /* getManaRegeneration(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/resources/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&abilityid=100\")\n        .then(response =>  {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events.filter(obj => obj.ability.guid === 18194));\n\n                if (data.nextPageTimestamp) {\n                    this.getManaRegeneration(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    } */\n\n    getProtectionPotionHealingEvents(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getProtectionPotionHealingEvents(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getProtectionPotionCastEvents(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getProtectionPotionCastEvents(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getClassHealEvents(start_time, end_time, sourceClass, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceclass=\" + sourceClass)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getClassHealEvents(data.nextPageTimestamp, end_time, sourceClass, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getClassCastEvents(start_time, end_time, sourceClass, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceclass=\" + sourceClass)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getClassCastEvents(data.nextPageTimestamp, end_time, sourceClass, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getCharacterCastTable(start_time, end_time, sourceid, sourcename) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceid=\" + sourceid)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                resolve({ id: sourceid, name: sourcename, entries: data.entries })\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getArmorBuffUptime(start_time, end_time, context = null) {\n        return Promise.all([\n            this.getBuffUptime(start_time, end_time, 15359), // Inspiration (Rank 3)\n            this.getBuffUptime(start_time, end_time, 16237), // Ancestral Fortitude (Rank 3)\n        ])\n        .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n            current.reduce((innerAccum, character) => {\n                if (!innerAccum[character.id]) {\n                    innerAccum[character.id] = character;\n                }\n                else {\n                    // Join together\n                    let existingCharacter = innerAccum[character.id];\n                    existingCharacter.totalUptime += character.totalUptime;\n                    existingCharacter.totalUses += character.totalUses;\n                    existingCharacter.bands = [...existingCharacter.bands, ...character.bands];\n                    existingCharacter.bands = existingCharacter.bands.sort((x, y) => x.startTime - y.startTime);\n                }\n\n                return innerAccum;\n            }, accum)\n\n            return accum;\n        }, {}))))\n        .then(results => new Promise((resolve,_reject) => resolve({context: context, data: results})));\n    }\n\n    getBuffUptime(start_time, end_time, abilityid) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/buffs/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&abilityid=\" + abilityid)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                resolve(data.auras)\n            }).catch(reject);\n        }).catch(reject));\n    }\n}\n\nexport let LogLoader = new WarcraftLogLoader();","import {Component} from \"react\";\n\nexport class ProgressBar extends Component {\n\n    render() {\n        const {summary, maxHeals} = this.props;\n\n        return (\n            <div className=\"bar\" style={{width: (summary.getTotalHeals() / maxHeals * 100).toFixed(2) + \"%\"}}>\n                <div className=\"bar_effective\" style={{width: summary.getEffectivePercent()+'%'}}></div>\n                <div className=\"bar_overheal\" style={{width: (summary.getOverhealPercent() - summary.getWastedPercent())+'%'}}>&nbsp;</div>\n                <div className=\"bar_wasted\" style={{width: summary.getWastedPercent()+'%'}}>&nbsp;</div>\n            </div>\n        )\n    }\n}","import {Component} from \"react\";\nimport {abbreviateNumber} from \"../utils\";\nimport {ProgressBar} from \"../ProgressBar\";\n\nexport class HealerFightSummary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            summary: props.healer.summary,\n            spells: props.healer.spells,\n            name: props.healer.name,\n            manaOil: props.healer.manaOil,\n            enchants: props.healer.enchants,\n            id: props.healer.id,\n            classType: props.healer.classType,\n            isExpanded: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            isExpanded: !this.state.isExpanded\n        })\n    }\n\n    render() {\n        const {id, name, classType, manaOil, summary, spells, isExpanded, enchants} = this.state;\n        const {row, maxHeals} = this.props;\n\n        let maxSpellHeals = spells.reduce((agg,obj) => {\n            if (obj.summary.getTotalHeals() > agg) {\n                agg = obj.summary.getTotalHeals();\n            }\n            return agg;\n        }, 0);\n\n        let enchantScore = enchants.reduce((acc, obj) => {\n            acc.score += obj.score;\n            acc.count++;\n\n            if (acc.score !== acc.count) {\n                acc.colour = \"yellow\";\n            }\n\n            if (acc.score === 0) {\n                acc.colour = \"red\";\n            }\n\n            acc.tooltip += obj.slot + \": \" \n                + (obj.name ? obj.name : \"(none)\") \n                + (obj.score === 1 ? \" <span class='tick'>✔</span>\" : obj.score === 0 ? \" <span class='cross'>✖</span>\" : \" <span class='alternative'>✔</span>\")\n                + \"<br />\";\n\n            return acc;\n        }, { score: 0, count: 0, colour: \"green\", tooltip: \"\"})\n\n        return (\n            <>\n                <tr key={id} className={classType + \" character \" + (row % 2 === 0 ? \"even\" : \"odd\")} onClick={this.toggle}>\n                    <td className=\"healer_name\">{name}</td>\n                    <td className={\"healer_enchants_\" + enchantScore.colour} data-tip={enchantScore.tooltip} data-place='right' data-class='enchant_tooltip' data-html={true}>{enchantScore.score}/{enchantScore.count}</td>\n                    <td className=\"healer_consumes_manapot center\">{summary.manaPots}</td>\n                    <td className=\"healer_consumes_runes center\">{summary.runes}</td>\n                    <td className={\"healer_consumes_manaoil center \" + (manaOil ? \"tick\" : \"cross\")}>{manaOil ? \"✔\" : \"✖\"}</td>\n                    <td className=\"right\">{abbreviateNumber(summary.manaGained)}</td>\n                    <td className=\"healer_cooldowns\">\n                        {summary.cooldowns.map((cooldown, idx) => (\n                            <img key={idx} className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + cooldown.icon} alt={cooldown.name} data-tip={cooldown.name} />\n                        ))}\n                    </td>\n                    <td className=\"healer_casts_started center\">{summary.castsStarted}</td>\n                    <td className=\"healer_casts_completed center\">{summary.castsCompleted}</td>\n                    <td className=\"healer_casts percent right\">{summary.getCastsPercent()}%</td>\n                    <td className=\"healer_amount\">\n                        <ProgressBar summary={summary} maxHeals={maxHeals} />\n                    </td>\n                    <td className={\"healer_effective amount right\" + (summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.effectiveHeals)}</td>\n                    <td className={\"healer_effective percent right\" + (summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{summary.getEffectivePercent()}%</td>\n                    <td className={\"healer_overheal amount right\" + (summary.overHeal === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.overHeal)}</td>\n                    <td className={\"healer_overheal percent right\" + (summary.overHeal === 0 ? \" empty\" : \"\")}>{summary.getOverhealPercent()}%</td>\n                    <td className={\"healer_wasted amount right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.wastedHeals)}</td>\n                    <td className={\"healer_wasted percent right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{summary.getWastedPercent()}%</td>\n                    <td className={\"healer_wasted percent right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.wastedMana)}</td>\n                </tr>\n\n                {isExpanded && spells.sort((x,y) => y.summary.effectiveHeals -x.summary.effectiveHeals)\n                                     .map((spell) => (\n                    <tr key={spell.id} className={spell.type + \" spell \" + (row % 2 === 0 ? \"even\" : \"odd\")}>\n                        <td className=\"healer_name\" colSpan=\"7\"><img className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + spell.icon} alt={spell.name} /> {spell.name}</td>\n                        <td className=\"healer_casts_started center\">{spell.summary.castsStarted}</td>\n                        <td className=\"healer_casts_completed center\">{spell.summary.castsCompleted}</td>\n                        <td className=\"healer_casts percent right\">{spell.summary.getCastsPercent()}%</td>\n                        <td className=\"healer_amount\">\n                            <ProgressBar summary={spell.summary} maxHeals={maxSpellHeals} />\n                        </td>\n                        <td className={\"healer_effective amount right\" + (spell.summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.effectiveHeals)}</td>\n                        <td className={\"healer_effective percent right\" + (spell.summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{spell.summary.getEffectivePercent()}%</td>\n                        <td className={\"healer_overheal amount right\" + (spell.summary.overHeal === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.overHeal)}</td>\n                        <td className={\"healer_overheal percent right\" + (spell.summary.overHeal === 0 ? \" empty\" : \"\")}>{spell.summary.getOverhealPercent()}%</td>\n                        <td className={\"healer_wasted amount right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.wastedHeals)}</td>\n                        <td className={\"healer_wasted percent right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{spell.summary.getWastedPercent()}%</td>\n                        <td className={\"healer_wasted percent right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.wastedMana)}</td>\n                    </tr>\n                ))}\n            </>\n        )\n    }\n}","import {healingSpells, cooldownList} from \"../data\";\n\nexport class HealSummary {\n    constructor() {\n        this.manaPots = 0;\n        this.runes = 0;\n        this.manaGained = 0;\n        this.castsStarted = 0;\n        this.castsCompleted = 0;\n        this.effectiveHeals = 0;\n        this.overHeal = 0;\n        this.wastedHeals = 0;\n        this.wastedMana = 0;\n        this.cooldowns = [];\n    }\n\n    getCastsPercent() { return (this.castsStarted > 0 ? this.castsCompleted / this.castsStarted * 100 : 0).toFixed(2); }\n    getTotalHeals() { return this.effectiveHeals + this.overHeal; }\n    getEffectivePercent() { return (this.getTotalHeals() > 0 ? this.effectiveHeals / this.getTotalHeals() * 100 : 0).toFixed(2); }\n    getOverhealPercent() { return (this.getTotalHeals() > 0 ? this.overHeal / this.getTotalHeals() * 100 : 0).toFixed(2); }\n    getWastedPercent() { return (this.getTotalHeals() > 0 ? this.wastedHeals / this.getTotalHeals() * 100 : 0).toFixed(2); }\n}\n\nexport function getHealSummary(collection, event, getOrCreate) {\n    \n    let aggregate = getOrCreate(collection, event);\n\n    if (!aggregate) {\n        return;\n    }\n\n    if (event.ability.guid === 27869 || event.ability.guid === 16666) {\n        aggregate.runes++;\n        aggregate.manaGained += 1500;\n    }\n\n    if (event.ability.guid === 17531) {\n        aggregate.manaPots++;\n        aggregate.manaGained += 2250;\n    }\n\n    let spellInfo = healingSpells[event.ability.guid];\n\n    if (spellInfo)\n    {\n        if (event.type === \"begincast\") {\n            aggregate.castsStarted++;\n        } else if (event.type === \"cast\") {\n            if (spellInfo.castTime === 0) {\n                aggregate.castsStarted++;\n            }\n            aggregate.castsCompleted++;\n        }\n    } else {\n        console.log(\"Not healing spell: \" + event.ability.name + \" (\" + event.ability.guid + \")\");\n    }\n\n    if (event.type === \"heal\" || event.type === \"absorbed\") {\n        if (event.amount) {\n            aggregate.effectiveHeals += event.amount;\n        }\n        if (event.overheal) {\n            aggregate.overHeal += event.overheal;\n            if (event.amount === 0) {\n                aggregate.wastedHeals += event.overheal;\n                if (event.tick && spellInfo && spellInfo.ticks) {\n                    aggregate.wastedMana += Math.round(spellInfo.mana * spellInfo.tickPortion / spellInfo.ticks);\n                } else {\n                    aggregate.wastedMana += spellInfo ? spellInfo.mana : 0;\n                }\n            }\n        }\n    }\n\n    if (event.type === \"cast\" && cooldownList[event.ability.guid]) {\n        aggregate.cooldowns.push(cooldownList[event.ability.guid]);\n    }\n\n}","import \"./FightReport.scss\";\nimport {Component} from \"react\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport {msToTime, abbreviateNumber} from \"../utils\";\nimport { HealerFightSummary } from \"./HealerFightSummary\";\nimport {getHealSummary, HealSummary} from \"./healSummary\";\nimport {healingSpells, protectionPotions, requiredEnchants} from \"../data\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport class FightReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            reportId: props.reportId,\n            fight: props.fight,\n            events: [],\n            healers: [],\n            isLoaded: false,\n            healSummary: null,\n            expanded: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    loadData() {\n        const { reportId, fight, isLoaded } = this.state;\n        const {characters} = this.props;\n        if (!reportId || !fight || isLoaded)\n            return;\n\n        let healerInfo = {};\n\n        LogLoader.getHealerInfo(fight.start_time, fight.end_time)\n        .then(\n            (healers) => {\n                healerInfo = healers;\n            }\n        );\n\n        LogLoader.getHealEvents(fight.start_time, fight.end_time)\n        .then(\n            (result) => {\n                let eventsByCharacter = this.getCharactersFromEvents(result);\n                let characterList = [];\n\n                for (const [key, value] of Object.entries(eventsByCharacter.characters))\n                {\n                    let characterName;\n                    let characterClass;\n                    let characterManaOil = false;\n                    let enchants = [];\n                    if (characters[key]) {\n                        characterName = characters[key].name;\n                        characterClass = characters[key].type;\n                        if (healerInfo[key]) {\n                            characterManaOil = healerInfo[key].weaponEnchant.id === 2629;\n\n                            const bisEnchants = requiredEnchants[characterClass];\n\n                            enchants = healerInfo[key].enchants.map((obj) => {\n                                return {\n                                    slot: obj.slotname,\n                                    score: bisEnchants[obj.slot][obj.id] ? bisEnchants[obj.slot][obj.id].score : 0,\n                                    name: bisEnchants[obj.slot][obj.id] ? bisEnchants[obj.slot][obj.id].name : obj.name\n                                }\n\n                            })\n                        }\n                    }\n\n                    if (key === '9999') {\n                        characterName = \"Protection Potions\";\n                        characterClass = \"Consumable\";\n                    }\n\n                    characterList.push({ \n                        id: key,\n                        name: characterName,\n                        classType: characterClass,\n                        manaOil: characterManaOil,\n                        enchants: enchants,\n                        summary: value.total,\n                        spells: Object.entries(value.spells).map(keyValuePair => keyValuePair[1])\n                    })\n                }\n\n                this.setState({\n                    isLoaded: true,\n                    events: result.events,\n                    healSummary: eventsByCharacter.total,\n                    healers: characterList\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    getCharactersFromEvents(events) {\n        const {pets} = this.props;\n\n        let groupByCharacter = events.reduce((acc, obj) => {\n            getHealSummary(acc, obj, (collection, _event) => collection.total);  // Save to totals\n            getHealSummary(acc, obj, (collection, event) => {\n                let sourceId = event[\"sourceID\"];\n                if (pets[sourceId]) {\n                    sourceId = pets[sourceId].petOwner;\n                }\n\n                let abilityId = event.ability.guid;\n                if (protectionPotions[abilityId]) {\n                    sourceId = 9999;\n                }\n\n                if (!collection.characters[sourceId]) {\n                    collection.characters[sourceId] = { total: new HealSummary(), spells: {} };\n                }\n\n                return collection.characters[sourceId].total;\n            });\n            getHealSummary(acc, obj, (collection, event) => {\n                let sourceId = event.sourceID;\n                if (pets[sourceId]) {\n                    sourceId = pets[sourceId].petOwner;\n                }\n                let spellId = event.ability.guid;\n                if (protectionPotions[spellId]) {\n                    sourceId = 9999;\n                }\n\n                let spell = healingSpells[spellId];\n                if (!spell) {\n                    return null;\n                }\n\n                if (!collection.characters[sourceId].spells[spellId]) {\n                    collection.characters[sourceId].spells[spellId] = { id: spellId, name: spell.name, icon: spell.icon, type: spell.type, summary: new HealSummary() };\n                }\n\n                return collection.characters[sourceId].spells[spellId].summary;\n            })\n\n            return acc;\n        }, { total: new HealSummary(), characters: {}})\n\n        return groupByCharacter;\n    }\n\n    toggle() {\n        this.setState({\n            expanded: !this.state.expanded\n        });\n\n        this.loadData();\n    }\n\n    render() {\n        const { error, isLoaded, fight, healSummary, healers, expanded} = this.state;\n\n        let fightClass = !fight.boss ? \"trash\" : fight.kill ? \"success\" : \"fail\";\n        let details;\n        if (error) {\n            details = <div>Error: {error.message}</div>\n        } else if (!isLoaded) {\n            details = <div>Loading...</div>\n        } else {\n            let maxHeals = healers.reduce((agg,obj) => {\n                if (obj.summary.getTotalHeals() > agg) {\n                    agg = obj.summary.getTotalHeals();\n                }\n                return agg;\n            }, 0);\n            details = (\n            <>\n                <table>\n                    <thead>\n                        <tr>\n                            <td className=\"healer_name\" rowSpan=\"2\">Name</td>\n                            <td className=\"healer_enchants\" rowSpan=\"2\">Enchants</td>\n                            <td className=\"healer_consumes\" colSpan=\"3\">Consumes</td>\n                            <td className=\"healer_consumes_mana\" rowSpan=\"2\">Mana Gained</td>\n                            <td className=\"healer_cooldowns\" rowSpan=\"2\">Cooldowns</td>\n                            <td className=\"healer_casts\" colSpan=\"3\">Casts</td>\n                            <td className=\"healer_amount\" rowSpan=\"2\">Amount</td>\n                            <td className=\"healer_effective center\" colSpan=\"2\">Effective</td>\n                            <td className=\"healer_overheal center\" colSpan=\"2\">Overheal</td>\n                            <td className=\"healer_wasted center\" colSpan=\"3\">Wasted</td>\n                        </tr>\n                        <tr>\n                            <td className=\"healer_consumes_manapot center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_potion_76.jpg\" width=\"24\" height=\"24\" alt=\"Major Mana Potion\" data-tip='Major Mana Potions'/></td>\n                            <td className=\"healer_consumes_runes center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_misc_rune_04.jpg\" width=\"24\" height=\"24\" alt=\"Demonic/Dark Runes\"  data-tip='Demonic/Dark Runes'/></td>\n                            <td className=\"healer_consumes_manaoil center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_potion_100.jpg\" width=\"24\" height=\"24\" alt=\"Brilliant Mana Oil\"  data-tip='Brilliant Mana Oil'/></td>\n                            <td className=\"healer_casts_started center\">Start</td>\n                            <td className=\"healer_casts_completed center\">Finish</td>\n                            <td className=\"healer_casts percent right\">%</td>\n                            <td className=\"healer_effective amount right\">#</td>\n                            <td className=\"healer_effective percent right\">%</td>\n                            <td className=\"healer_overheal amount right\">#</td>\n                            <td className=\"healer_overheal percent right\">%</td>\n                            <td className=\"healer_wasted amount right\">#</td>\n                            <td className=\"healer_wasted percent right\">%</td>\n                            <td className=\"healer_wasted amount right\">Mana</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                {healers.sort((x,y) => y.summary.effectiveHeals - x.summary.effectiveHeals)\n                        .map((x, idx) => (\n                    <HealerFightSummary key={x.id} healer={x} row={idx} maxHeals={maxHeals} />\n                ))}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td className=\"healer_name\">Total</td>\n                            <td className=\"healer_enchants\"></td>\n                            <td className=\"healer_consumes_manapot center\">{healSummary.manaPots}</td>\n                            <td className=\"healer_consumes_runes center\">{healSummary.runes}</td>\n                            <td className=\"healer_consumes_manaoil center\"></td>\n                            <td className=\"right\">{abbreviateNumber(healSummary.manaGained)}</td>\n                            <td className=\"healer_cooldowns\"></td>\n                            <td className=\"healer_casts_started center\">{healSummary.castsStarted}</td>\n                            <td className=\"healer_casts_completed center\">{healSummary.castsCompleted}</td>\n                            <td className=\"healer_casts percent center\">{healSummary.getCastsPercent()}%</td>\n                            <td className=\"healer_amount\">&nbsp;</td>\n                            <td className=\"healer_effective amount right\">{abbreviateNumber(healSummary.effectiveHeal)}</td>\n                            <td className=\"healer_effective percent right\">{healSummary.getEffectivePercent()}%</td>\n                            <td className=\"healer_overheal amount right\">{abbreviateNumber(healSummary.overHeal)}</td>\n                            <td className=\"healer_overheal percent right\">{healSummary.getOverhealPercent()}%</td>\n                            <td className=\"healer_wasted amount right\">{abbreviateNumber(healSummary.wastedHeals)}</td>\n                            <td className=\"healer_wasted percent right\">{healSummary.getWastedPercent()}%</td>\n                            <td className=\"healer_wasted percent right\">{abbreviateNumber(healSummary.wastedMana)}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n                <ReactTooltip />\n            </>\n            )\n        }\n        return (\n            <div className={\"fight \" + fightClass}>\n            <div className=\"heading\" onClick={this.toggle}>{fight.name} {fight.kill ? \"- Kill \" : \"- Wipe \"}({msToTime(fight.end_time - fight.start_time)})</div>\n            {expanded && details}\n            </div>\n        )\n    }\n}","import {Component} from \"react\";\nimport {FightReport} from \"./FightReport\";\nimport {LogLoader} from \"../warcraftLogLoader\";\n\nexport class HealerReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            pets: {},\n            isLoaded: false,\n            reportId: props.reportId\n        }\n    }\n\n    componentDidMount() {\n        const { reportId } = this.state;\n        if (!reportId)\n            return;\n\n        LogLoader.getFights()\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    fights: result.fights,\n                    characters: result.friendlies.reduce((acc, obj) => {\n                        let id = obj[\"id\"];\n                        if (!acc[id]) {\n                            acc[id] = obj;\n                        }\n\n                        return acc;\n                    }, {}),\n                    pets: result.friendlyPets.reduce((acc, obj) => {\n                        let id = obj[\"id\"];\n                        if (!acc[id]) {\n                            acc[id] = obj;\n                        }\n\n                        return acc;\n                    })\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    render() {\n        const { error, isLoaded, fights, reportId, characters, pets} = this.state;\n        const {showTrash} = this.props;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                {fights.filter(x => showTrash || x.boss !== 0).map(item => (\n                    <FightReport key={item.id} fight={item} characters={characters} pets={pets} reportId={reportId} />\n                ))}\n                </>\n            )\n        }\n    }\n}","import \"./AncestralFortitudeReport.css\";\nimport { Component } from \"react\";\nimport { LogLoader } from \"../warcraftLogLoader\";\nimport { msToTime, asPercentage } from \"../utils\";\n\nexport class AncestralFortitudeReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            tanksPerFight: {},\n            tanks: {},\n            isLoaded: false,\n            reportId: props.reportId\n        }\n    }\n\n    //getArmorBuffUptime\n    _getArmorBuffUptime(fights) {\n        let buffCalls = fights.map(fight => LogLoader.getArmorBuffUptime(fight.start_time, fight.end_time, fight.id))\n        return Promise.all(buffCalls)\n        .then(res => new Promise((resolve, _reject) => {\n            let buffsForFight = res.reduce((accum, current) => {\n                accum[current.context] = current.data;\n\n                return accum;\n            }, {});\n            resolve(buffsForFight);\n        }))\n        .then(allBuffs => {\n            this.setState({\n                buffUptime: allBuffs\n            })\n        });\n    }\n\n    _getTanksForFights(fights) {\n        let tankCalls = fights.map(fight => LogLoader.getTankInfo(fight.start_time, fight.end_time, fight.id));\n        return Promise.all(tankCalls)\n            .then(res => new Promise((resolve, _reject) => {\n                let tanksForFight = res.reduce((accum, current) => {\n                    accum[current.context] = current.data;\n\n                    return accum;\n                }, {});\n                resolve(tanksForFight);\n            }))\n            .then(allTanks => {\n                this.setState({\n                    tanksPerFight: allTanks,\n                    tanks: Object.entries(allTanks).reduce((accum, [_fightkey, current]) => {\n                        Object.entries(current).reduce((innerAccum, [charId, character]) => {\n                            if (!innerAccum[charId]) {\n                                innerAccum[charId] = { name: character.name, class: character.type };\n                            }\n\n                            return innerAccum\n                        }, accum)\n\n                        return accum;\n                    }, {})\n                })\n            });\n    }\n\n    componentDidMount() {\n        const { reportId } = this.state;\n        if (!reportId)\n            return;\n\n        LogLoader.getFights()\n            .then(\n                (result) => {\n                    let fights = result.fights.filter(x => x.boss !== 0);\n                    return Promise.all([\n                        this._getTanksForFights(fights),\n                        this._getArmorBuffUptime(fights)\n                    ])\n                    .then(_results => {\n                        this.setState({\n                            isLoaded: true,\n                            fights: fights\n                        });\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            error: error\n                        })\n                    })\n                    /* let tankCalls = fights.map(fight => LogLoader.getTankInfo(fight.start_time, fight.end_time, fight.id));\n                    return Promise.all(tankCalls)\n                        .then(res => new Promise((resolve, _reject) => {\n                            let tanksForFight = res.reduce((accum, current) => {\n                                accum[current.context] = current.data;\n\n                                return accum;\n                            }, {});\n                            resolve(tanksForFight);\n                        }))\n                        .then(allTanks => {\n                            this.setState({\n                                isLoaded: true,\n                                fights: fights,\n                                tanksPerFight: allTanks,\n                                tanks: Object.entries(allTanks).reduce((accum, [_fightkey, current]) => {\n                                    Object.entries(current).reduce((innerAccum, [charId, character]) => {\n                                        if (!innerAccum[charId]) {\n                                            innerAccum[charId] = { name: character.name, class: character.type };\n                                        }\n\n                                        return innerAccum\n                                    }, accum)\n\n                                    return accum;\n                                }, {})\n                            })\n                        },\n                            (error) => {\n                                this.setState({\n                                    isLoaded: true,\n                                    error: error\n                                })\n                            }) */\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error: error\n                    })\n                });\n    }\n\n    render() {\n        const { error, isLoaded, tanks, fights, tanksPerFight, buffUptime } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h3>Ancestral Fortitude/Inspiration</h3>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>&nbsp;</td>\n                                {Object.entries(tanks).map(([key, value]) => <td key={key} className={\"inspiration_heading \" + value.class + \"Background\"} colspan=\"2\">{value.name}</td>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {fights.map((fight, idx) => {\n                                return (\n                                    <tr key={fight.id} className={(idx % 2 === 0 ? \"even\" : \"odd\")}>\n                                        <td className={!fight.boss ? \"trash\" : fight.kill ? \"success\" : \"fail\"}>{fight.name} {fight.kill ? \"- Kill \" : \"- Wipe \"}({msToTime(fight.end_time - fight.start_time)})</td>\n                                        {Object.entries(tanks).map(([key, value]) => {\n                                            if (tanksPerFight[fight.id][key]) {\n                                                let fightLength = fight.end_time - fight.start_time;\n                                                let tankBuffInfo = buffUptime[fight.id][key];\n                                                let tankBuffUptime = tankBuffInfo ? tankBuffInfo.totalUptime / fightLength : 0;\n                                                let preBuff = tankBuffInfo ? tankBuffInfo.bands[0].startTime === fight.start_time ? true : false : false;\n                                                return (\n                                                    <>\n                                                    <td key={fight.id + \"_\" + key} className={\"center \" + (preBuff ? \"tick\" : \"cross\")}>{preBuff ? \"✔\" : \"✖\"}</td>\n                                                    <td className=\"right\">{asPercentage(tankBuffUptime)}</td>\n                                                    </>\n                                                )\n                                            }\n\n                                            return <td key={fight.id + \"_\" + key} colspan=\"2\">&nbsp;</td>\n                                        })}\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                    <div className=\"note\">The tick or cross indicates that they had the buff on fight start (on pull) and the percentage shows how much of the fight it was up for.</div>\n                </>\n            )\n        }\n    }\n}","import {Component} from \"react\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport {cooldownList} from \"../data\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./CooldownReport.css\";\n\nexport class CooldownReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            reportId: props.reportId,\n            startTime: props.startTime,\n            endTime: props.endTime,\n            characters: props.characters,\n            cooldownRows: [],\n            cooldowns: {},\n            //events: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        const { reportId, startTime, endTime, characters } = this.state;\n        if (!reportId)\n            return;\n\n        LogLoader.getBuffUptime(startTime, endTime, 24659)   // Zandalarian Hero Charm\n        .then(zhcResult => {\n\n            let zhcCounts = zhcResult.reduce((accum, current) => {\n                if (current.type === \"Shaman\") {\n                    accum[current.id] = current.bands.length;\n                }\n\n                return accum;\n            }, {})\n\n            return Promise.all(characters.map(character => LogLoader.getCharacterCastTable(startTime, endTime, character.id, character.name)))\n            .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n                let cooldownRow = { id: current.id, name: current.name, total: 0 }\n                for (const entry of current.entries) {\n                    if (!cooldownList[entry.guid])\n                        continue;\n\n                    cooldownRow[entry.guid] = entry.total;\n                    cooldownRow.total += entry.total;\n                }\n                if (zhcCounts[current.id]) {\n                    cooldownRow[\"24659\"] = zhcCounts[current.id];\n                    cooldownRow.total += zhcCounts[current.id];\n                }\n\n                accum = [...accum, cooldownRow];\n\n                return accum;\n            }, []))))\n            .then(\n                (result) => {\n                    this.setState({\n                        //events: result,\n                        cooldownRows: result.sort((x,y) => y.total - x.total),\n                        cooldowns: Object.entries(cooldownList).sort(([xKey,xValue],[yKey,yValue]) => {\n                            let typeCompare = xValue.type.localeCompare(yValue.type);\n\n                            if (typeCompare !== 0)\n                                return typeCompare;\n\n                            return xValue.name.localeCompare(yValue.name);\n                        }).reduce((accum, [key,_value]) => {\n                            let cooldownFound = result.reduce((found, resultRow) => {\n                                if (resultRow[key]) {\n                                    return true;\n                                }\n\n                                return found;\n                            }, false);\n                            if (cooldownFound) {\n                                accum = [...accum, key];\n                            }\n\n                            return accum;\n                        }, []),\n                        isLoaded: true\n                    })\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error: error\n                    })\n                }\n            )\n        })\n        \n    }\n\n    render() {\n        const { error, isLoaded, cooldownRows, cooldowns} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h3>Cooldown Usage</h3>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>&nbsp;</td>\n                                {cooldowns.map(cooldown => \n                                    <td key={cooldown}><img className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + cooldownList[cooldown].icon} alt={cooldownList[cooldown].name} data-tip={cooldownList[cooldown].name} /></td>\n                                )}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {cooldownRows.map((cooldownRow,row) =>\n                                <tr key={cooldownRow.id} className={\"Shaman \" + (row % 2 === 0 ? \"even\" : \"odd\")}>\n                                    <td className=\"shaman_name\">{cooldownRow.name}</td>\n                                    {cooldowns.map(cooldown => \n                                    <td className=\"shaman_cooldown\" key={cooldownRow.id + \"_\" + cooldown}>{cooldownRow[cooldown]}</td>\n                                    )}\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    <ReactTooltip />\n                </>\n            )\n        }\n    }\n}","import {Component} from \"react\";\n\nexport class TotemReport extends Component {\n    render() {\n        return (\n            <>\n                <h3>Totem Usage</h3>\n            </>\n        )\n    }\n}","import {Component} from \"react\";\n//import {FightReport} from \"./FightReport\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport { AncestralFortitudeReport } from \"./AncestralFortitudeReport\";\nimport { CooldownReport } from \"./CooldownReport\";\nimport { TotemReport } from \"./TotemReport\";\n\nexport class ShamanReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            pets: {},\n            isLoaded: false,\n            reportId: props.reportId,\n            startTime: null,\n            endTime: null\n        }\n    }\n\n    componentDidMount() {\n        const { reportId } = this.state;\n        if (!reportId)\n            return;\n\n        LogLoader.getFights()\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    fights: result.fights,\n                    shamans: result.friendlies.reduce((acc, obj) => {\n                        if (obj.type === \"Shaman\") {\n                            acc.push({name: obj.name, id: obj.id});\n                        }\n\n                        return acc;\n                    }, []),\n                    startTime: result.fights[0].start_time,\n                    endTime: result.fights[result.fights.length-1].end_time\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    render() {\n        const { error, isLoaded, reportId, startTime, endTime, shamans} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h2>Shaman Report</h2>\n                    <TotemReport reportId={reportId} />\n                    <AncestralFortitudeReport reportId={reportId}/>\n                    <CooldownReport reportId={reportId} startTime={startTime} endTime={endTime} characters={shamans} />\n                </>\n            )\n        }\n    }\n}","//import {createContext} from \"react\";\n\nexport const GroupKeys = {\n    Name: \"Name\",\n    Enchants: \"Enchants\",\n    WorldBuffs: \"WorldBuffs\",\n    Deaths: \"Deaths\",\n    ProtPotions: \"ProtPotions\",\n    Consumes: \"Consumes\",\n    Abilities: \"Abilities\",\n    Damage: \"Damage\"\n}\n\nexport const DataPoints = {\n    Name: \"Name\",\n    Enchants: \"Enchants\",\n    WorldBuffCount: \"WorldBuffCount\",\n    WorldBuffUptime: \"WorldBuffUptime\",\n    WorldBuffNef: \"WorldBuffNef\",\n    WorldBuffRend: \"WorldBuffRend\",\n    WorldBuffHoH: \"WorldBuffHoH\",\n    WorldBuffSF: \"WorldBuffSF\",\n    WorldBuffMM: \"WorldBuffMM\",\n    WorldBuffFF: \"WorldBuffFF\",\n    WorldBuffSS: \"WorldBuffSS\",\n    WorldBuffDMF: \"WorldBuffDMF\",\n    Deaths: \"Deaths\",\n    ProtectionPotionsTotal: \"ProtectionPotionsTotal\",\n    ProtectionPotionsTotalAbsorbed: \"ProtectionPotionsTotalAbsorbed\",\n    ProtectionPotionsNature: \"ProtectionPotionsNature\",\n    ProtectionPotionsGreaterNature: \"ProtectionPotionsGreaterNature\",\n    ProtectionPotionsNatureAbsorbed: \"ProtectionPotionsNatureAbsorbed\",\n    ProtectionPotionsFire: \"ProtectionPotionsFire\",\n    ProtectionPotionsGreaterFire: \"ProtectionPotionsGreaterFire\",\n    ProtectionPotionsFireAbsorbed: \"ProtectionPotionsFireAbsorbed\",\n    ProtectionPotionsFrost: \"ProtectionPotionsFrost\",\n    ProtectionPotionsGreaterFrost: \"ProtectionPotionsGreaterFrost\",\n    ProtectionPotionsFrostAbsorbed: \"ProtectionPotionsFrostAbsorbed\",\n    ProtectionPotionsShadow: \"ProtectionPotionsShadow\",\n    ProtectionPotionsGreaterShadow: \"ProtectionPotionsGreaterShadow\",\n    ProtectionPotionsShadowAbsorbed: \"ProtectionPotionsShadowAbsorbed\",\n    ProtectionPotionsGreaterArcane: \"ProtectionPotionsGreaterArcane\",\n    ProtectionPotionsArcaneAbsorbed: \"ProtectionPotionsArcaneAbsorbed\",\n    ConsumesPotions: \"ConsumesPotions\",\n    ConsumesElixirs: \"ConsumesElixirs\",\n    ConsumesGems: \"ConsumesGems\",\n    ConsumesExplosives: \"ConsumesExplosives\",\n    ConsumesBandages: \"ConsumesBandages\",\n    ConsumesManaPots: \"ConsumesManaPots\",\n    ConsumesRunes: \"ConsumesRunes\",\n    ConsumesRejuvPots: \"ConsumesRejuvPots\",\n    ConsumesHealthPots: \"ConsumesHealthPots\",\n    ConsumesHealthStones: \"ConsumesHealthStones\",\n    ConsumesLIPs: \"ConsumesLIPs\",\n    ConsumesPetris: \"ConsumesPetris\",\n    ConsumesWhipperRootTuber: \"ConsumesWhipperRootTuber\",\n    ConsumesRagePotions: \"ConsumesRagePotions\",\n    ConsumesThistleTea: \"ConsumesThistleTea\",\n    ConsumesRestorationPots: \"ConsumesRestorationPots\",\n    ConsumesElixirOfPoisonResistance: \"ConsumesElixirOfPoisonResistance\",\n    ConsumesFreeActionPotion: \"ConsumesFreeActionPotion\",\n    ConsumesManaRuby: \"ConsumesManaRuby\",\n    ConsumesManaCitrine: \"ConsumesManaCitrine\",\n    ConsumesManaJade: \"ConsumesManaJade\",\n    ConsumesManaAgate: \"ConsumesManaAgate\",\n    ConsumesStoneshield: \"ConsumesStoneshield\",\n    ConsumesOilOfImmolation: \"ConsumesOilOfImmolation\",\n    ConsumesHeavyRuneclothBandage: \"ConsumesHeavyRuneclothBandage\",\n    ConsumesAntiVenom: \"ConsumesAntiVenom\",\n    ConsumesHolyWater: \"ConsumesHolyWater\",\n    ConsumesSapperCharge: \"ConsumesSapperCharge\",\n    ConsumesEzThro: \"ConsumesEzThro\",\n    ConsumesDenseDynamite: \"ConsumesDenseDynamite\",\n};\n\nexport const emptyData = {\n    [DataPoints.Name]: \" \",\n    [DataPoints.Enchants]: \" \",\n    [DataPoints.WorldBuffCount]: \" \",\n    [DataPoints.WorldBuffUptime]: \" \",\n    [DataPoints.WorldBuffNef]: \" \",\n    [DataPoints.WorldBuffRend]: \" \",\n    [DataPoints.WorldBuffHoH]: \" \",\n    [DataPoints.WorldBuffSF]: \" \",\n    [DataPoints.WorldBuffMM]: \" \",\n    [DataPoints.WorldBuffFF]: \" \",\n    [DataPoints.WorldBuffSS]: \" \",\n    [DataPoints.WorldBuffDMF]: \" \",\n    [DataPoints.Deaths]: \" \",\n    [DataPoints.ProtectionPotionsTotal]: \" \",\n    [DataPoints.ProtectionPotionsTotalAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsNature]: \" \",\n    [DataPoints.ProtectionPotionsGreaterNature]: \" \",\n    [DataPoints.ProtectionPotionsNatureAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsFire]: \" \",\n    [DataPoints.ProtectionPotionsGreaterFire]: \" \",\n    [DataPoints.ProtectionPotionsFireAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsFrost]: \" \",\n    [DataPoints.ProtectionPotionsGreaterFrost]: \" \",\n    [DataPoints.ProtectionPotionsFrostAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsShadow]: \" \",\n    [DataPoints.ProtectionPotionsGreaterShadow]: \" \",\n    [DataPoints.ProtectionPotionsShadowAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsGreaterArcane]: \" \",\n    [DataPoints.ProtectionPotionsArcaneAbsorbed]: \" \",\n    [DataPoints.ConsumesPotions]: \" \",\n    [DataPoints.ConsumesElixirs]: \" \",\n    [DataPoints.ConsumesGems]: \" \",\n    [DataPoints.ConsumesExplosives]: \" \",\n    [DataPoints.ConsumesBandages]: \" \",\n    [DataPoints.ConsumesManaPots]: \" \",\n    [DataPoints.ConsumesRunes]: \" \",\n    [DataPoints.ConsumesRejuvPots]: \" \",\n    [DataPoints.ConsumesHealthPots]: \" \",\n    [DataPoints.ConsumesHealthStones]: \" \",\n    [DataPoints.ConsumesLIPs]: \" \",\n    [DataPoints.ConsumesPetris]: \" \",\n    [DataPoints.ConsumesWhipperRootTuber]: \" \",\n    [DataPoints.ConsumesRagePotions]: \" \",\n    [DataPoints.ConsumesThistleTea]: \" \",\n    [DataPoints.ConsumesRestorationPots]: \" \",\n    [DataPoints.ConsumesElixirOfPoisonResistance]: \" \",\n    [DataPoints.ConsumesFreeActionPotion]: \" \",\n    [DataPoints.ConsumesManaRuby]: \" \",\n    [DataPoints.ConsumesManaCitrine]: \" \",\n    [DataPoints.ConsumesManaJade]: \" \",\n    [DataPoints.ConsumesManaAgate]: \" \",\n    [DataPoints.ConsumesStoneshield]: \" \",\n    [DataPoints.ConsumesOilOfImmolation]: \" \",\n    [DataPoints.ConsumesHeavyRuneclothBandage]: \" \",\n    [DataPoints.ConsumesAntiVenom]: \" \",\n    [DataPoints.ConsumesHolyWater]: \" \",\n    [DataPoints.ConsumesSapperCharge]: \" \",\n    [DataPoints.ConsumesEzThro]: \" \",\n    [DataPoints.ConsumesDenseDynamite]: \" \",\n}\n","import {Component, Children, isValidElement, cloneElement} from \"react\";\nimport {protectionPotionEnum, worldBuffs} from \"../data\";\nimport {DataPoints, emptyData} from \"./GridContexts\";\nimport {countNonNull, sumNonNull} from \"../utils\";\n\nexport class GridRow extends Component {\n    constructor(props) {\n        super(props);\n\n        this._logLoader = props.logLoader;\n        let report = this._logLoader.getResults();\n\n        this.state = {\n            id: props.character.id,\n            classType: props.character.type,\n            raidTime: report.endTime - report.startTime,\n            isLoaded: false,\n            error: null,\n            Data: this._flattenCharacterData(null),\n        }\n    }\n\n    componentDidMount() {\n        \n        this._logLoader.loadCharacterDetails(this.state.id)\n        .then((data) => {\n            let character = data.getCharacter(this.state.id);\n\n            this.setState({\n                isLoaded: true,\n                Data: this._flattenCharacterData(character),\n            });\n        })\n        .catch((error) => {\n            this.setState({\n                isLoaded: true,\n                error: error\n            })\n        });\n    }\n\n    _flattenCharacterData(character) {\n        let characterData = {...emptyData, name: this.props.character.name};\n\n        if (!character) {\n            return characterData;\n        }\n\n        characterData[DataPoints.Name] = character.name;\n        characterData[DataPoints.Deaths] = this._getDeathCount(character);\n\n        characterData[DataPoints.WorldBuffNef] = this._getWorldBuffUptime(character, worldBuffs.DragonHead);\n        characterData[DataPoints.WorldBuffRend] = this._getWorldBuffUptime(character, worldBuffs.Rend);\n        characterData[DataPoints.WorldBuffHoH] = this._getWorldBuffUptime(character, worldBuffs.HoH);\n        characterData[DataPoints.WorldBuffSF] = this._getWorldBuffUptime(character, worldBuffs.Songflower);\n        characterData[DataPoints.WorldBuffMM] = this._getWorldBuffUptime(character, worldBuffs.Moldar);\n        characterData[DataPoints.WorldBuffFF] = this._getWorldBuffUptime(character, worldBuffs.Fengus);\n        characterData[DataPoints.WorldBuffSS] = this._getWorldBuffUptime(character, worldBuffs.Slipkik);\n        characterData[DataPoints.WorldBuffDMF] = this._getWorldBuffUptime(character, worldBuffs.DMF);\n\n        let buffCount = countNonNull(characterData[DataPoints.WorldBuffNef], \n            characterData[DataPoints.WorldBuffRend], \n            characterData[DataPoints.WorldBuffHoH],\n            characterData[DataPoints.WorldBuffSF],\n            characterData[DataPoints.WorldBuffMM],\n            characterData[DataPoints.WorldBuffFF],\n            characterData[DataPoints.WorldBuffSS],\n            characterData[DataPoints.WorldBuffDMF]);\n\n        characterData[DataPoints.WorldBuffCount] = buffCount + \"/8\";\n\n        let buffUptime = sumNonNull(characterData[DataPoints.WorldBuffNef], \n            characterData[DataPoints.WorldBuffRend], \n            characterData[DataPoints.WorldBuffHoH],\n            characterData[DataPoints.WorldBuffSF],\n            characterData[DataPoints.WorldBuffMM],\n            characterData[DataPoints.WorldBuffFF],\n            characterData[DataPoints.WorldBuffSS],\n            characterData[DataPoints.WorldBuffDMF]);\n\n        characterData[DataPoints.WorldBuffUptime] = buffUptime / buffCount;\n\n        characterData[DataPoints.ProtectionPotionsGreaterArcane] = this._getProtectionPotionCount(character, protectionPotionEnum.GAPP);\n        characterData[DataPoints.ProtectionPotionsArcaneAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GAPP);\n        characterData[DataPoints.ProtectionPotionsFire] = this._getProtectionPotionCount(character, protectionPotionEnum.FPP);\n        characterData[DataPoints.ProtectionPotionsGreaterFire] = this._getProtectionPotionCount(character, protectionPotionEnum.GFPP);\n        characterData[DataPoints.ProtectionPotionsFireAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GFPP, protectionPotionEnum.FPP);\n        characterData[DataPoints.ProtectionPotionsFrost] = this._getProtectionPotionCount(character, protectionPotionEnum.FrPP);\n        characterData[DataPoints.ProtectionPotionsGreaterFrost] = this._getProtectionPotionCount(character, protectionPotionEnum.GFrPP);\n        characterData[DataPoints.ProtectionPotionsFrostAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GFrPP, protectionPotionEnum.FrPP);\n        characterData[DataPoints.ProtectionPotionsNature] = this._getProtectionPotionCount(character, protectionPotionEnum.NPP);\n        characterData[DataPoints.ProtectionPotionsGreaterNature] = this._getProtectionPotionCount(character, protectionPotionEnum.GNPP);\n        characterData[DataPoints.ProtectionPotionsNatureAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GNPP, protectionPotionEnum.NPP);\n        characterData[DataPoints.ProtectionPotionsShadow] = this._getProtectionPotionCount(character, protectionPotionEnum.SPP);\n        characterData[DataPoints.ProtectionPotionsGreaterShadow] = this._getProtectionPotionCount(character, protectionPotionEnum.GSPP);\n        characterData[DataPoints.ProtectionPotionsShadowAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GSPP, protectionPotionEnum.SPP);\n\n        characterData[DataPoints.ProtectionPotionsTotal] = sumNonNull(characterData[DataPoints.ProtectionPotionsGreaterArcane],\n            characterData[DataPoints.ProtectionPotionsFire],\n            characterData[DataPoints.ProtectionPotionsGreaterFire],\n            characterData[DataPoints.ProtectionPotionsFrost],\n            characterData[DataPoints.ProtectionPotionsGreaterFrost],\n            characterData[DataPoints.ProtectionPotionsNature],\n            characterData[DataPoints.ProtectionPotionsGreaterNature],\n            characterData[DataPoints.ProtectionPotionsShadow],\n            characterData[DataPoints.ProtectionPotionsGreaterShadow]);\n\n        characterData[DataPoints.ProtectionPotionsTotalAbsorbed] = sumNonNull(characterData[DataPoints.ProtectionPotionsArcaneAbsorbed],\n            characterData[DataPoints.ProtectionPotionsFireAbsorbed],\n            characterData[DataPoints.ProtectionPotionsFrostAbsorbed],\n            characterData[DataPoints.ProtectionPotionsNatureAbsorbed],\n            characterData[DataPoints.ProtectionPotionsShadowAbsorbed]);\n\n        characterData[DataPoints.ConsumesManaPots] = this._getCastCount(character, 17531);\n        characterData[DataPoints.ConsumesRejuvPots] = this._getCastCount(character, 22729);\n        characterData[DataPoints.ConsumesHealthPots] = this._getCastCount(character, 17534);\n        characterData[DataPoints.ConsumesLIPs] = this._getCastCount(character, 3169);\n        characterData[DataPoints.ConsumesFreeActionPotion] = this._getCastCount(character, 6615, 24364);\n        characterData[DataPoints.ConsumesRestorationPots] = this._getCastCount(character, 11359, 17550);\n        characterData[DataPoints.ConsumesRagePotions] = this._getCastCount(character, 6613, 17528);\n        characterData[DataPoints.ConsumesStoneshield] = this._getCastCount(character, 17540);\n\n        characterData[DataPoints.ConsumesRunes] = this._getCastCount(character, 16666, 27869);\n        characterData[DataPoints.ConsumesHealthStones] = this._getCastCount(character, 23476, 11732, 23477);\n        characterData[DataPoints.ConsumesWhipperRootTuber] = this._getCastCount(character, 15700);\n        characterData[DataPoints.ConsumesThistleTea] = this._getCastCount(character, 9512);\n        characterData[DataPoints.ConsumesManaRuby] = this._getCastCount(character, 10058);\n        characterData[DataPoints.ConsumesManaCitrine] = this._getCastCount(character, 10057);\n        characterData[DataPoints.ConsumesManaJade] = this._getCastCount(character, 10052);\n        characterData[DataPoints.ConsumesManaAgate] = this._getCastCount(character, 5405);\n\n        characterData[DataPoints.ConsumesPetris] = this._getCastCount(character, 17624);\n        characterData[DataPoints.ConsumesElixirOfPoisonResistance] = this._getCastCount(character, 26677);\n        characterData[DataPoints.ConsumesOilOfImmolation] = this._getCastCount(character, 11350);\n\n        characterData[DataPoints.ConsumesHolyWater] = this._getCastCount(character, 17291);\n        characterData[DataPoints.ConsumesSapperCharge] = this._getCastCount(character, 13241);\n        characterData[DataPoints.ConsumesDenseDynamite] = this._getCastCount(character, 23063);\n        characterData[DataPoints.ConsumesEzThro] = this._getCastCount(character, 23000);\n\n        characterData[DataPoints.ConsumesHeavyRuneclothBandage] = this._getCastCount(character, 18610);\n        characterData[DataPoints.ConsumesAntiVenom] = this._getCastCount(character, 23786);\n\n        characterData[DataPoints.ConsumesPotions] = sumNonNull(characterData[DataPoints.ConsumesManaPots],\n            characterData[DataPoints.ConsumesRejuvPots],\n            characterData[DataPoints.ConsumesHealthPots],\n            characterData[DataPoints.ConsumesLIPs],\n            characterData[DataPoints.ConsumesFreeActionPotion],\n            characterData[DataPoints.ConsumesRestorationPots],\n            characterData[DataPoints.ConsumesRagePotions],\n            characterData[DataPoints.ConsumesStoneshield]);\n\n        characterData[DataPoints.ConsumesGems] = sumNonNull(characterData[DataPoints.ConsumesRunes],\n            characterData[DataPoints.ConsumesHealthStones],\n            characterData[DataPoints.ConsumesWhipperRootTuber],\n            characterData[DataPoints.ConsumesThistleTea],\n            characterData[DataPoints.ConsumesManaRuby],\n            characterData[DataPoints.ConsumesManaCitrine],\n            characterData[DataPoints.ConsumesManaJade],\n            characterData[DataPoints.ConsumesManaAgate]);\n\n        characterData[DataPoints.ConsumesElixirs] = sumNonNull(characterData[DataPoints.ConsumesPetris],\n            characterData[DataPoints.ConsumesElixirOfPoisonResistance],\n            characterData[DataPoints.ConsumesOilOfImmolation]);\n\n        characterData[DataPoints.ConsumesExplosives] = sumNonNull(characterData[DataPoints.ConsumesHolyWater],\n            characterData[DataPoints.ConsumesSapperCharge],\n            characterData[DataPoints.ConsumesDenseDynamite],\n            characterData[DataPoints.ConsumesEzThro]);\n\n        characterData[DataPoints.ConsumesBandages] = sumNonNull(characterData[DataPoints.ConsumesHeavyRuneclothBandage],\n            characterData[DataPoints.ConsumesAntiVenom]);\n        \n        return characterData;\n    }\n\n    _getWorldBuffUptime(character, buffId) {\n        const {raidTime} = this.state;\n        const {buffs, raidStartTime} = character;\n\n        let characterBuff = buffs[buffId];\n        if (!characterBuff) {\n            return null;\n        }\n\n        let buffEnd = characterBuff.bands[characterBuff.bands.length-1].endTime;\n        let buffStart = raidStartTime;\n        let uptime = (buffEnd - buffStart)/raidTime;\n\n        return uptime;\n    }\n\n    /*_getCastCount(spellId) {\n        const {casts} = this.state;\n\n        let count = 0;\n        for (let i = 0; i < casts.length; ++i) {\n            let cast = casts[i];\n            if (cast.ability.guid.toString() === spellId) {\n                count++;\n            }\n        }\n        \n        if (count === 0) {\n            return \" \";\n        }\n\n        return count;\n    }*/\n\n    _getProtectionPotionCount(character, spellId) {\n        const {casts, protectionPotions, fights} = character;\n\n        let count = 0;\n        let countByFight = {};\n        for (let i = 0; i < casts.length; ++i) {\n            let cast = casts[i];\n            if (cast.ability.guid === spellId) {\n                if (!countByFight[cast.fight]) {\n                    countByFight[cast.fight] = {\n                        count: 1,\n                        firstCast: cast.timestamp,\n                    };\n                }\n                else {\n                    countByFight[cast.fight].count++;\n                }\n            }\n        }\n\n        for (let i = 0; i < fights.length; ++i) {\n            let fight = fights[i];\n            let protectionPotion = protectionPotions[spellId] || null;\n\n            if (countByFight[fight.id]) {\n                count += countByFight[fight.id].count;\n\n                if (protectionPotion !== null && protectionPotion.firstAbsorb[fight.id]) {\n                    if (protectionPotion.firstAbsorb[fight.id] < countByFight[fight.id].firstCast) {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (protectionPotion !== null && protectionPotion.firstAbsorb[fight.id]) {\n                    count++;\n                }\n            }\n        }\n\n        return count;\n    }\n\n    _getProtectionPotionAbsorb(character, spellId1, spellId2) {\n        const {protectionPotions} = character;\n\n        let absorbed = 0;\n\n        absorbed += (protectionPotions[spellId1]?.amount || 0);\n        absorbed += (protectionPotions[spellId2]?.amount || 0);\n\n        return absorbed;\n    }\n\n    _getDeathCount(character) {\n        const {deaths} = character;\n\n        return deaths?.length;\n    }\n\n    _getCastCount(character, ...spellIds) {\n        const {casts} = character;\n\n        let castCount = 0;\n        for (let i = 0; i < casts.length; ++i) {\n            let cast = casts[i];\n            if (spellIds.includes(cast.ability.guid)) {\n                castCount++;\n            }\n        }\n\n        return castCount;\n    }\n\n    render() {\n        const {Data, isLoaded, error, classType} = this.state;\n        const {children, row, context} = this.props;\n\n        return (\n            <tr className={classType + \" character \" + (row % 2 === 0 ? \"even\" : \"odd\") + (!isLoaded ? \" loading\": \"\") + (error ? \" error\" : \"\")}>\n                {Children.map(children, child => {\n                    // checking isValidElement is the safe way and avoids a typescript error too\n                    if (isValidElement(child)) {\n                        return cloneElement(child, { data: Data, context: context, render: (x) => x.renderCell() });\n                    }\n                    return child;\n                })}\n            </tr>\n        );\n    }\n}","import {Component, Children, isValidElement, cloneElement} from \"react\";\nimport {GroupKeys} from \"./GridContexts\";\nimport {GridRow} from \"./GridRow\";\n\nexport class Grid extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: {\n                [GroupKeys.WorldBuffs]: true,\n                [GroupKeys.ProtPotions]: true,\n                [GroupKeys.Consumes]: true,\n            },\n            hiddenColumns: {},\n            classFilter: props.classFilter,\n            roleFilter: props.roleFilter,\n        }\n\n        this._logLoader = props.logLoader;\n\n        this.handleColGroupToggle = this.handleColGroupToggle.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.classFilter !== prevProps.classFilter\n            || this.props.roleFilter !== prevProps.roleFilter) {\n            this.setState({\n                classFilter: this.props.classFilter,\n                roleFilter: this.props.roleFilter\n            });\n        }\n    }\n\n    handleColGroupToggle(colGroup) {\n        this.setState((state) => ({\n            collapsed: {...state.collapsed, [colGroup]: (state.collapsed[colGroup] ? !state.collapsed[colGroup] : true)}\n        }));\n    }\n\n    render() {\n        const {data, id, children} = this.props;\n\n        return (\n        <table>\n            <thead>\n                <tr className=\"grid_header\">\n                    {Children.map(children, child => {\n                        // checking isValidElement is the safe way and avoids a typescript error too\n                        if (isValidElement(child)) {\n                            return cloneElement(child, { render: (x) => x.renderHeader(), context: this.state, onColGroupToggle: this.handleColGroupToggle });\n                        }\n                        return child;\n                    })}\n                </tr>\n                <tr className=\"grid_subheader\">\n                {Children.map(children, child => {\n                        // checking isValidElement is the safe way and avoids a typescript error too\n                        if (isValidElement(child)) {\n                            return cloneElement(child, { render: (x) => x.renderSubHeader(), context: this.state });\n                        }\n                        return child;\n                    })}\n                </tr>\n            </thead>\n            <tbody>\n                {data.map((obj, idx) => (\n                <GridRow key={obj.id} character={obj} row={idx} logLoader={this._logLoader} context={this.state} >\n                    {children}\n                </GridRow>\n                ))}\n    \n            </tbody>\n        </table>\n        );\n    }\n}","export function ExpandCollapseButton(props) {\n    function handleToggle() {\n        props.onToggle();\n    }\n\n    return (\n        <span className=\"expand_toggle\" onClick={handleToggle}>{props.expanded ? \" ‹‹\" : \" ››\"}</span>\n    )\n}","import {Component, Children, cloneElement, isValidElement} from \"react\";\nimport { ExpandCollapseButton } from \"./ExpandCollapseButton\";\n\nexport class GridColumnGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            collapsed: props.context?.collapsed[props.id] || false,\n            classFilter: props.context?.classFilter,\n            roleFilter: props.context?.roleFilter,\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.context?.collapsed[this.props.id] !== prevProps.context?.collapsed[this.props.id]\n            || this.props.context?.classFilter !== prevProps.context?.classFilter\n            || this.props.context?.roleFilter !== prevProps.context?.roleFilter) {\n          this.setState({\n              collapsed: this.props.context?.collapsed[this.props.id] || false,\n              classFilter: this.props.context?.classFilter,\n              roleFilter: this.props.context?.roleFilter,\n          })\n        }\n    }\n\n    _getVisibleChildCount() {\n        const {children} = this.props;\n\n        let visibleCount = 0;\n        Children.forEach(children, (child) => {\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(this.state);\n                    if (isVisible) {\n                        visibleCount++;\n                    }\n                }\n                else {\n                    visibleCount++;\n                }\n            }\n        })\n\n        return visibleCount;\n    }\n\n    _getChildCount() {\n        const {children} = this.props;\n\n        let visibleCount = 0;\n        Children.forEach(children, (child) => {\n            if (isValidElement(child)) {\n                visibleCount++;\n            }\n        })\n\n        return visibleCount;\n    }\n\n    _canExpand() {\n        return this._getChildCount() > 1;\n    }\n\n    renderHeader() {\n        const {id, label, onColGroupToggle, cssClass} = this.props;\n        const {collapsed} = this.state;\n\n        return <th className={cssClass + ' ' + id} colSpan={this._getVisibleChildCount()}>{label}{this._canExpand() && <ExpandCollapseButton expanded={!collapsed} onToggle={() => onColGroupToggle(id)} />}</th>;\n    }\n\n    renderSubHeader() {\n        const {children, cssClass} = this.props;\n\n        return Children.map(children, child => {\n            // checking isValidElement is the safe way and avoids a typescript error too\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(this.state);\n                    if (!isVisible) {\n                        return null;\n                    }\n                }\n                return cloneElement(child, { context: this.state, render: (x) => x.renderSubHeader(), cssClass: child.props.cssClass + ' ' + cssClass});\n            }\n            return child;\n        })\n    }\n\n    renderCell() {\n        const {children, data} = this.props;\n\n        return Children.map(children, child => {\n            // checking isValidElement is the safe way and avoids a typescript error too\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(this.state);\n                    if (!isVisible) {\n                        return null;\n                    }\n                }\n                return cloneElement(child, { data: data, context: this.state, render: (x) => x.renderCell() });\n            }\n            return child;\n        })\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import {Component} from \"react\";\nimport { asPercentage } from \"../utils\";\n\nexport class GridColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        }\n    }\n\n    _cleanupValue(value) {\n        const {format} = this.props;\n\n        if (!value) {\n            return ' ';\n        }\n\n        if (isNaN(value)) {\n            return value;\n        }\n\n        if (value === 0) {\n            return ' ';\n        }\n\n        if (format === \"%\") {\n            return asPercentage(value, 0);\n        }\n\n        return value;\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <th className={cssClass}>{label}</th>;\n    }\n\n    renderCell() {\n        const {data, field, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <td className={cssClass}>{this._cleanupValue(data[field])}</td>\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import {Component} from \"react\";\nimport {asPercentage} from \"../utils\";\n\nexport class GridIconColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        };\n    }\n\n    _cleanupValue(value) {\n        const {format} = this.props;\n\n        if (!value) {\n            return ' ';\n        }\n\n        if (isNaN(value)) {\n            return value;\n        }\n\n        if (value == 0) {\n            return ' ';\n        }\n\n        if (format === \"%\") {\n            return asPercentage(value, 0);\n        }\n\n        return value;\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass, icon_name} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <th className={cssClass}><img className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + icon_name} alt={label} data-tip={label} /></th>;\n    }\n\n    renderCell() {\n        const {data, field, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <td className={cssClass}>{this._cleanupValue(data[field])}</td>\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import \"./SummaryReport.scss\";\nimport {Component} from \"react\";\nimport {WarcraftLogLoader} from \"../warcraftLogLoader\";\nimport {GroupKeys, DataPoints} from \"./GridContexts\";\nimport {Grid} from \"./Grid\";\nimport {GridColumnGroup} from \"./GridColumnGroup\";\nimport {GridColumn} from \"./GridColumn\";\nimport {GridIconColumn} from \"./GridIconColumn\";\n\nexport class SummaryReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            isLoaded: false,\n            reportId: props.reportId,\n            context: {},\n        }\n        this._logLoader = null;\n\n    }\n\n    componentDidMount() {\n        const { reportId } = this.state;\n        if (!reportId)\n            return;\n\n        this._logLoader = WarcraftLogLoader.Load(reportId);\n        this._logLoader.loadFights()\n            .then(x => x.loadCharacterSummary())\n            .then(x => x.loadDeaths())\n            .then(x => {\n                let report = x.getResults();\n                this.setState({\n                    isLoaded: true,\n                    characters: report.Characters,\n                    fights: report.Fights,\n                    raidTime: report.endTime - report.startTime,\n                })\n            })\n            .catch((error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            });\n    }\n\n    handleRole(roleName) {\n        this.setState((state,_props) => {\n            return {\n                roleFilter: state.roleFilter == roleName ? null : roleName,\n                classFilter: null\n            }\n        });\n    }\n\n    handleClass(className) {\n        this.setState((state,_props) => {\n            return {\n                classFilter: state.classFilter == className ? null : className,\n                roleFilter: null\n            }\n        });\n    }\n\n    render() {\n        const { error, isLoaded, characters, classFilter, roleFilter} = this.state;\n        const classSortOrder = { Warrior: 0, Rogue: 1, Hunter: 2, Mage: 3, Warlock: 4, Priest: 5, Shaman: 6, Paladin: 7, Druid: 8 };\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            let data = Object.values(characters)\n                .filter((character) => character.type !== \"NPC\" && character.type !== \"Pet\")\n                .filter((character) => classFilter == null || character.type === classFilter)\n                .filter((character) => roleFilter == null || character.roles.includes(roleFilter))\n                .sort((aValue, bValue) => {\n                     let classCompare = classSortOrder[aValue.type] - classSortOrder[bValue.type];\n\n                     if (classCompare !== 0)\n                         return classCompare;\n\n                     return aValue.name.localeCompare(bValue.name);\n                    });\n            return (\n                <>\n                    <div className=\"nav_bar\">\n                        <div className={\"class_nav Tank\" + (roleFilter === \"tank\" ? \" selected\" : \"\")} onClick={() => this.handleRole(\"tank\")}><img className=\"spell_icon\" src=\"https://wow.zamimg.com/images/wow/icons/tiny/role_tank.gif\" alt=\"Tanks\" />Tanks</div>\n                        <div className={\"class_nav DPS\" + (roleFilter === \"dps\" ? \" selected\" : \"\")} onClick={() => this.handleRole(\"dps\")}><img className=\"spell_icon\" src=\"https://wow.zamimg.com/images/wow/icons/tiny/role_dps.gif\" alt=\"DPS\" />DPS</div>\n                        <div className={\"class_nav Healer\" + (roleFilter === \"healer\" ? \" selected\" : \"\")} onClick={() => this.handleRole(\"healer\")}><img className=\"spell_icon\" src=\"https://wow.zamimg.com/images/wow/icons/tiny/role_healer.gif\" alt=\"Healers\" />Healers</div>\n                        <div className=\"separator\"></div>\n                        <div className={\"class_nav Warrior\" + (classFilter === \"Warrior\" ? \" selected\" : \"\")} onClick={() => this.handleClass(\"Warrior\")}><img className=\"spell_icon\" src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_sword_27.jpg\" alt=\"Warrior\" />Warrior</div>\n                        <div className={\"class_nav Rogue\" + (classFilter === \"Rogue\" ? \" selected\" : \"\")} onClick={() => this.handleClass(\"Rogue\")}><img className=\"spell_icon\" src=\"https://assets.rpglogs.com/img/warcraft/abilities/INV_ThrowingKnife_04.jpg\" alt=\"Rogue\" />Rogue</div>\n                        <div className={\"class_nav Hunter\" + (classFilter === \"Hunter\" ? \" selected\" : \"\")} onClick={() => this.handleClass(\"Hunter\")}><img className=\"spell_icon\" src=\"https://assets.rpglogs.com/img/warcraft/abilities/INV_Weapon_Bow_07.jpg\" alt=\"Hunter\" />Hunter</div>\n                        <div className={\"class_nav Mage\" + (classFilter === \"Mage\" ? \" selected\" : \"\")} onClick={() => this.handleClass(\"Mage\")}><img className=\"spell_icon\" src=\"https://assets.rpglogs.com/img/warcraft/abilities/INV_Staff_13.jpg\" alt=\"Mage\" />Mage</div>\n                        <div className={\"class_nav Warlock\" + (classFilter === \"Warlock\" ? \" selected\" : \"\")} onClick={() => this.handleClass(\"Warlock\")}><img className=\"spell_icon\" src=\"https://assets.rpglogs.com/img/warcraft/abilities/Spell_Nature_Drowsy.jpg\" alt=\"Warlock\" />Warlock</div>\n                        <div className={\"class_nav Priest\" + (classFilter === \"Priest\" ? \" selected\" : \"\")} onClick={() => this.handleClass(\"Priest\")}><img className=\"spell_icon\" src=\"https://assets.rpglogs.com/img/warcraft/abilities/INV_Staff_30.jpg\" alt=\"Priest\" />Priest</div>\n                        <div className={\"class_nav Paladin\" + (classFilter === \"Paladin\" ? \" selected\" : \"\")} onClick={() => this.handleClass(\"Paladin\")}><img className=\"spell_icon\" src=\"https://wow.zamimg.com/images/wow/icons/medium/class_paladin.jpg\" alt=\"Paladin\" />Paladin</div>\n                        <div className={\"class_nav Shaman\" + (classFilter === \"Shaman\" ? \" selected\" : \"\")} onClick={() => this.handleClass(\"Shaman\")}><img className=\"spell_icon\" src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_jewelry_talisman_04.jpg\" alt=\"Shaman\" />Shaman</div>\n                        <div className={\"class_nav Druid\" + (classFilter === \"Druid\" ? \" selected\" : \"\")} onClick={() => this.handleClass(\"Druid\")}><img className=\"spell_icon\" src=\"https://assets.rpglogs.com/img/warcraft/abilities/Ability_Druid_Maul.jpg\" alt=\"Druid\" />Druid</div>\n                    </div>\n\n                    <Grid data={data} logLoader={this._logLoader} classFilter={classFilter} roleFilter={roleFilter}>\n                        <GridColumnGroup id={GroupKeys.Name} label=\"Name\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.Name} \n                                        cssClass=\"name\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Enchants} label=\"Enchants\" cssClass=\"even-colgroup\">\n                            <GridColumn field={DataPoints.Enchants} \n                                        cssClass=\"enchants\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.WorldBuffs} label=\"World Buffs\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.WorldBuffCount} \n                                        cssClass=\"center\" \n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.WorldBuffUptime} \n                                        cssClass=\"world_buff\" \n                                        format=\"%\" \n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconColumn field={DataPoints.WorldBuffNef} \n                                            label=\"Rallying Cry of the Dragonslayer\" \n                                            icon_name=\"inv_misc_head_dragon_01.jpg\" \n                                            cssClass=\"world_buff\" \n                                            format=\"%\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.WorldBuffRend} \n                                            label=\"Warchief's Blessing\" \n                                            icon_name=\"spell_arcane_teleportorgrimmar.jpg\" \n                                            cssClass=\"world_buff\" \n                                            format=\"%\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.WorldBuffHoH} \n                                            label=\"Spirit of Zandalar\" \n                                            icon_name=\"ability_creature_poison_05.jpg\" \n                                            cssClass=\"world_buff\" \n                                            format=\"%\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.WorldBuffSF} \n                                            label=\"Songflower Serenade\" \n                                            icon_name=\"spell_holy_mindvision.jpg\" \n                                            cssClass=\"world_buff\" \n                                            format=\"%\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.WorldBuffMM} \n                                            label=\"Mol'dar's Moxie\" \n                                            icon_name=\"spell_nature_massteleport.jpg\" \n                                            cssClass=\"world_buff\" \n                                            format=\"%\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.WorldBuffFF} \n                                            label=\"Fengus' Frenzy\" \n                                            icon_name=\"spell_nature_undyingstrength.jpg\" \n                                            cssClass=\"world_buff\" \n                                            format=\"%\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.WorldBuffSS} \n                                            label=\"Slip'kik's Savvy\" \n                                            icon_name=\"spell_holy_lesserheal02.jpg\" \n                                            cssClass=\"world_buff\" \n                                            format=\"%\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.WorldBuffDMF} \n                                            label=\"Sayge's Dark Fortune\" \n                                            icon_name=\"inv_misc_orb_02.jpg\" \n                                            cssClass=\"world_buff\" \n                                            format=\"%\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Deaths} label=\"Deaths\" cssClass=\"even-colgroup\">\n                            <GridColumn field={DataPoints.Deaths} \n                                        cssClass=\"deaths\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.ProtPotions} label=\"Prot Potions\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.ProtectionPotionsTotal} \n                                        label=\"Uses\" \n                                        cssClass=\"center\" \n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.ProtectionPotionsTotalAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"center\" \n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsNature} \n                                        label=\"Nature Protection Potion\" \n                                        icon_name=\"inv_potion_06.jpg\" \n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterNature} \n                                        label=\"Greater Nature Protection Potion\" \n                                        icon_name=\"inv_potion_22.jpg\" \n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsNatureAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsFire} \n                                        label=\"Fire Protection Potion\" \n                                        icon_name=\"inv_potion_16.jpg\" \n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterFire} \n                                        label=\"Greater Fire Protection Potion\" \n                                        icon_name=\"inv_potion_24.jpg\" \n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsFireAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsFrost} \n                                            label=\"Frost Protection Potion\" \n                                            icon_name=\"inv_potion_13.jpg\" \n                                            cssClass=\"protection_potion frost\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterFrost} \n                                            label=\"Greater Frost Protection Potion\" \n                                            icon_name=\"inv_potion_20.jpg\" \n                                            cssClass=\"protection_potion frost\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsFrostAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion frost\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsShadow} \n                                            label=\"Shadow Protection Potion\" \n                                            icon_name=\"inv_potion_44.jpg\" \n                                            cssClass=\"protection_potion shadow\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterShadow} \n                                            label=\"Greater Shadow Protection Potion\" \n                                            icon_name=\"inv_potion_23.jpg\" \n                                            cssClass=\"protection_potion shadow\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsShadowAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion shadow\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterArcane} \n                                            label=\"Greater Arcane Protection Potion\" \n                                            icon_name=\"inv_potion_83.jpg\" \n                                            cssClass=\"protection_potion arcane\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsArcaneAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion arcane\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Damage} label=\"Unnecessary Damage\" cssClass=\"even-colgroup\">\n                            <GridColumn field={DataPoints.Enchants} \n                                        cssClass=\"name\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Consumes} label=\"Consumes\" cssClass=\"odd-colgroup\">\n                            <GridIconColumn field={DataPoints.ConsumesPotions} \n                                            label=\"Potions\" \n                                            icon_name=\"inv_drink_06.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconColumn field={DataPoints.ConsumesManaPots} \n                                            label=\"Major Mana Potions\" \n                                            icon_name=\"inv_potion_76.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.classFilter !== \"Warrior\" && ctx.classFilter !== \"Rogue\" && ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesRejuvPots} \n                                            label=\"Major Rejuvenation Potions\" \n                                            icon_name=\"inv_potion_47.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesHealthPots} \n                                            label=\"Major Healing Potion\" \n                                            icon_name=\"inv_potion_54.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesLIPs} \n                                            label=\"Limited Invulnerability Potions\" \n                                            icon_name=\"inv_potion_62.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesFreeActionPotion} \n                                            label=\"Free Action Potion\" \n                                            icon_name=\"inv_potion_04.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesRestorationPots} \n                                            label=\"Restorative Potion\" \n                                            icon_name=\"inv_potion_01.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesRagePotions} \n                                            label=\"Rage Potions\" \n                                            icon_name=\"inv_potion_41.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\") || (ctx.classFilter === \"Warrior\")} />\n                            <GridIconColumn field={DataPoints.ConsumesStoneshield} \n                                            label=\"Stoneshield Potions\" \n                                            icon_name=\"inv_potion_69.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\") || (ctx.roleFilter === \"tank\")} />\n\n                            <GridIconColumn field={DataPoints.ConsumesGems} \n                                            label=\"Gems/Runes/Stones\" \n                                            icon_name=\"inv_misc_gem_variety_01.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconColumn field={DataPoints.ConsumesRunes} \n                                            label=\"Dark/Demonic Runes\" \n                                            icon_name=\"inv_misc_rune_04.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.classFilter !== \"Warrior\" && ctx.classFilter !== \"Rogue\" && ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesHealthStones} \n                                            label=\"Major Health Stone\" \n                                            icon_name=\"inv_stone_04.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesWhipperRootTuber} \n                                            label=\"Whipper Root Tuber\" \n                                            icon_name=\"inv_misc_food_55.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesThistleTea} \n                                            label=\"Thistle Tea\" \n                                            icon_name=\"inv_drink_milk_05.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\" && ctx.roleFilter !== \"tank\") || (ctx.classFilter === \"Rogue\")} />\n                            <GridIconColumn field={DataPoints.ConsumesManaRuby} \n                                            label=\"Mana Ruby\" \n                                            icon_name=\"inv_misc_gem_ruby_01.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\" && ctx.roleFilter !== \"tank\") || (ctx.classFilter === \"Mage\")} />\n                            <GridIconColumn field={DataPoints.ConsumesManaCitrine} \n                                            label=\"Mana Citrine\" \n                                            icon_name=\"inv_misc_gem_opal_01.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\" && ctx.roleFilter !== \"tank\") || (ctx.classFilter === \"Mage\")} />\n                            <GridIconColumn field={DataPoints.ConsumesManaJade} \n                                            label=\"Mana Jade\" \n                                            icon_name=\"inv_misc_gem_emerald_02.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\" && ctx.roleFilter !== \"tank\") || (ctx.classFilter === \"Mage\")} />\n                            <GridIconColumn field={DataPoints.ConsumesManaAgate} \n                                            label=\"Mana Agate\" \n                                            icon_name=\"inv_misc_gem_emerald_01.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\" && ctx.roleFilter !== \"tank\") || (ctx.classFilter === \"Mage\")} />\n\n                            <GridIconColumn field={DataPoints.ConsumesElixirs} \n                                            label=\"Elixirs\" \n                                            icon_name=\"inv_potion_88.jpg\" \n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconColumn field={DataPoints.ConsumesPetris} \n                                            label=\"Flask of Petrification\" \n                                            icon_name=\"inv_potion_26.jpg\" \n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesElixirOfPoisonResistance} \n                                            label=\"Elixir of Poison Resistance\" \n                                            icon_name=\"inv_potion_12.jpg\" \n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesOilOfImmolation} \n                                            label=\"Oil of Immolation\" \n                                            icon_name=\"inv_potion_11.jpg\" \n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n\n                            <GridIconColumn field={DataPoints.ConsumesExplosives} \n                                            label=\"Bombs and Explosives\" \n                                            icon_name=\"inv_misc_bomb_06.jpg\" \n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconColumn field={DataPoints.ConsumesHolyWater} \n                                            label=\"Stratholme Holy Water\" \n                                            icon_name=\"inv_potion_75.jpg\" \n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesSapperCharge} \n                                            label=\"Goblin Sapper Charge\" \n                                            icon_name=\"spell_fire_selfdestruct.jpg\" \n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesEzThro} \n                                            label=\"Ez-Thro Dynamite II\" \n                                            icon_name=\"inv_misc_bomb_03.jpg\" \n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesDenseDynamite} \n                                            label=\"Dense Dynamite\" \n                                            icon_name=\"inv_misc_bomb_06.jpg\" \n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n\n                            <GridIconColumn field={DataPoints.ConsumesBandages} \n                                            label=\"First Aid\" \n                                            icon_name=\"spell_holy_sealofsacrifice.jpg\" \n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconColumn field={DataPoints.ConsumesHeavyRuneclothBandage} \n                                            label=\"Heavy Runecloth Bandage\" \n                                            icon_name=\"inv_misc_bandage_12.jpg\" \n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ConsumesAntiVenom} \n                                            label=\"Powerful Anti-Venom\" \n                                            icon_name=\"inv_drink_14.jpg\" \n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === false} />\n                        </GridColumnGroup>\n                        \n                        <GridColumnGroup id={GroupKeys.Abilities} label=\"Abilities\" cssClass=\"even-colgroup\">\n                            <GridColumn field={DataPoints.Enchants} \n                                        cssClass=\"name\" />\n                        </GridColumnGroup>\n                    </Grid>\n\n                    {/* <table>\n                        <thead>\n                            <tr className=\"grid_header\">\n                                {this.gridDefinition.map((colGroup) => {\n                                    return colGroup.GetHeader(context);\n                                })}\n                            </tr>\n                            <tr className=\"grid_subheader\">\n                                {this.gridDefinition.map((colGroup) => {\n                                    return colGroup.GetSubHeader(context);\n                                })}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {Object.entries(characters)\n                                   .filter(([_key,character]) => character.type !== \"NPC\" && character.type !== \"Pet\")\n                                   .sort(([_aKey,aValue], [_bKey,bValue]) => {\n                                        let classCompare = classSortOrder[aValue.type] - classSortOrder[bValue.type];\n\n                                        if (classCompare !== 0)\n                                            return classCompare;\n\n                                        return aValue.name.localeCompare(bValue.name);\n                                   })\n                                   .map(([key, character], row) => {\n                                       return (\n                                <SummaryRow key={key} character={character} row={row} logLoader={this._logLoader} gridDefinition={this.gridDefinition} context={this.state.context} />\n                            )})}\n                        </tbody>\n                    </table> */}\n                </>\n            )\n        }\n    }\n}","import './App.css';\nimport {Component} from \"react\";\nimport {HealerReport} from \"./HealerReport/HealerReport\";\nimport {ShamanReport} from \"./ShamanReport/ShamanReport\";\nimport {SummaryReport} from \"./SummaryReport/SummaryReport\";\nimport {LogLoader} from \"./warcraftLogLoader\";\nimport queryString from \"query-string\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reportInput: null,\n      reportId: '',\n      showTrash: false\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTrashToggle = this.handleTrashToggle.bind(this);\n  }\n\n  componentDidMount() {\n    const queryParsed = queryString.parse(window.location.search);\n    if (queryParsed && queryParsed.id) {\n      this.setState({\n        reportId: queryParsed.id\n      });\n      LogLoader.setReport(queryParsed.id);\n    }\n  }\n\n  handleChange(event) {\n    this.setState({reportInput: event.target.value });\n  }\n\n  handleTrashToggle(event) {\n    this.setState({showTrash: !this.state.showTrash});\n  }\n\n  handleSubmit(event) {\n    const {reportInput} = this.state;\n    this.setState({reportId: reportInput});\n    LogLoader.setReport(reportInput);\n    event.preventDefault();\n  }\n\n  render() {\n    const {reportId, showTrash} = this.state;\n    return (\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to={location => (\"/\" + location.search)}>Healer Report</Link>\n            </li>\n            <li>\n              <Link to={location => (\"/shaman\" + location.search)}>Shaman Report</Link>\n            </li>\n            <li>\n              <Link to={location => (\"/summary\" + location.search)}>Summary Report</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <div className=\"App\">\n          <form onSubmit={this.handleSubmit} >\n          Enter your Classic Warcraft Logs ID: <input type=\"text\" value={reportId} onChange={this.handleChange} /> <input type=\"submit\" value=\"Go\" />\n          </form>\n        </div>\n\n        {reportId !== '' &&\n          <Switch>\n            <Route path=\"/shaman\">\n              <ShamanReport reportId={reportId} />\n            </Route>\n            <Route path=\"/summary\">\n              <SummaryReport reportId={reportId} />\n            </Route>\n            <Route path=\"/\" >\n              <HealerReport reportId={reportId} showTrash={showTrash} />\n            </Route>\n          </Switch>\n        }\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}