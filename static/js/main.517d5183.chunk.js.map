{"version":3,"sources":["data.js","warcraftLogLoader.js","utils.js","ProgressBar.jsx","HealerFightSummary.jsx","healSummary.js","FightReport.jsx","HealerReport.jsx","App.js","reportWebVitals.js","index.js"],"names":["healingSpells","name","type","icon","mana","castTime","ticks","tickPortion","cooldownList","cooldown","protectionPotions","sharedEnchants","2544","score","2543","2545","1503","1505","1483","1504","1506","1507","1508","1509","1510","2604","1891","1893","928","1892","911","1887","851","929","2566","1886","1885","2565","1884","1883","2617","930","931","2619","2620","1888","2621","2622","1889","2505","2504","2567","2568","1903","1904","1890","926","requiredEnchants","Object","assign","2590","2587","2591","2584","offhandFrills","23049","23048","23029","22937","22994","19366","21597","23452","23468","23469","23453","21666","17067","20582","19142","21471","19922","19891","19312","19315","15942","15989","15941","15968","22329","18523","13353","22253","15988","21185","23156","18695","15940","13385","22319","15805","15987","15931","15857","11928","LogLoader","this","key","domain","reportId","fetch","then","res","json","start_time","end_time","Promise","all","getClassHealEvents","getClassCastEvents","getProtectionPotionHealingEvents","getProtectionPotionCastEvents","resolve","_reject","reduce","accum","current","reject","response","data","healerData","playerDetails","healers","acc","obj","playerId","slots","0","enchantable","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","enchants","combatantInfo","gear","enchant","slot","id","permanentEnchants","push","slotname","permanentEnchant","permanentEnchantName","weaponEnchant","temporaryEnchant","temporaryEnchantName","intellect","stats","Intellect","max","stamina","Stamina","catch","events","status","Error","statusText","concat","nextPageTimestamp","sourceClass","msToTime","s","secs","abbreviateNumber","num","toFixed","ProgressBar","props","summary","maxHeals","className","style","width","getTotalHeals","getEffectivePercent","getOverhealPercent","getWastedPercent","Component","HealerFightSummary","state","healer","spells","manaOil","classType","isExpanded","toggle","bind","setState","row","maxSpellHeals","agg","enchantScore","count","colour","tooltip","onClick","data-tip","data-place","data-class","data-html","manaPots","runes","manaGained","cooldowns","map","idx","src","alt","castsStarted","castsCompleted","getCastsPercent","effectiveHeals","overHeal","wastedHeals","wastedMana","sort","x","y","spell","colSpan","HealSummary","getHealSummary","collection","event","getOrCreate","aggregate","ability","guid","spellInfo","console","log","amount","overheal","tick","Math","round","FightReport","error","fight","isLoaded","healSummary","expanded","characters","healerInfo","getHealerInfo","getHealEvents","result","eventsByCharacter","getCharactersFromEvents","characterList","entries","value","characterName","characterClass","characterManaOil","bisEnchants","total","keyValuePair","pets","_event","sourceId","petOwner","abilityId","sourceID","spellId","loadData","details","fightClass","boss","kill","message","rowSpan","height","effectiveHeal","HealerReport","fights","getFights","friendlies","friendlyPets","showTrash","filter","item","App","reportInput","handleSubmit","handleChange","handleTrashToggle","queryParsed","queryString","parse","window","location","search","setReport","target","preventDefault","onSubmit","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.517d5183.chunk.js","sourcesContent":["export const healingSpells = {\n    // Priest Spells\n    '2054': {\n        name: \"Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 155,\n        castTime: 3000\n    },\n    '2055': {\n        name: \"Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 205,\n        castTime: 3000\n    },\n    '6063': {\n        name: \"Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 255,\n        castTime: 3000\n    },\n    '6064': {\n        name: \"Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 305,\n        castTime: 3000\n    },\n    '2061': {\n        name: \"Flash Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 125,\n        castTime: 1500\n    },\n    '9472': {\n        name: \"Flash Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 155,\n        castTime: 1500\n    },\n    '9473': {\n        name: \"Flash Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 185,\n        castTime: 1500\n    },\n    '9474': {\n        name: \"Flash Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 215,\n        castTime: 1500\n    },\n    '10915': {\n        name: \"Flash Heal (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 265,\n        castTime: 1500\n    },\n    '10916': {\n        name: \"Flash Heal (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 315,\n        castTime: 1500\n    },\n    '10917': {\n        name: \"Flash Heal (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 380,\n        castTime: 1500\n    },\n    '139': {\n        name: \"Renew (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 30,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6074': {\n        name: \"Renew (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 65,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6075': {\n        name: \"Renew (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 105,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6076': {\n        name: \"Renew (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 140,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6077': {\n        name: \"Renew (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 170,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6078': {\n        name: \"Renew (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 205,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10927': {\n        name: \"Renew (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 250,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10928': {\n        name: \"Renew (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 305,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10929': {\n        name: \"Renew (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 365,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '25315': {\n        name: \"Renew (Rank 10)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 410,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '17': {\n        name: \"Power Word: Shield (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 45,\n        castTime: 0\n    },\n    '592': {\n        name: \"Power Word: Shield (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 80,\n        castTime: 0\n    },\n    '600': {\n        name: \"Power Word: Shield (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 130,\n        castTime: 0\n    },\n    '3747': {\n        name: \"Power Word: Shield (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 175,\n        castTime: 0\n    },\n    '6065': {\n        name: \"Power Word: Shield (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 210,\n        castTime: 0\n    },\n    '6066': {\n        name: \"Power Word: Shield (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 250,\n        castTime: 0\n    },\n    '10898': {\n        name: \"Power Word: Shield (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 300,\n        castTime: 0\n    },\n    '10899': {\n        name: \"Power Word: Shield (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 355,\n        castTime: 0\n    },\n    '10900': {\n        name: \"Power Word: Shield (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 425,\n        castTime: 0\n    },\n    '10901': {\n        name: \"Power Word: Shield (Rank 10)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 500,\n        castTime: 0\n    },\n    '2060': {\n        name: \"Greater Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 370,\n        castTime: 3000\n    },\n    '10963': {\n        name: \"Greater Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 455,\n        castTime: 3000\n    },\n    '10964': {\n        name: \"Greater Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 545,\n        castTime: 3000\n    },\n    '10965': {\n        name: \"Greater Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 655,\n        castTime: 3000\n    },\n    '25314': {\n        name: \"Greater Heal (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 710,\n        castTime: 3000\n    },\n    '596': {\n        name: \"Prayer of Healing (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 410,\n        castTime: 3000\n    },\n    '996': {\n        name: \"Prayer of Healing (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 560,\n        castTime: 3000\n    },\n    '10960': {\n        name: \"Prayer of Healing (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 770,\n        castTime: 3000\n    },\n    '10961': {\n        name: \"Prayer of Healing (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 1030,\n        castTime: 3000\n    },\n    '25316': {\n        name: \"Prayer of Healing (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 1070,\n        castTime: 3000\n    },\n    '2050': {\n        name: \"Lesser Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 30,\n        castTime: 1500\n    },\n    '2052': {\n        name: \"Lesser Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 45,\n        castTime: 2000\n    },\n    '2053': {\n        name: \"Lesser Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 75,\n        castTime: 2500\n    },\n    '22009': {\n        name: \"Greater Heal (Renew)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 0,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 0\n    },\n    // Druid Spells\n    '774': {\n        name: \"Rejuvenation (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 25,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '1058': {\n        name: \"Rejuvenation (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 40,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '1430': {\n        name: \"Rejuvenation (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 75,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '2090': {\n        name: \"Rejuvenation (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 105,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '2091': {\n        name: \"Rejuvenation (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 135,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '3627': {\n        name: \"Rejuvenation (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 160,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '8910': {\n        name: \"Rejuvenation (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 195,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9839': {\n        name: \"Rejuvenation (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 235,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9840': {\n        name: \"Rejuvenation (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 280,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9841': {\n        name: \"Rejuvenation (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 335,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '25299': {\n        name: \"Rejuvenation (Rank 11)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 360,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '5185': {\n        name: \"Healing Touch (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 25,\n        castTime: 1500\n    },\n    '5186': {\n        name: \"Healing Touch (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 55,\n        castTime: 2000\n    },\n    '5187': {\n        name: \"Healing Touch (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 110,\n        castTime: 2500\n    },\n    '5188': {\n        name: \"Healing Touch (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 185,\n        castTime: 3000\n    },\n    '5189': {\n        name: \"Healing Touch (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 270,\n        castTime: 3500\n    },\n    '6778': {\n        name: \"Healing Touch (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 335,\n        castTime: 3500\n    },\n    '8903': {\n        name: \"Healing Touch (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 405,\n        castTime: 3500\n    },\n    '9758': {\n        name: \"Healing Touch (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 495,\n        castTime: 3500\n    },\n    '9888': {\n        name: \"Healing Touch (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 600,\n        castTime: 3500\n    },\n    '9889': {\n        name: \"Healing Touch (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 720,\n        castTime: 3500\n    },\n    '25297': {\n        name: \"Healing Touch (Rank 11)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 800,\n        castTime: 3500\n    },\n    '8936': {\n        name: \"Regrowth (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 120,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8938': {\n        name: \"Regrowth (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 205,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8939': {\n        name: \"Regrowth (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 280,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8940': {\n        name: \"Regrowth (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 350,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8941': {\n        name: \"Regrowth (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 420,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9750': {\n        name: \"Regrowth (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 510,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9856': {\n        name: \"Regrowth (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 615,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9857': {\n        name: \"Regrowth (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 740,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9858': {\n        name: \"Regrowth (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 880,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '740': {\n        name: \"Tranquility (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 375,\n        castTime: 0\n    },\n    '8918': {\n        name: \"Tranquility (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 505,\n        castTime: 0\n    },\n    '9862': {\n        name: \"Tranquility (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 695,\n        castTime: 0\n    },\n    '9863': {\n        name: \"Tranquility (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 925,\n        castTime: 0\n    },\n    '18562': {\n        name: \"Swiftmend\",\n        type: \"Nature\",\n        icon: \"inv_relics_idolofrejuvenation.jpg\",\n        mana: 250,\n        castTime: 0\n    },\n    // Shaman\n    '1064': {\n        name: \"Chain Heal (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 260,\n        castTime: 2500\n    },\n    '10622': {\n        name: \"Chain Heal (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 315,\n        castTime: 2500\n    },\n    '10623': {\n        name: \"Chain Heal (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 405,\n        castTime: 2500\n    },\n    '8004': {\n        name: \"Lesser Healing Wave (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 105,\n        castTime: 1500\n    },\n    '8008': {\n        name: \"Lesser Healing Wave (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 145,\n        castTime: 1500\n    },\n    '8010': {\n        name: \"Lesser Healing Wave (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 185,\n        castTime: 1500\n    },\n    '10466': {\n        name: \"Lesser Healing Wave (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 235,\n        castTime: 1500\n    },\n    '10467': {\n        name: \"Lesser Healing Wave (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 305,\n        castTime: 1500\n    },\n    '10468': {\n        name: \"Lesser Healing Wave (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 380,\n        castTime: 1500\n    },\n    '331': {\n        name: \"Healing Wave (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 25,\n        castTime: 1500\n    },\n    '332': {\n        name: \"Healing Wave (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 45,\n        castTime: 2000\n    },\n    '547': {\n        name: \"Healing Wave (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 80,\n        castTime: 2500\n    },\n    '913': {\n        name: \"Healing Wave (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 155,\n        castTime: 3000\n    },\n    '939': {\n        name: \"Healing Wave (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 200,\n        castTime: 3000\n    },\n    '959': {\n        name: \"Healing Wave (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 265,\n        castTime: 3000\n    },\n    '8005': {\n        name: \"Healing Wave (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 340,\n        castTime: 3000\n    },\n    '10395': {\n        name: \"Healing Wave (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 440,\n        castTime: 3000\n    },\n    '10396': {\n        name: \"Healing Wave (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 560,\n        castTime: 3000\n    },\n    '25357': {\n        name: \"Healing Wave (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 620,\n        castTime: 3000\n    },\n    '5672': {\n        name: \"Healing Stream (Rank 1)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 40,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '6371': {\n        name: \"Healing Stream (Rank 2)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 50,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '6372': {\n        name: \"Healing Stream (Rank 3)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 60,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '10460': {\n        name: \"Healing Stream (Rank 4)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 70,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '10461': {\n        name: \"Healing Stream (Rank 5)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 80,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    // Bandages\n    '746': {\n        name: \"Linen Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_15.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '1159': {\n        name: \"Heavy Linen Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_18.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '3267': {\n        name: \"Wool Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_14.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '3268': {\n        name: \"Heavy Wool Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_17.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7926': {\n        name: \"Silk Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_01.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7927': {\n        name: \"Heavy Silk Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_02.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '10838': {\n        name: \"Mageweave Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_19.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '10839': {\n        name: \"Heave Mageweave Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_20.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '18608': {\n        name: \"Runecloth Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_11.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '18610': {\n        name: \"Heavy Runecloth Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_12.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    // Paladin\n    '19750': {\n        name: \"Flash of Light (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 35,\n        castTime: 1500\n    },\n    '19939': {\n        name: \"Flash of Light (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 50,\n        castTime: 1500\n    },\n    '19940': {\n        name: \"Flash of Light (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 70,\n        castTime: 1500\n    },\n    '19941': {\n        name: \"Flash of Light (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 90,\n        castTime: 1500\n    },\n    '19942': {\n        name: \"Flash of Light (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 115,\n        castTime: 1500\n    },\n    '19943': {\n        name: \"Flash of Light (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 140,\n        castTime: 1500\n    },\n    '635': {\n        name: \"Holy Light (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 35,\n        castTime: 2500\n    },\n    '639': {\n        name: \"Holy Light (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 60,\n        castTime: 2500\n    },\n    '647': {\n        name: \"Holy Light (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 110,\n        castTime: 2500\n    },\n    '1026': {\n        name: \"Holy Light (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 190,\n        castTime: 2500\n    },\n    '1042': {\n        name: \"Holy Light (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 275,\n        castTime: 2500\n    },\n    '3472': {\n        name: \"Holy Light (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 365,\n        castTime: 2500\n    },\n    '10328': {\n        name: \"Holy Light (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 465,\n        castTime: 2500\n    },\n    '10329': {\n        name: \"Holy Light (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 580,\n        castTime: 2500\n    },\n    '25292': {\n        name: \"Holy Light (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 660,\n        castTime: 2500\n    },\n    '633': {\n        name: \"Lay on Hands (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    '2800': {\n        name: \"Lay on Hands (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    '10310': {\n        name: \"Lay on Hands (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    /*'20185': {\n        name: \"Judgement of Light (Rank 1)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20344': {\n        name: \"Judgement of Light (Rank 2)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20345': {\n        name: \"Judgement of Light (Rank 3)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20346': {\n        name: \"Judgement of Light (Rank 4)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    }*/\n\n    '17546': {\n        name: \"Greater Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_22.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7254': {\n        name: \"Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_06.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17548': {\n        name: \"Greater Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_23.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7242': {\n        name: \"Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_44.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17544': {\n        name: \"Greater Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_20.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7240': {\n        name: \"Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_13.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17543': {\n        name: \"Greater Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_24.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7230': {\n        name: \"Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_16.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17549': {\n        name: \"Greater Arcane Protection Potion\",\n        type: \"Arcane\",\n        icon: \"inv_potion_83.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    //Trinkets\n    '26470': {\n        name: \"Scarab Brooch\",\n        type: \"Physical\",\n        icon: \"inv_misc_ahnqirajtrinket_06.jpg\",\n        mana: 0,\n        castTime: 0\n    }\n\n    // Healing Totem\n\n    // Seal of Light\n}\n\nexport const cooldownList = {\n    '14751': {\n        name: \"Inner Focus\",\n        icon: \"spell_frost_windwalkon.jpg\",\n        cooldown: 180000\n    },\n    '17116': {\n        name: \"Nature's Swiftness\",\n        icon: \"spell_nature_ravenform.jpg\",\n        cooldown: 180000\n    },\n    '16188': {\n        name: \"Nature's Swiftness\",\n        icon: \"spell_nature_ravenform.jpg\",\n        cooldown: 180000\n    },\n    '29166': {\n        name: \"Innervate\",\n        icon: \"spell_nature_lightning.jpg\",\n        cooldown: 360000\n    },\n    '16190': {\n        name: \"Mana Tide Totem (Rank 1)\",\n        icon: \"spell_frost_summonwaterelemental.jpg\",\n        cooldown: 300000\n    },\n    '17354': {\n        name: \"Mana Tide Totem (Rank 2)\",\n        icon: \"spell_frost_summonwaterelemental.jpg\",\n        cooldown: 300000\n    },\n    '17359': {\n        name: \"Mana Tide Totem (Rank 3)\",\n        icon: \"spell_frost_summonwaterelemental.jpg\",\n        cooldown: 300000\n    },\n    '20484': {\n        name: \"Rebirth (Rank 1)\",\n        icon: \"spell_nature_reincarnation.jpg\",\n        cooldown: 1800000\n    },\n    '20739': {\n        name: \"Rebirth (Rank 2)\",\n        icon: \"spell_nature_reincarnation.jpg\",\n        cooldown: 1800000\n    },\n    '20742': {\n        name: \"Rebirth (Rank 3)\",\n        icon: \"spell_nature_reincarnation.jpg\",\n        cooldown: 1800000\n    },\n    '20747': {\n        name: \"Rebirth (Rank 4)\",\n        icon: \"spell_nature_reincarnation.jpg\",\n        cooldown: 1800000\n    },\n    '20748': {\n        name: \"Rebirth (Rank 5)\",\n        icon: \"spell_nature_reincarnation.jpg\",\n        cooldown: 1800000\n    },\n    '740': {\n        name: \"Tranquility (Rank 1)\",\n        icon: \"spell_nature_tranquility.jpg\",\n        cooldown: 300000\n    },\n    '8918': {\n        name: \"Tranquility (Rank 2)\",\n        icon: \"spell_nature_tranquility.jpg\",\n        cooldown: 300000\n    },\n    '9862': {\n        name: \"Tranquility (Rank 3)\",\n        icon: \"spell_nature_tranquility.jpg\",\n        cooldown: 300000\n    },\n    '9863': {\n        name: \"Tranquility (Rank 4)\",\n        icon: \"spell_nature_tranquility.jpg\",\n        cooldown: 300000\n    },\n    '20554': {\n        name: \"Berserking\",\n        icon: \"racial_troll_berserk.jpg\",\n        cooldown: 180000\n    },\n    '633': {\n        name: \"Lay on Hands (Rank 1)\",\n        icon: \"spell_holy_layonhands.jpg\",\n        cooldown: 3600000\n    },\n    '2800': {\n        name: \"Lay on Hands (Rank 2)\",\n        icon: \"spell_holy_layonhands.jpg\",\n        cooldown: 3600000\n    },\n    '10310': {\n        name: \"Lay on Hands (Rank 3)\",\n        icon: \"spell_holy_layonhands.jpg\",\n        cooldown: 3600000\n    },\n    '19752': {\n        name: \"Divine Intervention\",\n        icon: \"spell_nature_timestop.jpg\",\n        cooldown: 3600000\n    },\n    '642': {\n        name: \"Divine Shield (Rank 1)\",\n        icon: \"spell_holy_divineintervention.jpg\",\n        cooldown: 300000\n    },\n    '1020': {\n        name: \"Divine Shield (Rank 2)\",\n        icon: \"spell_holy_divineintervention.jpg\",\n        cooldown: 300000\n    },\n    '498': {\n        name: \"Divine Protection (Rank 1)\",\n        icon: \"spell_holy_restoration.jpg\",\n        cooldown: 300000\n    },\n    '5573': {\n        name: \"Divine Protection (Rank 2)\",\n        icon: \"spell_holy_restoration.jpg\",\n        cooldown: 300000\n    },\n    '1022': {\n        name: \"Blessing of Protection (Rank 1)\",\n        icon: \"spell_holy_sealofprotection.jpg\",\n        cooldown: 300000\n    },\n    '5599': {\n        name: \"Blessing of Protection (Rank 2)\",\n        icon: \"spell_holy_sealofprotection.jpg\",\n        cooldown: 300000\n    },\n    '10278': {\n        name: \"Blessing of Protection (Rank 3)\",\n        icon: \"spell_holy_sealofprotection.jpg\",\n        cooldown: 300000\n    },\n    '23734': {\n        name: \"Natural Alignment Crystal\",\n        icon: \"inv_misc_gem_03.jpg\",\n        cooldown: 300000\n    },\n    '26467': {\n        name: \"Scarab Brooch\",\n        icon: \"inv_misc_ahnqirajtrinket_06.jpg\",\n        cooldown: 180000\n    },\n    '24659': {\n        name: \"Zandalarian Hero Charm\",\n        icon: \"inv_jewelry_necklace_13.jpg\",\n        cooldown: 120000\n    }\n\n}\n\nexport const protectionPotions = {\n    '17546': {\n        name: \"Greater Nature Protection Potion\",\n        type: \"Nature\"\n    },\n    '7254': {\n        name: \"Nature Protection Potion\",\n        type: \"Nature\"\n    },\n    '17548': {\n        name: \"Greater Shadow Protection Potion\",\n        type: \"Shadow\"\n    },\n    '7242': {\n        name: \"Shadow Protection Potion\",\n        type: \"Shadow\"\n    },\n    '17544': {\n        name: \"Greater Frost Protection Potion\",\n        type: \"Frost\"\n    },\n    '7240': {\n        name: \"Frost Protection Potion\",\n        type: \"Frost\"\n    },\n    '17543': {\n        name: \"Greater Fire Protection Potion\",\n        type: \"Fire\"\n    },\n    '7230': {\n        name: \"Fire Protection Potion\",\n        type: \"Fire\"\n    },\n    '17549': {\n        name: \"Greater Arcane Protection Potion\",\n        type: \"Arcane\"\n    }\n}\n\nconst sharedEnchants = {\n    \"0\": {\n        2544: { score: 0, name: \"Arcanum of Focus (+8 heal)\"},\n        2543: { score: 0, name: \"Arcanum of Rapidity (1% haste)\"},\n        2545: { score: 0, name: \"Arcanum of Protection (1% dodge)\"},\n        1503: { score: 0, name: \"Lesser Arcanum of Constitution (+100hp)\"},\n        1505: { score: 0, name: \"Lesser Arcanum of Resilience (+20FR)\"},\n        1483: { score: 0, name: \"Lesser Arcanum of Rumination (+150mana)\"},\n        1504: { score: 0, name: \"Lesser Arcanum of Tenacity (+125 armor)\"},\n        1506: { score: 0, name: \"Lesser Arcanum of Voracity (+8 str)\"},\n        1507: { score: 0, name: \"Lesser Arcanum of Voracity (+8 stam)\"},\n        1508: { score: 0, name: \"Lesser Arcanum of Voracity (+8 agi)\"},\n        1509: { score: 0, name: \"Lesser Arcanum of Voracity (+8 int)\"},\n        1510: { score: 0, name: \"Lesser Arcanum of Voracity (+8 spi)\"}\n    },\n    \"2\": {  // Shoulders\n        2604: { score: 1, name: \"Zandalar Signet of Serenity\" }  // Zandalar Signet of Serenity\n    },\n    \"4\": {  // Chest\n        1891: { score: 1, name: \"Greater Stats (+4)\" },     // +4 Stats\n        1893: { score: 0.5, name: \"Major Mana (+100)\" },   // Major Mana\n        928: { score: 0.5, name: \"Stats (+3)\" },     // Stats\n        1892: { score: 0, name: \"Major Health (+100)\"}\n    },\n    \"6\": {\n        2544: { score: 0, name: \"Arcanum of Focus (+8 heal)\"},\n        2543: { score: 0, name: \"Arcanum of Rapidity (1% haste)\"},\n        2545: { score: 0, name: \"Arcanum of Protection (1% dodge)\"},\n        1503: { score: 0, name: \"Lesser Arcanum of Constitution (+100hp)\"},\n        1505: { score: 0, name: \"Lesser Arcanum of Resilience (+20FR)\"},\n        1483: { score: 0, name: \"Lesser Arcanum of Rumination (+150mana)\"},\n        1504: { score: 0, name: \"Lesser Arcanum of Tenacity (+125 armor)\"},\n        1506: { score: 0, name: \"Lesser Arcanum of Voracity (+8 str)\"},\n        1507: { score: 0, name: \"Lesser Arcanum of Voracity (+8 stam)\"},\n        1508: { score: 0, name: \"Lesser Arcanum of Voracity (+8 agi)\"},\n        1509: { score: 0, name: \"Lesser Arcanum of Voracity (+8 int)\"},\n        1510: { score: 0, name: \"Lesser Arcanum of Voracity (+8 spi)\"}\n    },\n    \"7\": {  // Feet\n        911: { score: 1, name: \"Minor Run Speed\" },    // Minor Run Speed\n        1887: { score: 0, name: \"Greater Agility (+7)\"},\n        851: { score: 0.5, name: \"Spirit (+5)\"},\n        929: { score: 0, name: \"Greater Stamina (+7)\"}\n    },\n    \"8\": {  // Bracers\n        2566: { score: 1, name: \"Healing Power (+24)\" },  // +24 Healing\n        1886: { score: 0, name: \"Superior Stamina (+9)\"},\n        1885: { score: 0, name: \"Superior Strength (+9)\"},\n        2565: { score: 0, name: \"Mana Regeneration (4mp5)\"},\n        1884: { score: 0, name: \"Superior Spirit (+9)\"},\n        1883: { score: 0, name: \"Greater Intellect (+7)\"}\n    },\n    \"9\": {  // Gloves\n        2617: { score: 1, name: \"Healing Power (+30)\" },  // +30 Healing\n        930: { score: 0, name: \"Riding Skill\" },\n        931: { score: 0, name: \"Minor Haste\" }\n    },\n    \"14\": {  // Back\n        2619: { score: 1, name: \"Greater Fire Resistance (+15)\" }, // Greater Fire Resistance\n        2620: { score: 1, name: \"Greater Nature Resistance (+15)\" }, // Greater Nature Resistance\n        1888: { score: 1, name: \"Greater Resistance (+5)\" },  // Greater Resistance\n        2621: { score: 1, name: \"Subtlety (-2% threat)\" },\n        2622: { score: 0, name: \"Dodge (1% dodge)\" },\n        1889: { score: 0, name: \"Superior Defense (+70 armor)\" }\n    },\n    \"15\": {  // Main Hand\n        2505: { score: 1, name: \"Healing Power (+55)\" },  // +55 Healing\n        2504: { score: 0, name: \"Spell Power (+30)\" },\n        2567: { score: 0, name: \"Mighty Spirit (+20)\" } ,\n        2568: { score: 0, name: \"Mighty Intellect (+22)\" } ,\n        1903: { score: 0, name: \"Major Spirit (+9)\" } ,\n        1904: { score: 0, name: \"Major Intellect (+9)\" } \n    },\n    \"16\": {  // Offhand\n        929: { score: 1, name: \"Greater Stamina (+7)\" },   // +7 Stamina\n        1890: { score: 1, name: \"Superior Spirit (+9)\" },\n        926: { score: 1, name: \"Frost Resistance (+8)\" }\n    }\n}\n\nexport const requiredEnchants = {\n    \"Priest\": Object.assign({}, sharedEnchants, {\n        \"0\": Object.assign({}, sharedEnchants[\"0\"], {  // Head     \n            2590: { score: 1, name: \"Prophetic Aura\" }  // Prophetic Aura\n        }),\n        \"6\": Object.assign({}, sharedEnchants[\"6\"], {  // Legs\n            2590: { score: 1, name: \"Prophetic Aura\" },  // Prophetic Aura\n        })\n    }),\n    \"Shaman\": Object.assign({}, sharedEnchants, {\n        \"0\": Object.assign({}, sharedEnchants[\"0\"], {  // Head     \n            2587: { score: 1, name: \"Vodouisant's Vigilant Embrace\" }  // Vodouisant's Vigilant Embrace\n        }),\n        \"6\": Object.assign({}, sharedEnchants[\"6\"], {  // Legs\n            2587: { score: 1, name: \"Vodouisant's Vigilant Embrace\" }  // Vodouisant's Vigilant Embrace\n        })\n    }),\n    \"Druid\": Object.assign({}, sharedEnchants, {\n        \"0\": Object.assign({}, sharedEnchants[\"0\"], {  // Head     \n            2591: { score: 1, name: \"Animist's Caress\" }  // Animist's Caress\n        }),\n        \"6\": Object.assign({}, sharedEnchants[\"6\"], {  // Legs\n            2591: { score: 1, name: \"Animist's Caress\" }  // Animist's Caress\n        })\n    }),\n    \"Paladin\": Object.assign({}, sharedEnchants, {\n        \"0\": Object.assign({}, sharedEnchants[\"0\"], {  // Head     \n            2584: { score: 1, name: \"Syncretist's Sigil\" }  // Syncretist's Sigil\n        }),\n        \"6\": Object.assign({}, sharedEnchants[\"6\"], {  // Legs\n            2584: { score: 1, name: \"Syncretist's Sigil\" }  // Syncretist's Sigil\n        })\n    })\n}\n\nexport const offhandFrills = {\n    23049: true,    // Sapphiron's Left Eye\n    23048: true,    // Sapphiron's Right Eye\n    23029: true,    // Noth's Frigid Heart\n    22937: true,    // Gem of Nerubis\n    22994: true,    // Digested Hand of Power\n    19366: true,    // Master Dragonslayer's Orb\n    21597: true,    // Royal Scepter of Vek'lor\n    23452: true,    // Grand Marshal's Tome of Power\n    23468: true,    // High Warlord's Tome of Destruction\n    23469: true,    // High Warlord's Tome of Mending\n    23453: true,    // Grand Marshal's Tome of Restoration\n    21666: true,    // Sartura's Might\n    17067: true,    // Ancient Cornerstone Grimoire\n    20582: true,    // Trance Stone\n    19142: true,    // Fire Runed Grimoire\n    21471: true,    // Talon of Furious Concentration\n    19922: true,    // Arlokk's Hoodoo Stick\n    19891: true,    // Jin'do's Bag of Whammies\n    19312: true,    // Lei of the Lifegiver\n    19315: true,    // Therazane's Touch\n    15942: true,    // Master's Rod\n    15989: true,    // Eternal Rod\n    15941: true,    // High Councillor's Scepter\n    15968: true,    // Elunarian Sphere\n    22329: true,    // Scepter of Interminable Focus\n    18523: true,    // Brightly Glowing Stone\n    13353: true,    // Book of the Dead\n    22253: true,    // Tome of the Lost\n    15988: true,    // Resplendent Orb\n    21185: true,    // Earthcalm Orb\n    23156: true,    // Blackwood's Thigh\n    18695: true,    // Spellbound Tome\n    15940: true,    // Elegant Scepter\n    13385: true,    // Tome of Knowledge\n    22319: true,    // Tome of Divine Right\n    15805: true,    // Penelope's Rose,\n    15987: true,    // Astral Orb\n    15931: true,    // Arcane Star\n    15857: true,    // Magebane Scion\n    11928: true    // Thaurissan's Royal Scepter\n}","import {offhandFrills} from \"./data\";\n\nclass WarcraftLogLoader {\n    constructor() {\n        this.key = \"e422378c419a25cc1accb41845b259ab\";\n        this.domain = \"https://classic.warcraftlogs.com/v1/\";\n        this.reportId = null;\n    }\n\n    setReport(reportId) {\n        this.reportId = reportId;\n    }\n\n    getFights() {\n        return fetch(this.domain + \"report/fights/\" + this.reportId + \"?api_key=\" + this.key)\n                .then(res => res.json());\n    }\n\n    getHealEvents(start_time, end_time) {\n        return Promise.all([\n            this.getClassHealEvents(start_time, end_time, \"priest\"),\n            this.getClassHealEvents(start_time, end_time, \"druid\"),\n            this.getClassHealEvents(start_time, end_time, \"shaman\"),\n            this.getClassHealEvents(start_time, end_time, \"paladin\"),\n\n            this.getClassCastEvents(start_time, end_time, \"priest\"),\n            this.getClassCastEvents(start_time, end_time, \"druid\"),\n            this.getClassCastEvents(start_time, end_time, \"shaman\"),\n            this.getClassCastEvents(start_time, end_time, \"paladin\"),\n\n            //this.getManaRegeneration(start_time, end_time),\n\n            this.getProtectionPotionHealingEvents(start_time, end_time),\n            this.getProtectionPotionCastEvents(start_time, end_time),\n        ])\n        //.then(res => Promise.all(res.map(response => response.json())))\n        .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n            accum = [...accum, ...current];\n\n            return accum;\n        }, []))));\n    }\n\n    getHealerInfo(start_time, end_time) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let healerData = [];\n            if (!data.playerDetails.healers) {\n                resolve(healerData);\n                return;\n            }\n\n            healerData = data.playerDetails.healers.reduce((acc, obj) => {\n                let playerId = obj[\"id\"];\n\n                const slots = {\n                    0: { enchantable: true, name: \"Head\" },\n                    1: { enchantable: false, name: \"Neck\" },\n                    2: { enchantable: true, name: \"Shoulders\" },\n                    3: { enchantable: false, name: \"Shirt\" },\n                    4: { enchantable: true, name: \"Chest\" },\n                    5: { enchantable: false, name: \"Waist\" },\n                    6: { enchantable: true, name: \"Legs\" },\n                    7: { enchantable: true, name: \"Feet\" },\n                    8: { enchantable: true, name: \"Arms\" },\n                    9: { enchantable: true, name: \"Hands\" },\n                    10: { enchantable: false, name: \"Ring 1\" },\n                    11: { enchantable: false, name: \"Ring 2\" },\n                    12: { enchantable: false, name: \"Trinket 1\" },\n                    13: { enchantable: false, name: \"Trinket 2\" },\n                    14: { enchantable: true, name: \"Back\" },\n                    15: { enchantable: true, name: \"Main Hand\" },\n                    16: { enchantable: true, name: \"Off Hand\" },\n                    17: { enchantable: false, name: \"Ranged\" },\n                    18: { enchantable: false, name: \"Tabard\" }\n                };\n\n                let enchants = obj.combatantInfo.gear.reduce((enchant, gear) => {\n                    \n                    if (slots[gear.slot].enchantable && gear.id !== 0 && !offhandFrills[gear.id])\n                    {\n                        enchant.permanentEnchants.push({slot: gear.slot, slotname: slots[gear.slot].name, id: gear.permanentEnchant, name: gear.permanentEnchantName})\n                    }\n\n                    if (gear.slot === 15) {\n                        enchant.weaponEnchant.id = gear.temporaryEnchant;\n                        enchant.weaponEnchant.name = gear.temporaryEnchantName;\n                    }\n\n                    return enchant;\n                }, { permanentEnchants: [], weaponEnchant: {}});\n                \n                acc[playerId] = {\n                    id: playerId,\n                    name: obj.name,\n                    type: obj.type,\n                    intellect: obj.combatantInfo.stats.Intellect.max,\n                    stamina: obj.combatantInfo.stats.Stamina.max,\n                    weaponEnchant: enchants.weaponEnchant,\n                    enchants: enchants.permanentEnchants\n                };\n\n                return acc;\n            }, {});\n\n            resolve(healerData);\n        }).catch(reject));\n    }\n\n    /* getManaRegeneration(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/resources/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&abilityid=100\")\n        .then(response =>  {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events.filter(obj => obj.ability.guid === 18194));\n\n                if (data.nextPageTimestamp) {\n                    this.getManaRegeneration(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    } */\n\n    getProtectionPotionHealingEvents(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getProtectionPotionHealingEvents(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getProtectionPotionCastEvents(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getProtectionPotionCastEvents(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getClassHealEvents(start_time, end_time, sourceClass, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceclass=\" + sourceClass)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getClassHealEvents(data.nextPageTimestamp, end_time, sourceClass, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getClassCastEvents(start_time, end_time, sourceClass, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceclass=\" + sourceClass)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getClassCastEvents(data.nextPageTimestamp, end_time, sourceClass, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n}\n\nexport let LogLoader = new WarcraftLogLoader();","export function msToTime(s) {\n    var ms = s % 1000;\n    s = (s - ms) / 1000;\n    var secs = s % 60;\n    s = (s - secs) / 60;\n    var mins = s % 60;\n\n    return mins + ':' + (secs < 10 ? \"0\" : \"\") + secs;\n}\n\nexport function abbreviateNumber(num) {\n    if (num > 1000) {\n        return (num / 1000).toFixed(1) + \"k\";\n    }\n\n    return num;\n}","import {Component} from \"react\";\n\nexport class ProgressBar extends Component {\n\n    render() {\n        const {summary, maxHeals} = this.props;\n\n        return (\n            <div className=\"bar\" style={{width: (summary.getTotalHeals() / maxHeals * 100).toFixed(2) + \"%\"}}>\n                <div className=\"bar_effective\" style={{width: summary.getEffectivePercent()+'%'}}></div>\n                <div className=\"bar_overheal\" style={{width: (summary.getOverhealPercent() - summary.getWastedPercent())+'%'}}>&nbsp;</div>\n                <div className=\"bar_wasted\" style={{width: summary.getWastedPercent()+'%'}}>&nbsp;</div>\n            </div>\n        )\n    }\n}","import {Component} from \"react\";\nimport {abbreviateNumber} from \"./utils\";\nimport {ProgressBar} from \"./ProgressBar\";\n\nexport class HealerFightSummary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            summary: props.healer.summary,\n            spells: props.healer.spells,\n            name: props.healer.name,\n            manaOil: props.healer.manaOil,\n            enchants: props.healer.enchants,\n            id: props.healer.id,\n            classType: props.healer.classType,\n            isExpanded: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            isExpanded: !this.state.isExpanded\n        })\n    }\n\n    render() {\n        const {id, name, classType, manaOil, summary, spells, isExpanded, enchants} = this.state;\n        const {row, maxHeals} = this.props;\n\n        let maxSpellHeals = spells.reduce((agg,obj) => {\n            if (obj.summary.getTotalHeals() > agg) {\n                agg = obj.summary.getTotalHeals();\n            }\n            return agg;\n        }, 0);\n\n        let enchantScore = enchants.reduce((acc, obj) => {\n            acc.score += obj.score;\n            acc.count++;\n\n            if (acc.score !== acc.count) {\n                acc.colour = \"yellow\";\n            }\n\n            if (acc.score === 0) {\n                acc.colour = \"red\";\n            }\n\n            acc.tooltip += obj.slot + \": \" \n                + (obj.name ? obj.name : \"(none)\") \n                + (obj.score === 1 ? \" <span class='tick'>✔</span>\" : obj.score === 0 ? \" <span class='cross'>✖</span>\" : \" <span class='alternative'>✔</span>\")\n                + \"<br />\";\n\n            return acc;\n        }, { score: 0, count: 0, colour: \"green\", tooltip: \"\"})\n\n        return (\n            <>\n                <tr key={id} className={classType + \" character \" + (row % 2 === 0 ? \"even\" : \"odd\")} onClick={this.toggle}>\n                    <td className=\"healer_name\">{name}</td>\n                    <td className={\"healer_enchants_\" + enchantScore.colour} data-tip={enchantScore.tooltip} data-place='right' data-class='enchant_tooltip' data-html={true}>{enchantScore.score}/{enchantScore.count}</td>\n                    <td className=\"healer_consumes_manapot center\">{summary.manaPots}</td>\n                    <td className=\"healer_consumes_runes center\">{summary.runes}</td>\n                    <td className={\"healer_consumes_manaoil center \" + (manaOil ? \"tick\" : \"cross\")}>{manaOil ? \"✔\" : \"✖\"}</td>\n                    <td className=\"right\">{abbreviateNumber(summary.manaGained)}</td>\n                    <td className=\"healer_cooldowns\">\n                        {summary.cooldowns.map((cooldown, idx) => (\n                            <img key={idx} className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + cooldown.icon} alt={cooldown.name} data-tip={cooldown.name} />\n                        ))}\n                    </td>\n                    <td className=\"healer_casts_started center\">{summary.castsStarted}</td>\n                    <td className=\"healer_casts_completed center\">{summary.castsCompleted}</td>\n                    <td className=\"healer_casts percent right\">{summary.getCastsPercent()}%</td>\n                    <td className=\"healer_amount\">\n                        <ProgressBar summary={summary} maxHeals={maxHeals} />\n                    </td>\n                    <td className=\"healer_effective amount right\">{abbreviateNumber(summary.effectiveHeals)}</td>\n                    <td className=\"healer_effective percent right\">{summary.getEffectivePercent()}%</td>\n                    <td className=\"healer_overheal amount right\">{abbreviateNumber(summary.overHeal)}</td>\n                    <td className=\"healer_overheal percent right\">{summary.getOverhealPercent()}%</td>\n                    <td className=\"healer_wasted amount right\">{abbreviateNumber(summary.wastedHeals)}</td>\n                    <td className=\"healer_wasted percent right\">{summary.getWastedPercent()}%</td>\n                    <td className=\"healer_wasted percent right\">{abbreviateNumber(summary.wastedMana)}</td>\n                </tr>\n\n                {isExpanded && spells.sort((x,y) => y.summary.effectiveHeals -x.summary.effectiveHeals)\n                                     .map((spell) => (\n                    <tr key={spell.id} className={spell.type + \" spell \" + (row % 2 === 0 ? \"even\" : \"odd\")}>\n                        <td className=\"healer_name\" colSpan=\"7\"><img className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + spell.icon} alt={spell.name} /> {spell.name}</td>\n                        <td className=\"healer_casts_started center\">{spell.summary.castsStarted}</td>\n                        <td className=\"healer_casts_completed center\">{spell.summary.castsCompleted}</td>\n                        <td className=\"healer_casts percent right\">{spell.summary.getCastsPercent()}%</td>\n                        <td className=\"healer_amount\">\n                            <ProgressBar summary={spell.summary} maxHeals={maxSpellHeals} />\n                        </td>\n                        <td className=\"healer_effective amount right\">{abbreviateNumber(spell.summary.effectiveHeals)}</td>\n                        <td className=\"healer_effective percent right\">{spell.summary.getEffectivePercent()}%</td>\n                        <td className=\"healer_overheal amount right\">{abbreviateNumber(spell.summary.overHeal)}</td>\n                        <td className=\"healer_overheal percent right\">{spell.summary.getOverhealPercent()}%</td>\n                        <td className=\"healer_wasted amount right\">{abbreviateNumber(spell.summary.wastedHeals)}</td>\n                        <td className=\"healer_wasted percent right\">{spell.summary.getWastedPercent()}%</td>\n                        <td className=\"healer_wasted percent right\">{abbreviateNumber(spell.summary.wastedMana)}</td>\n                    </tr>\n                ))}\n            </>\n        )\n    }\n}","import {healingSpells, cooldownList} from \"./data\";\n\nexport class HealSummary {\n    constructor() {\n        this.manaPots = 0;\n        this.runes = 0;\n        this.manaGained = 0;\n        this.castsStarted = 0;\n        this.castsCompleted = 0;\n        this.effectiveHeals = 0;\n        this.overHeal = 0;\n        this.wastedHeals = 0;\n        this.wastedMana = 0;\n        this.cooldowns = [];\n    }\n\n    getCastsPercent() { return (this.castsStarted > 0 ? this.castsCompleted / this.castsStarted * 100 : 0).toFixed(2); }\n    getTotalHeals() { return this.effectiveHeals + this.overHeal; }\n    getEffectivePercent() { return (this.getTotalHeals() > 0 ? this.effectiveHeals / this.getTotalHeals() * 100 : 0).toFixed(2); }\n    getOverhealPercent() { return (this.getTotalHeals() > 0 ? this.overHeal / this.getTotalHeals() * 100 : 0).toFixed(2); }\n    getWastedPercent() { return (this.getTotalHeals() > 0 ? this.wastedHeals / this.getTotalHeals() * 100 : 0).toFixed(2); }\n}\n\nexport function getHealSummary(collection, event, getOrCreate) {\n    \n    let aggregate = getOrCreate(collection, event);\n\n    if (!aggregate) {\n        return;\n    }\n\n    if (event.ability.guid === 27869 || event.ability.guid === 16666) {\n        aggregate.runes++;\n        aggregate.manaGained += 1500;\n    }\n\n    if (event.ability.guid === 17531) {\n        aggregate.manaPots++;\n        aggregate.manaGained += 2250;\n    }\n\n    let spellInfo = healingSpells[event.ability.guid];\n\n    if (spellInfo)\n    {\n        if (event.type === \"begincast\") {\n            aggregate.castsStarted++;\n        } else if (event.type === \"cast\") {\n            if (spellInfo.castTime === 0) {\n                aggregate.castsStarted++;\n            }\n            aggregate.castsCompleted++;\n        }\n    } else {\n        console.log(\"Not healing spell: \" + event.ability.name + \" (\" + event.ability.guid + \")\");\n    }\n\n    if (event.type === \"heal\" || event.type === \"absorbed\") {\n        if (event.amount) {\n            aggregate.effectiveHeals += event.amount;\n        }\n        if (event.overheal) {\n            aggregate.overHeal += event.overheal;\n            if (event.amount === 0) {\n                aggregate.wastedHeals += event.overheal;\n                if (event.tick && spellInfo && spellInfo.ticks) {\n                    aggregate.wastedMana += Math.round(spellInfo.mana * spellInfo.tickPortion / spellInfo.ticks);\n                } else {\n                    aggregate.wastedMana += spellInfo ? spellInfo.mana : 0;\n                }\n            }\n        }\n    }\n\n    if (event.type === \"cast\" && cooldownList[event.ability.guid]) {\n        aggregate.cooldowns.push(cooldownList[event.ability.guid]);\n    }\n\n}","import \"./FightReport.css\";\nimport {Component} from \"react\";\nimport {LogLoader} from \"./warcraftLogLoader\";\nimport {msToTime, abbreviateNumber} from \"./utils\";\nimport { HealerFightSummary } from \"./HealerFightSummary\";\nimport {getHealSummary, HealSummary} from \"./healSummary\";\nimport {healingSpells, protectionPotions, requiredEnchants} from \"./data\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport class FightReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            reportId: props.reportId,\n            fight: props.fight,\n            events: [],\n            healers: [],\n            isLoaded: false,\n            healSummary: null,\n            expanded: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    loadData() {\n        const { reportId, fight, isLoaded } = this.state;\n        const {characters} = this.props;\n        if (!reportId || !fight || isLoaded)\n            return;\n\n        let healerInfo = {};\n\n        LogLoader.getHealerInfo(fight.start_time, fight.end_time)\n        .then(\n            (healers) => {\n                healerInfo = healers;\n            }\n        );\n\n        LogLoader.getHealEvents(fight.start_time, fight.end_time)\n        .then(\n            (result) => {\n                let eventsByCharacter = this.getCharactersFromEvents(result);\n                let characterList = [];\n\n                for (const [key, value] of Object.entries(eventsByCharacter.characters))\n                {\n                    let characterName;\n                    let characterClass;\n                    let characterManaOil = false;\n                    let enchants = [];\n                    if (characters[key]) {\n                        characterName = characters[key].name;\n                        characterClass = characters[key].type;\n                        if (healerInfo[key]) {\n                            characterManaOil = healerInfo[key].weaponEnchant.id === 2629;\n\n                            const bisEnchants = requiredEnchants[characterClass];\n\n                            enchants = healerInfo[key].enchants.map((obj) => {\n                                return {\n                                    slot: obj.slotname,\n                                    score: bisEnchants[obj.slot][obj.id] ? bisEnchants[obj.slot][obj.id].score : 0,\n                                    name: bisEnchants[obj.slot][obj.id] ? bisEnchants[obj.slot][obj.id].name : obj.name\n                                }\n\n                            })\n                        }\n                    }\n\n                    if (key === '9999') {\n                        characterName = \"Protection Potions\";\n                        characterClass = \"Consumable\";\n                    }\n\n                    characterList.push({ \n                        id: key,\n                        name: characterName,\n                        classType: characterClass,\n                        manaOil: characterManaOil,\n                        enchants: enchants,\n                        summary: value.total,\n                        spells: Object.entries(value.spells).map(keyValuePair => keyValuePair[1])\n                    })\n                }\n\n                this.setState({\n                    isLoaded: true,\n                    events: result.events,\n                    healSummary: eventsByCharacter.total,\n                    healers: characterList\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    getCharactersFromEvents(events) {\n        const {pets} = this.props;\n\n        let groupByCharacter = events.reduce((acc, obj) => {\n            getHealSummary(acc, obj, (collection, _event) => collection.total);  // Save to totals\n            getHealSummary(acc, obj, (collection, event) => {\n                let sourceId = event[\"sourceID\"];\n                if (pets[sourceId]) {\n                    sourceId = pets[sourceId].petOwner;\n                }\n\n                let abilityId = event.ability.guid;\n                if (protectionPotions[abilityId]) {\n                    sourceId = 9999;\n                }\n\n                if (!collection.characters[sourceId]) {\n                    collection.characters[sourceId] = { total: new HealSummary(), spells: {} };\n                }\n\n                return collection.characters[sourceId].total;\n            });\n            getHealSummary(acc, obj, (collection, event) => {\n                let sourceId = event.sourceID;\n                if (pets[sourceId]) {\n                    sourceId = pets[sourceId].petOwner;\n                }\n                let spellId = event.ability.guid;\n                if (protectionPotions[spellId]) {\n                    sourceId = 9999;\n                }\n\n                let spell = healingSpells[spellId];\n                if (!spell) {\n                    return null;\n                }\n\n                if (!collection.characters[sourceId].spells[spellId]) {\n                    collection.characters[sourceId].spells[spellId] = { id: spellId, name: spell.name, icon: spell.icon, type: spell.type, summary: new HealSummary() };\n                }\n\n                return collection.characters[sourceId].spells[spellId].summary;\n            })\n\n            return acc;\n        }, { total: new HealSummary(), characters: {}})\n\n        return groupByCharacter;\n    }\n\n    toggle() {\n        this.setState({\n            expanded: !this.state.expanded\n        });\n\n        this.loadData();\n    }\n\n    render() {\n        const { error, isLoaded, fight, healSummary, healers, expanded} = this.state;\n\n        let fightClass = !fight.boss ? \"trash\" : fight.kill ? \"success\" : \"fail\";\n        let details;\n        if (error) {\n            details = <div>Error: {error.message}</div>\n        } else if (!isLoaded) {\n            details = <div>Loading...</div>\n        } else {\n            let maxHeals = healers.reduce((agg,obj) => {\n                if (obj.summary.getTotalHeals() > agg) {\n                    agg = obj.summary.getTotalHeals();\n                }\n                return agg;\n            }, 0);\n            details = (\n            <>\n                <table>\n                    <thead>\n                        <tr>\n                            <td className=\"healer_name\" rowSpan=\"2\">Name</td>\n                            <td className=\"healer_enchants\" rowSpan=\"2\">Enchants</td>\n                            <td className=\"healer_consumes\" colSpan=\"3\">Consumes</td>\n                            <td className=\"healer_consumes_mana\" rowSpan=\"2\">Mana Gained</td>\n                            <td className=\"healer_cooldowns\" rowSpan=\"2\">Cooldowns</td>\n                            <td className=\"healer_casts\" colSpan=\"3\">Casts</td>\n                            <td className=\"healer_amount\" rowSpan=\"2\">Amount</td>\n                            <td className=\"healer_effective center\" colSpan=\"2\">Effective</td>\n                            <td className=\"healer_overheal center\" colSpan=\"2\">Overheal</td>\n                            <td className=\"healer_wasted center\" colSpan=\"3\">Wasted</td>\n                        </tr>\n                        <tr>\n                            <td className=\"healer_consumes_manapot center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_potion_76.jpg\" width=\"24\" height=\"24\" alt=\"Major Mana Potion\" data-tip='Major Mana Potions'/></td>\n                            <td className=\"healer_consumes_runes center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_misc_rune_04.jpg\" width=\"24\" height=\"24\" alt=\"Demonic/Dark Runes\"  data-tip='Demonic/Dark Runes'/></td>\n                            <td className=\"healer_consumes_manaoil center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_potion_100.jpg\" width=\"24\" height=\"24\" alt=\"Brilliant Mana Oil\"  data-tip='Brilliant Mana Oil'/></td>\n                            <td className=\"healer_casts_started center\">Start</td>\n                            <td className=\"healer_casts_completed center\">Finish</td>\n                            <td className=\"healer_casts percent right\">%</td>\n                            <td className=\"healer_effective amount right\">#</td>\n                            <td className=\"healer_effective percent right\">%</td>\n                            <td className=\"healer_overheal amount right\">#</td>\n                            <td className=\"healer_overheal percent right\">%</td>\n                            <td className=\"healer_wasted amount right\">#</td>\n                            <td className=\"healer_wasted percent right\">%</td>\n                            <td className=\"healer_wasted amount right\">Mana</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                {healers.sort((x,y) => y.summary.effectiveHeals - x.summary.effectiveHeals)\n                        .map((x, idx) => (\n                    <HealerFightSummary key={x.id} healer={x} row={idx} maxHeals={maxHeals} />\n                ))}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td className=\"healer_name\">Total</td>\n                            <td className=\"healer_enchants\"></td>\n                            <td className=\"healer_consumes_manapot center\">{healSummary.manaPots}</td>\n                            <td className=\"healer_consumes_runes center\">{healSummary.runes}</td>\n                            <td className=\"healer_consumes_manaoil center\"></td>\n                            <td className=\"right\">{abbreviateNumber(healSummary.manaGained)}</td>\n                            <td className=\"healer_cooldowns\"></td>\n                            <td className=\"healer_casts_started center\">{healSummary.castsStarted}</td>\n                            <td className=\"healer_casts_completed center\">{healSummary.castsCompleted}</td>\n                            <td className=\"healer_casts percent center\">{healSummary.getCastsPercent()}%</td>\n                            <td className=\"healer_amount\">&nbsp;</td>\n                            <td className=\"healer_effective amount right\">{abbreviateNumber(healSummary.effectiveHeal)}</td>\n                            <td className=\"healer_effective percent right\">{healSummary.getEffectivePercent()}%</td>\n                            <td className=\"healer_overheal amount right\">{abbreviateNumber(healSummary.overHeal)}</td>\n                            <td className=\"healer_overheal percent right\">{healSummary.getOverhealPercent()}%</td>\n                            <td className=\"healer_wasted amount right\">{abbreviateNumber(healSummary.wastedHeals)}</td>\n                            <td className=\"healer_wasted percent right\">{healSummary.getWastedPercent()}%</td>\n                            <td className=\"healer_wasted percent right\">{abbreviateNumber(healSummary.wastedMana)}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n                <ReactTooltip />\n            </>\n            )\n        }\n        return (\n            <div className={\"fight \" + fightClass}>\n            <div className=\"heading\" onClick={this.toggle}>{fight.name} {fight.kill ? \"- Kill \" : \"- Wipe \"}({msToTime(fight.end_time - fight.start_time)})</div>\n            {expanded && details}\n            </div>\n        )\n    }\n}","import {Component} from \"react\";\nimport {FightReport} from \"./FightReport\";\nimport {LogLoader} from \"./warcraftLogLoader\";\n\nexport class HealerReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            pets: {},\n            isLoaded: false,\n            reportId: props.reportId\n        }\n    }\n\n    componentDidMount() {\n        const { reportId } = this.state;\n        if (!reportId)\n            return;\n\n        LogLoader.getFights()\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    fights: result.fights,\n                    characters: result.friendlies.reduce((acc, obj) => {\n                        let id = obj[\"id\"];\n                        if (!acc[id]) {\n                            acc[id] = obj;\n                        }\n\n                        return acc;\n                    }, {}),\n                    pets: result.friendlyPets.reduce((acc, obj) => {\n                        let id = obj[\"id\"];\n                        if (!acc[id]) {\n                            acc[id] = obj;\n                        }\n\n                        return acc;\n                    })\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    render() {\n        const { error, isLoaded, fights, reportId, characters, pets} = this.state;\n        const {showTrash} = this.props;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                {fights.filter(x => showTrash || x.boss !== 0).map(item => (\n                    <FightReport key={item.id} fight={item} characters={characters} pets={pets} reportId={reportId} />\n                ))}\n                </>\n            )\n        }\n    }\n}","import './App.css';\nimport {Component} from \"react\";\nimport {HealerReport} from \"./HealerReport\";\nimport {LogLoader} from \"./warcraftLogLoader\";\nimport queryString from \"query-string\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reportInput: null,\n      reportId: '',\n      showTrash: false\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTrashToggle = this.handleTrashToggle.bind(this);\n  }\n\n  componentDidMount() {\n    const queryParsed = queryString.parse(window.location.search);\n    if (queryParsed && queryParsed.id) {\n      this.setState({\n        reportId: queryParsed.id\n      });\n      LogLoader.setReport(queryParsed.id);\n    }\n  }\n\n  handleChange(event) {\n    this.setState({reportInput: event.target.value });\n  }\n\n  handleTrashToggle(event) {\n    this.setState({showTrash: !this.state.showTrash});\n  }\n\n  handleSubmit(event) {\n    const {reportInput} = this.state;\n    this.setState({reportId: reportInput});\n    LogLoader.setReport(reportInput);\n    event.preventDefault();\n  }\n\n  render() {\n    const {reportId, showTrash} = this.state;\n    return (\n      <>\n        <div className=\"App\">\n          <form onSubmit={this.handleSubmit} >\n          Enter your Classic Warcraft Logs ID: <input type=\"text\" value={reportId} onChange={this.handleChange} /> <input type=\"submit\" value=\"Go\" />\n          </form>\n        </div>\n\n        {reportId !== '' && <HealerReport reportId={reportId} showTrash={showTrash} />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}