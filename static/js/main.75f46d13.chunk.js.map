{"version":3,"sources":["data.js","utils.js","datastore/cooldowns/index.js","datastore/gear/armor/cloth/index.js","datastore/gear/armor/leather/index.js","datastore/gear/armor/mail/index.js","datastore/gear/armor/plate/index.js","datastore/gear/armor/index.js","datastore/gear/weapon/axe/index.js","datastore/gear/weapon/bow/index.js","datastore/gear/weapon/crossbow/index.js","datastore/gear/weapon/dagger/index.js","datastore/gear/weapon/fist-weapon/index.js","datastore/gear/weapon/gun/index.js","datastore/gear/weapon/mace/index.js","datastore/gear/weapon/polearm/index.js","datastore/gear/weapon/staff/index.js","datastore/gear/weapon/sword/index.js","datastore/gear/weapon/thrown/index.js","datastore/gear/weapon/wand/index.js","datastore/gear/weapon/index.js","datastore/gear/index.js","datastore/index.js","warcraftLogLoader.js","ProgressBar.jsx","HealerReport/HealerFightSummary.jsx","HealerReport/healSummary.js","HealerReport/FightReport.jsx","HealerReport/HealerReport.jsx","ShamanReport/AncestralFortitudeReport.jsx","ShamanReport/CooldownReport.jsx","ShamanReport/TotemReport.jsx","ShamanReport/ShamanReport.jsx","SummaryReport/GridContexts.js","SummaryReport/GridRow.jsx","SummaryReport/Grid.jsx","SummaryReport/ExpandCollapseButton.jsx","SummaryReport/GridColumnGroup.jsx","SummaryReport/GridColumn.jsx","SummaryReport/GridIconColumn.jsx","SummaryReport/GridBarColumn.jsx","SummaryReport/GridIconListColumn.jsx","SummaryReport/BossNavItem.jsx","SummaryReport/FightChart.jsx","SummaryReport/WoWAnalyzerLink.jsx","SummaryReport/ThreatReportLink.jsx","SummaryReport/WarcraftLogsLink.jsx","SummaryReport/SummaryReport.jsx","ReportLoad.jsx","App.js","reportWebVitals.js","index.js"],"names":["healingSpells","name","type","icon","mana","castTime","ticks","tickPortion","protectionPotionEnum","protectionPotions","rank","sharedHealingEnchants","2544","score","2543","2545","1503","1505","1483","1504","1506","1507","1508","1509","1510","2604","1891","1893","928","1892","911","1887","851","929","2566","1886","1885","2565","1884","1883","2617","930","931","2619","2620","1888","2621","2622","1889","2505","2504","2567","2568","1903","1904","1890","926","requiredEnchants","Object","assign","2590","2587","2591","2584","offhandFrills","23049","23048","23029","22937","22994","19366","21597","23452","23468","23469","23453","21666","17067","20582","19142","21471","19922","19891","19312","19315","15942","15989","15941","15968","22329","18523","13353","22253","15988","21185","23156","18695","15940","13385","22319","15805","15987","15931","15857","11928","rarity","msToTime","s","secs","mins","hours","abbreviateNumber","num","toFixed","asPercentage","decimals","sumNonNull","params","reduce","agg","obj","arrayToDictionary","array","key","accum","value","druid","hunter","mage","paladin","priest","rogue","shaman","warlock","warrior","racials","items","back","chest","feet","hands","head","legs","shoulders","waist","wrist","cloth","leather","mail","plate","idol","libram","totem","rings","neck","offhandfrills","shields","mainhand","offhand","onehand","twohand","ranged","thrown","axes","bows","crossbows","daggers","fists","guns","maces","polearms","staves","swords","wands","armor","weapons","bosses","bosses_raw","gemList","gems_raw","cooldownList","cooldowns_raw","itemList","gear_raw","WarcraftLogLoader","reportId","this","domain","Results","_loadedStatus","fights","characterSummaries","deaths","interrupts","character","details","casts","buffs","damageTaken","protectionPots","Promise","resolve","fetch","then","res","json","Fights","FightType","acc","id","boss","Characters","friendlies","raidStartTime","start_time","friendlyPets","forEach","pet","petOwner","Pets","pets","title","startTimestamp","start","endTimestamp","end","startTime","endTime","length","end_time","reject","response","data","playerData","playerDetails","tanks","_reducePlayerDetails","healers","dps","entries","playerInfo","roles","intellect","stamina","strength","agility","weaponEnchant","offhandEnchant","enchants","gems","catch","_resolve","events","sourceID","playerid","all","_loadCharacterCasts","_loadCharacterBuffs","_loadProtectionPots","_loadCharacterDamageTaken","_data","_reject","fightType","fight","auras","guid","ability","protPot","amount","firstAbsorb","push","timestamp","fightId","fightIds","_getFightIds","filteredResults","values","filteredCharacter","_getFilteredCharacter","characterFight","includes","fightBands","aFight","x","bands","filter","buffBand","some","fightBand","validEvents","y","potEvent","characterid","getClassHealEvents","getClassCastEvents","getProtectionPotionHealingEvents","getProtectionPotionCastEvents","current","role","playerId","slots","0","enchantable","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","gearInfo","combatantInfo","gear","gearItem","slot","permanentEnchants","slotname","permanentEnchant","permanentEnchantName","gearId","gearName","temporaryEnchant","temporaryEnchantName","gem","count","gemDetails","itemLevel","colour","label","description","sockets","gemCount","keyAccessFunction","a","concat","i","j","splice","removeDuplicates","stats","Intellect","max","Armor","Stamina","Strength","Agility","healerData","context","tankData","status","Error","statusText","nextPageTimestamp","sourceClass","sourceid","sourcename","getBuffUptime","innerAccum","existingCharacter","totalUptime","totalUses","sort","results","abilityid","LogLoader","ProgressBar","props","summary","maxHeals","className","style","width","getTotalHeals","getEffectivePercent","getOverhealPercent","getWastedPercent","Component","HealerFightSummary","state","healer","spells","manaOil","classType","isExpanded","toggle","bind","setState","row","maxSpellHeals","enchantScore","tooltip","onClick","data-tip","data-place","data-class","data-html","manaPots","runes","manaGained","cooldowns","map","cooldown","idx","src","alt","castsStarted","castsCompleted","getCastsPercent","effectiveHeals","overHeal","wastedHeals","wastedMana","spell","colSpan","HealSummary","getHealSummary","collection","event","getOrCreate","aggregate","spellInfo","console","log","overheal","tick","Math","round","FightReport","error","isLoaded","healSummary","expanded","characters","healerInfo","getHealerInfo","getHealEvents","result","eventsByCharacter","getCharactersFromEvents","characterList","characterName","characterClass","characterManaOil","bisEnchants","total","keyValuePair","_event","sourceId","abilityId","spellId","loadData","fightClass","kill","message","rowSpan","height","effectiveHeal","HealerReport","match","setReport","getFights","showTrash","item","HealerReportWithRouter","withRouter","AncestralFortitudeReport","tanksPerFight","buffCalls","getArmorBuffUptime","allBuffs","buffUptime","tankCalls","getTankInfo","allTanks","charId","class","_getTanksForFights","_getArmorBuffUptime","_results","colspan","fightLength","tankBuffInfo","tankBuffUptime","preBuff","CooldownReport","cooldownRows","zhcResult","zhcCounts","getCharacterCastTable","cooldownRow","entry","xValue","yValue","typeCompare","localeCompare","found","resultRow","TotemReport","ShamanReport","shamans","ShamanReportWithRouter","GroupKeys","DataPoints","Name","Enchants","GemsMissing","GemsCommon","GemsUncommon","GemsRare","GemsEpic","GemsList","Elixirs","ElixirsFlasks","ElixirsGuardian","ElixirsBattle","ElixirsFood","ElixirsSeasonal","ElixirsScrolls","ElixirsWeaponEnchants","Deaths","ProtectionPotionsTotal","ProtectionPotionsTotalAbsorbed","ProtectionPotionsNature","ProtectionPotionsGreaterNature","ProtectionPotionsMajorNature","ProtectionPotionsNatureAbsorbed","ProtectionPotionsFire","ProtectionPotionsGreaterFire","ProtectionPotionsMajorFire","ProtectionPotionsFireAbsorbed","ProtectionPotionsFrost","ProtectionPotionsGreaterFrost","ProtectionPotionsMajorFrost","ProtectionPotionsFrostAbsorbed","ProtectionPotionsShadow","ProtectionPotionsGreaterShadow","ProtectionPotionsMajorShadow","ProtectionPotionsShadowAbsorbed","ProtectionPotionsGreaterArcane","ProtectionPotionsMajorArcane","ProtectionPotionsArcaneAbsorbed","ConsumesPotions","ConsumesDrums","ConsumesGems","ConsumesExplosives","ConsumesBandages","ConsumesManaPots","ConsumesRunes","ConsumesRejuvPots","ConsumesHealthPots","ConsumesHealthStones","ConsumesWhipperRootTuber","ConsumesRagePotions","ConsumesThistleTea","ConsumesRestorationPots","ConsumesFreeActionPotion","ConsumesManaGem","ConsumesNightmareSeed","ConsumesStoneshield","ConsumesHeavyRuneclothBandage","ConsumesAntiVenom","ConsumesHolyWater","ConsumesSapperCharge","ConsumesEzThro","ConsumesDenseDynamite","ConsumesFelIronBombs","ConsumesDrumsBattle","ConsumesDrumsRestoration","ConsumesDrumsPanic","ConsumesDrumsWar","ConsumesInsaneStrength","ConsumesShrouding","ConsumesFelRegeneration","ConsumesHeroic","ConsumesDestruction","ConsumesHaste","ConsumesFelMana","ConsumesIronshield","DispelTotal","DispelBoss","DispelTrash","DispelPoison","DispelDisease","DispelCurse","DispelMagic","DispelFrenzy","DispelDruidCurePoison","DispelDruidAbolishPoison","DispelDruidRemoveCurse","DispelHunterTranqShot","DispelMageRemoveLesserCurse","DispelPaladinPurify","DispelPaladinCleanse","DispelPriestDispelMagic","DispelPriestCureDisease","DispelPriestAbolishDisease","DispelShamanPurge","DispelShamanCurePoison","DispelShamanCureDisease","DispelShamanPoisonCleansingTotem","DispelShamanDiseaseCleansingTotem","DispelWarlockDevourMagic","InterruptTotal","InterruptDruidBash","InterruptDruidFeralCharge","InterruptMageCounterspell","InterruptPaladinHammerOfJustice","InterruptPriestSilence","InterruptRogueKick","InterruptShamanEarthShock","InterruptWarriorPummel","InterruptCheapShot","InterruptWarlockSpellLock","InterruptHunterIntimidate","InterruptWarstomp","Cooldowns","CooldownsRacial","CooldownsAbility","CooldownsItems","DamageTakenHit","DamageTakenCrit","DamageTakenCrushed","DamageTakenBlocked","DamageTakenMiss","DamageTakenDodge","DamageTakenParry","emptyData","ConsumesElixirOfPoisonResistance","ConsumesOilOfImmolation","GridRow","_logLoader","logLoader","report","getResults","raidTime","Data","_flattenCharacterData","loadCharacterDetails","getCharacter","prevProps","characterData","_getDeathCount","_getMissingGemCount","_getGemCount","_getGemList","_getBuffs","foodBuffs","flaskBuffs","battleElixirBuffs","guardianElixirBuffs","seasonBuffs","scrollBuffs","_getWeaponImbue","tempWeaponEnchants","_getProtectionPotionCount","_getProtectionPotionAbsorb","_getCastCount","_getBossCastCount","_getTrashCastCount","_getInterruptCount","_getCooldownList","_getTankStats","onDataUpdate","options","activeBuffs","gemIcons","itemId","cds","cast","cooldownInfo","countByFight","firstCast","protectionPotion","spellId1","spellId2","absorbed","spellIds","_getRestrictedCastCount","castCount","damageTakenArray","damageAmount","damage","properyName","propertyLabel","table","damageTakenTable","_addIfNotNull","DamageWhirlwind","DamageRainOfFire","DamageFireShield","DamageFlames","DamageCleave","DamageBlizzard","DamageExplode","DamageImpale","DamageBomb","DamageThunderclap","DamageShadowStorm","DamageDarkGlare","DamageFalling","DamageVoidZone","DamagePoisonCloud","DamageFrostBreath","DamageEruption","DamageBroodPowerBronze","DamageVoidBlast","DamageTailSweep","DamagePositiveCharge","DamageNegativeCharge","DamageDisruptingShout","DamageChill","DamageDarkBlast","DamageWailOfSouls","meleeDamage","totalHits","hitMap","breakdown","hitType","toString","hit","children","Children","child","isValidElement","cloneElement","render","renderCell","renderType","Grid","collapsed","summaryRow","handleColGroupToggle","handleDataUpdate","nextProps","nextState","classFilter","roleFilter","colGroup","column","field","ctx","renderHeader","onColGroupToggle","renderSubHeader","ExpandCollapseButton","onToggle","GridColumnGroup","ReactTooltip","rebuild","_getContext","visibleCount","visibility","_getChildCount","cssClass","visibleChildren","_getVisibleChildCount","_canExpand","GridColumn","isVisible","format","isNaN","tooltipField","_cleanupValue","GridIconColumn","icon_name","icon_url","item_id","spell_id","cellContent","href","target","rel","GridBarColumn","childObjects","GridBarColumnSection","GridIconListColumn","Array","isArray","data-count","header","getPercentageBar","fightPercentage","BossNavItem","onMouseOver","onMouseOut","useParams","bossInfo","logo","lastFight","lastFightTile","filterSuffix","otherFights","to","activeClassName","e","FightChart","raidStart","timeToPixel","time","getClassName","index","duration","fightSummary","trash","bossKill","bossWipe","idle","band","bandRef","createRef","ref","triggerRef","rx","ry","fill","fill-opacity","fontSize","text-anchor","WoWAnalyzerLink","link","ThreatReportLink","WarcraftLogsLink","slug","classes","SummaryReport","reportDetails","selectedFight","handleFightMouseOut","handleFightMouseOver","Date","parseInt","Load","loadFights","loadCharacterSummary","loadDeaths","loadInterrupts","_getResults","_generateFilteredData","hoverFight","classSortOrder","Warrior","Rogue","Hunter","Mage","Warlock","Priest","Shaman","Paladin","Druid","aValue","bValue","classCompare","intervalToDuration","minutes","padStart","seconds","SummaryReportWithRouter","ReportLoad","history","useHistory","useState","setReportId","onSubmit","onChange","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75f46d13.chunk.js","sourcesContent":["export const healingSpells = {\n    // Priest Spells\n    '2054': {\n        name: \"Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 155,\n        castTime: 3000\n    },\n    '2055': {\n        name: \"Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 205,\n        castTime: 3000\n    },\n    '6063': {\n        name: \"Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 255,\n        castTime: 3000\n    },\n    '6064': {\n        name: \"Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 305,\n        castTime: 3000\n    },\n    '2061': {\n        name: \"Flash Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 125,\n        castTime: 1500\n    },\n    '9472': {\n        name: \"Flash Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 155,\n        castTime: 1500\n    },\n    '9473': {\n        name: \"Flash Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 185,\n        castTime: 1500\n    },\n    '9474': {\n        name: \"Flash Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 215,\n        castTime: 1500\n    },\n    '10915': {\n        name: \"Flash Heal (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 265,\n        castTime: 1500\n    },\n    '10916': {\n        name: \"Flash Heal (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 315,\n        castTime: 1500\n    },\n    '10917': {\n        name: \"Flash Heal (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 380,\n        castTime: 1500\n    },\n    '139': {\n        name: \"Renew (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 30,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6074': {\n        name: \"Renew (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 65,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6075': {\n        name: \"Renew (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 105,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6076': {\n        name: \"Renew (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 140,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6077': {\n        name: \"Renew (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 170,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6078': {\n        name: \"Renew (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 205,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10927': {\n        name: \"Renew (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 250,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10928': {\n        name: \"Renew (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 305,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10929': {\n        name: \"Renew (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 365,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '25315': {\n        name: \"Renew (Rank 10)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 410,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '17': {\n        name: \"Power Word: Shield (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 45,\n        castTime: 0\n    },\n    '592': {\n        name: \"Power Word: Shield (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 80,\n        castTime: 0\n    },\n    '600': {\n        name: \"Power Word: Shield (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 130,\n        castTime: 0\n    },\n    '3747': {\n        name: \"Power Word: Shield (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 175,\n        castTime: 0\n    },\n    '6065': {\n        name: \"Power Word: Shield (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 210,\n        castTime: 0\n    },\n    '6066': {\n        name: \"Power Word: Shield (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 250,\n        castTime: 0\n    },\n    '10898': {\n        name: \"Power Word: Shield (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 300,\n        castTime: 0\n    },\n    '10899': {\n        name: \"Power Word: Shield (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 355,\n        castTime: 0\n    },\n    '10900': {\n        name: \"Power Word: Shield (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 425,\n        castTime: 0\n    },\n    '10901': {\n        name: \"Power Word: Shield (Rank 10)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 500,\n        castTime: 0\n    },\n    '2060': {\n        name: \"Greater Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 370,\n        castTime: 3000\n    },\n    '10963': {\n        name: \"Greater Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 455,\n        castTime: 3000\n    },\n    '10964': {\n        name: \"Greater Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 545,\n        castTime: 3000\n    },\n    '10965': {\n        name: \"Greater Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 655,\n        castTime: 3000\n    },\n    '25314': {\n        name: \"Greater Heal (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 710,\n        castTime: 3000\n    },\n    '596': {\n        name: \"Prayer of Healing (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 410,\n        castTime: 3000\n    },\n    '996': {\n        name: \"Prayer of Healing (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 560,\n        castTime: 3000\n    },\n    '10960': {\n        name: \"Prayer of Healing (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 770,\n        castTime: 3000\n    },\n    '10961': {\n        name: \"Prayer of Healing (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 1030,\n        castTime: 3000\n    },\n    '25316': {\n        name: \"Prayer of Healing (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 1070,\n        castTime: 3000\n    },\n    '2050': {\n        name: \"Lesser Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 30,\n        castTime: 1500\n    },\n    '2052': {\n        name: \"Lesser Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 45,\n        castTime: 2000\n    },\n    '2053': {\n        name: \"Lesser Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 75,\n        castTime: 2500\n    },\n    '22009': {\n        name: \"Greater Heal (Renew)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 0,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 0\n    },\n    // Druid Spells\n    '774': {\n        name: \"Rejuvenation (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 25,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '1058': {\n        name: \"Rejuvenation (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 40,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '1430': {\n        name: \"Rejuvenation (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 75,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '2090': {\n        name: \"Rejuvenation (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 105,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '2091': {\n        name: \"Rejuvenation (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 135,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '3627': {\n        name: \"Rejuvenation (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 160,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '8910': {\n        name: \"Rejuvenation (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 195,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9839': {\n        name: \"Rejuvenation (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 235,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9840': {\n        name: \"Rejuvenation (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 280,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9841': {\n        name: \"Rejuvenation (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 335,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '25299': {\n        name: \"Rejuvenation (Rank 11)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 360,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '5185': {\n        name: \"Healing Touch (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 25,\n        castTime: 1500\n    },\n    '5186': {\n        name: \"Healing Touch (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 55,\n        castTime: 2000\n    },\n    '5187': {\n        name: \"Healing Touch (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 110,\n        castTime: 2500\n    },\n    '5188': {\n        name: \"Healing Touch (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 185,\n        castTime: 3000\n    },\n    '5189': {\n        name: \"Healing Touch (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 270,\n        castTime: 3500\n    },\n    '6778': {\n        name: \"Healing Touch (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 335,\n        castTime: 3500\n    },\n    '8903': {\n        name: \"Healing Touch (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 405,\n        castTime: 3500\n    },\n    '9758': {\n        name: \"Healing Touch (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 495,\n        castTime: 3500\n    },\n    '9888': {\n        name: \"Healing Touch (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 600,\n        castTime: 3500\n    },\n    '9889': {\n        name: \"Healing Touch (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 720,\n        castTime: 3500\n    },\n    '25297': {\n        name: \"Healing Touch (Rank 11)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 800,\n        castTime: 3500\n    },\n    '8936': {\n        name: \"Regrowth (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 120,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8938': {\n        name: \"Regrowth (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 205,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8939': {\n        name: \"Regrowth (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 280,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8940': {\n        name: \"Regrowth (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 350,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8941': {\n        name: \"Regrowth (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 420,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9750': {\n        name: \"Regrowth (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 510,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9856': {\n        name: \"Regrowth (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 615,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9857': {\n        name: \"Regrowth (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 740,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9858': {\n        name: \"Regrowth (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 880,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '740': {\n        name: \"Tranquility (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 375,\n        castTime: 0\n    },\n    '8918': {\n        name: \"Tranquility (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 505,\n        castTime: 0\n    },\n    '9862': {\n        name: \"Tranquility (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 695,\n        castTime: 0\n    },\n    '9863': {\n        name: \"Tranquility (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 925,\n        castTime: 0\n    },\n    '18562': {\n        name: \"Swiftmend\",\n        type: \"Nature\",\n        icon: \"inv_relics_idolofrejuvenation.jpg\",\n        mana: 250,\n        castTime: 0\n    },\n    // Shaman\n    '1064': {\n        name: \"Chain Heal (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 260,\n        castTime: 2500\n    },\n    '10622': {\n        name: \"Chain Heal (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 315,\n        castTime: 2500\n    },\n    '10623': {\n        name: \"Chain Heal (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 405,\n        castTime: 2500\n    },\n    '8004': {\n        name: \"Lesser Healing Wave (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 105,\n        castTime: 1500\n    },\n    '8008': {\n        name: \"Lesser Healing Wave (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 145,\n        castTime: 1500\n    },\n    '8010': {\n        name: \"Lesser Healing Wave (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 185,\n        castTime: 1500\n    },\n    '10466': {\n        name: \"Lesser Healing Wave (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 235,\n        castTime: 1500\n    },\n    '10467': {\n        name: \"Lesser Healing Wave (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 305,\n        castTime: 1500\n    },\n    '10468': {\n        name: \"Lesser Healing Wave (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 380,\n        castTime: 1500\n    },\n    '331': {\n        name: \"Healing Wave (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 25,\n        castTime: 1500\n    },\n    '332': {\n        name: \"Healing Wave (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 45,\n        castTime: 2000\n    },\n    '547': {\n        name: \"Healing Wave (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 80,\n        castTime: 2500\n    },\n    '913': {\n        name: \"Healing Wave (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 155,\n        castTime: 3000\n    },\n    '939': {\n        name: \"Healing Wave (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 200,\n        castTime: 3000\n    },\n    '959': {\n        name: \"Healing Wave (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 265,\n        castTime: 3000\n    },\n    '8005': {\n        name: \"Healing Wave (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 340,\n        castTime: 3000\n    },\n    '10395': {\n        name: \"Healing Wave (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 440,\n        castTime: 3000\n    },\n    '10396': {\n        name: \"Healing Wave (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 560,\n        castTime: 3000\n    },\n    '25357': {\n        name: \"Healing Wave (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 620,\n        castTime: 3000\n    },\n    '5672': {\n        name: \"Healing Stream (Rank 1)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 40,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '6371': {\n        name: \"Healing Stream (Rank 2)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 50,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '6372': {\n        name: \"Healing Stream (Rank 3)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 60,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '10460': {\n        name: \"Healing Stream (Rank 4)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 70,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '10461': {\n        name: \"Healing Stream (Rank 5)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 80,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    // Bandages\n    '746': {\n        name: \"Linen Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_15.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '1159': {\n        name: \"Heavy Linen Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_18.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '3267': {\n        name: \"Wool Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_14.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '3268': {\n        name: \"Heavy Wool Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_17.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7926': {\n        name: \"Silk Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_01.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7927': {\n        name: \"Heavy Silk Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_02.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '10838': {\n        name: \"Mageweave Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_19.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '10839': {\n        name: \"Heave Mageweave Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_20.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '18608': {\n        name: \"Runecloth Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_11.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '18610': {\n        name: \"Heavy Runecloth Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_12.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    // Paladin\n    '19750': {\n        name: \"Flash of Light (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 35,\n        castTime: 1500\n    },\n    '19939': {\n        name: \"Flash of Light (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 50,\n        castTime: 1500\n    },\n    '19940': {\n        name: \"Flash of Light (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 70,\n        castTime: 1500\n    },\n    '19941': {\n        name: \"Flash of Light (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 90,\n        castTime: 1500\n    },\n    '19942': {\n        name: \"Flash of Light (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 115,\n        castTime: 1500\n    },\n    '19943': {\n        name: \"Flash of Light (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 140,\n        castTime: 1500\n    },\n    '635': {\n        name: \"Holy Light (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 35,\n        castTime: 2500\n    },\n    '639': {\n        name: \"Holy Light (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 60,\n        castTime: 2500\n    },\n    '647': {\n        name: \"Holy Light (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 110,\n        castTime: 2500\n    },\n    '1026': {\n        name: \"Holy Light (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 190,\n        castTime: 2500\n    },\n    '1042': {\n        name: \"Holy Light (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 275,\n        castTime: 2500\n    },\n    '3472': {\n        name: \"Holy Light (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 365,\n        castTime: 2500\n    },\n    '10328': {\n        name: \"Holy Light (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 465,\n        castTime: 2500\n    },\n    '10329': {\n        name: \"Holy Light (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 580,\n        castTime: 2500\n    },\n    '25292': {\n        name: \"Holy Light (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 660,\n        castTime: 2500\n    },\n    '633': {\n        name: \"Lay on Hands (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    '2800': {\n        name: \"Lay on Hands (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    '10310': {\n        name: \"Lay on Hands (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    /*'20185': {\n        name: \"Judgement of Light (Rank 1)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20344': {\n        name: \"Judgement of Light (Rank 2)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20345': {\n        name: \"Judgement of Light (Rank 3)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20346': {\n        name: \"Judgement of Light (Rank 4)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    }*/\n\n    '17546': {\n        name: \"Greater Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_22.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7254': {\n        name: \"Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_06.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17548': {\n        name: \"Greater Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_23.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7242': {\n        name: \"Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_44.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17544': {\n        name: \"Greater Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_20.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7240': {\n        name: \"Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_13.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17543': {\n        name: \"Greater Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_24.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7230': {\n        name: \"Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_16.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17549': {\n        name: \"Greater Arcane Protection Potion\",\n        type: \"Arcane\",\n        icon: \"inv_potion_83.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    //Trinkets\n    '26470': {\n        name: \"Scarab Brooch\",\n        type: \"Physical\",\n        icon: \"inv_misc_ahnqirajtrinket_06.jpg\",\n        mana: 0,\n        castTime: 0\n    }\n\n    // Healing Totem\n\n    // Seal of Light\n}\n\nexport const protectionPotionEnum = {\n    GNPP: 17546,\n    NPP: 7254,\n    MNPP: 28513,\n    GSPP: 17548,\n    SPP: 7242,\n    MSPP: 28537,\n    GFrPP: 17544,\n    FrPP: 7240,\n    MFrPP: 28512,\n    GFPP: 17543,\n    FPP: 7230,\n    MFPP: 28511,\n    GAPP: 17549,\n    MAPP: 28536,\n    MHPP: 28538,\n}\nexport const protectionPotions = {\n    '17546': {\n        name: \"Greater Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_22.jpg\",\n        rank: 2,\n    },\n    '7254': {\n        name: \"Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_06.jpg\",\n        rank: 1,\n    },\n    '17548': {\n        name: \"Greater Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_23.jpg\",\n        rank: 2,\n    },\n    '7242': {\n        name: \"Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_44.jpg\",\n        rank: 1,\n    },\n    '17544': {\n        name: \"Greater Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_20.jpg\",\n        rank: 2,\n    },\n    '7240': {\n        name: \"Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_13.jpg\",\n        rank: 1,\n    },\n    '17543': {\n        name: \"Greater Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_24.jpg\",\n        rank: 2,\n    },\n    '7230': {\n        name: \"Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_16.jpg\",\n        rank: 1,\n    },\n    '17549': {\n        name: \"Greater Arcane Protection Potion\",\n        type: \"Arcane\",\n        icon: \"inv_potion_83.jpg\",\n        rank: 2,\n    }\n}\n\nexport const itemSlots = {\n    Head: \"0\",\n    Neck: \"1\",\n    Shoulders: \"2\",\n    Shirt: \"3\",\n    Chest: \"4\",\n    Belt: \"5\",\n    Legs: \"6\",\n    Feet: \"7\",\n    Wrists: \"8\",\n    Hands: \"9\",\n    Finger1: \"10\",\n    Finger2: \"11\",\n    Trinket1: \"12\",\n    Trinket2: \"13\",\n    Back: \"14\",\n    MainHand: \"15\",\n    Offhand: \"16\",\n    Ranged: \"17\",\n    Tabard: \"19\",\n}\n\nconst sharedHealingEnchants = {\n    \"0\": {\n        2544: { score: 0, name: \"Arcanum of Focus (+8 heal)\"},\n        2543: { score: 0, name: \"Arcanum of Rapidity (1% haste)\"},\n        2545: { score: 0, name: \"Arcanum of Protection (1% dodge)\"},\n        1503: { score: 0, name: \"Lesser Arcanum of Constitution (+100hp)\"},\n        1505: { score: 0, name: \"Lesser Arcanum of Resilience (+20FR)\"},\n        1483: { score: 0, name: \"Lesser Arcanum of Rumination (+150mana)\"},\n        1504: { score: 0, name: \"Lesser Arcanum of Tenacity (+125 armor)\"},\n        1506: { score: 0, name: \"Lesser Arcanum of Voracity (+8 str)\"},\n        1507: { score: 0, name: \"Lesser Arcanum of Voracity (+8 stam)\"},\n        1508: { score: 0, name: \"Lesser Arcanum of Voracity (+8 agi)\"},\n        1509: { score: 0, name: \"Lesser Arcanum of Voracity (+8 int)\"},\n        1510: { score: 0, name: \"Lesser Arcanum of Voracity (+8 spi)\"}\n    },\n    \"2\": {  // Shoulders\n        2604: { score: 1, name: \"Zandalar Signet of Serenity\" }  // Zandalar Signet of Serenity\n    },\n    \"4\": {  // Chest\n        1891: { score: 1, name: \"Greater Stats (+4)\" },     // +4 Stats\n        1893: { score: 0.5, name: \"Major Mana (+100)\" },   // Major Mana\n        928: { score: 0.5, name: \"Stats (+3)\" },     // Stats\n        1892: { score: 0, name: \"Major Health (+100)\"}\n    },\n    \"6\": {\n        2544: { score: 0, name: \"Arcanum of Focus (+8 heal)\"},\n        2543: { score: 0, name: \"Arcanum of Rapidity (1% haste)\"},\n        2545: { score: 0, name: \"Arcanum of Protection (1% dodge)\"},\n        1503: { score: 0, name: \"Lesser Arcanum of Constitution (+100hp)\"},\n        1505: { score: 0, name: \"Lesser Arcanum of Resilience (+20FR)\"},\n        1483: { score: 0, name: \"Lesser Arcanum of Rumination (+150mana)\"},\n        1504: { score: 0, name: \"Lesser Arcanum of Tenacity (+125 armor)\"},\n        1506: { score: 0, name: \"Lesser Arcanum of Voracity (+8 str)\"},\n        1507: { score: 0, name: \"Lesser Arcanum of Voracity (+8 stam)\"},\n        1508: { score: 0, name: \"Lesser Arcanum of Voracity (+8 agi)\"},\n        1509: { score: 0, name: \"Lesser Arcanum of Voracity (+8 int)\"},\n        1510: { score: 0, name: \"Lesser Arcanum of Voracity (+8 spi)\"}\n    },\n    \"7\": {  // Feet\n        911: { score: 1, name: \"Minor Run Speed\" },    // Minor Run Speed\n        1887: { score: 0, name: \"Greater Agility (+7)\"},\n        851: { score: 0.5, name: \"Spirit (+5)\"},\n        929: { score: 0, name: \"Greater Stamina (+7)\"}\n    },\n    \"8\": {  // Bracers\n        2566: { score: 1, name: \"Healing Power (+24)\" },  // +24 Healing\n        1886: { score: 0, name: \"Superior Stamina (+9)\"},\n        1885: { score: 0, name: \"Superior Strength (+9)\"},\n        2565: { score: 0, name: \"Mana Regeneration (4mp5)\"},\n        1884: { score: 0, name: \"Superior Spirit (+9)\"},\n        1883: { score: 0, name: \"Greater Intellect (+7)\"}\n    },\n    \"9\": {  // Gloves\n        2617: { score: 1, name: \"Healing Power (+30)\" },  // +30 Healing\n        930: { score: 0, name: \"Riding Skill\" },\n        931: { score: 0, name: \"Minor Haste\" }\n    },\n    \"14\": {  // Back\n        2619: { score: 1, name: \"Greater Fire Resistance (+15)\" }, // Greater Fire Resistance\n        2620: { score: 1, name: \"Greater Nature Resistance (+15)\" }, // Greater Nature Resistance\n        1888: { score: 1, name: \"Greater Resistance (+5)\" },  // Greater Resistance\n        2621: { score: 1, name: \"Subtlety (-2% threat)\" },\n        2622: { score: 0, name: \"Dodge (1% dodge)\" },\n        1889: { score: 0, name: \"Superior Defense (+70 armor)\" }\n    },\n    \"15\": {  // Main Hand\n        2505: { score: 1, name: \"Healing Power (+55)\" },  // +55 Healing\n        2504: { score: 0, name: \"Spell Power (+30)\" },\n        2567: { score: 0, name: \"Mighty Spirit (+20)\" } ,\n        2568: { score: 0, name: \"Mighty Intellect (+22)\" } ,\n        1903: { score: 0, name: \"Major Spirit (+9)\" } ,\n        1904: { score: 0, name: \"Major Intellect (+9)\" } \n    },\n    \"16\": {  // Offhand\n        929: { score: 1, name: \"Greater Stamina (+7)\" },   // +7 Stamina\n        1890: { score: 1, name: \"Superior Spirit (+9)\" },\n        926: { score: 1, name: \"Frost Resistance (+8)\" }\n    }\n}\n\nexport const requiredEnchants = {\n    \"Priest\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2590: { score: 1, name: \"Prophetic Aura\" }  // Prophetic Aura\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2590: { score: 1, name: \"Prophetic Aura\" },  // Prophetic Aura\n        })\n    }),\n    \"Shaman\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2587: { score: 1, name: \"Vodouisant's Vigilant Embrace\" }  // Vodouisant's Vigilant Embrace\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2587: { score: 1, name: \"Vodouisant's Vigilant Embrace\" }  // Vodouisant's Vigilant Embrace\n        })\n    }),\n    \"Druid\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2591: { score: 1, name: \"Animist's Caress\" }  // Animist's Caress\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2591: { score: 1, name: \"Animist's Caress\" }  // Animist's Caress\n        })\n    }),\n    \"Paladin\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2584: { score: 1, name: \"Syncretist's Sigil\" }  // Syncretist's Sigil\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2584: { score: 1, name: \"Syncretist's Sigil\" }  // Syncretist's Sigil\n        })\n    })\n}\n\nexport const offhandFrills = {\n    23049: true,    // Sapphiron's Left Eye\n    23048: true,    // Sapphiron's Right Eye\n    23029: true,    // Noth's Frigid Heart\n    22937: true,    // Gem of Nerubis\n    22994: true,    // Digested Hand of Power\n    19366: true,    // Master Dragonslayer's Orb\n    21597: true,    // Royal Scepter of Vek'lor\n    23452: true,    // Grand Marshal's Tome of Power\n    23468: true,    // High Warlord's Tome of Destruction\n    23469: true,    // High Warlord's Tome of Mending\n    23453: true,    // Grand Marshal's Tome of Restoration\n    21666: true,    // Sartura's Might\n    17067: true,    // Ancient Cornerstone Grimoire\n    20582: true,    // Trance Stone\n    19142: true,    // Fire Runed Grimoire\n    21471: true,    // Talon of Furious Concentration\n    19922: true,    // Arlokk's Hoodoo Stick\n    19891: true,    // Jin'do's Bag of Whammies\n    19312: true,    // Lei of the Lifegiver\n    19315: true,    // Therazane's Touch\n    15942: true,    // Master's Rod\n    15989: true,    // Eternal Rod\n    15941: true,    // High Councillor's Scepter\n    15968: true,    // Elunarian Sphere\n    22329: true,    // Scepter of Interminable Focus\n    18523: true,    // Brightly Glowing Stone\n    13353: true,    // Book of the Dead\n    22253: true,    // Tome of the Lost\n    15988: true,    // Resplendent Orb\n    21185: true,    // Earthcalm Orb\n    23156: true,    // Blackwood's Thigh\n    18695: true,    // Spellbound Tome\n    15940: true,    // Elegant Scepter\n    13385: true,    // Tome of Knowledge\n    22319: true,    // Tome of Divine Right\n    15805: true,    // Penelope's Rose,\n    15987: true,    // Astral Orb\n    15931: true,    // Arcane Star\n    15857: true,    // Magebane Scion\n    11928: true    // Thaurissan's Royal Scepter\n}\n\nexport const trackedDamageTakenSpells = [\n    {\n        name: \"Whirlwind\",\n        ids: [1680,15589,26686,26084]\n    },\n    {\n        name: \"Rain of Fire\",\n        ids: [5740,11678,11677,6219,28794]\n    },\n    {\n        name: \"Fire Shield\",\n        ids: [8317,8316,2947,11770,11771]\n    },\n    {\n        name: \"Flames\",\n        ids: [7897,12796,19628,29115,15643]\n    },\n    {\n        name: \"Cleave\",\n        ids: [797,3433,3434,3435,5532,11427,15284,15496,15579,15584,15613,15622,15623,15663,16044,17685,19632,19642,20571,20605,20666,20677,20684,20691,22540,26350,27794,19983]\n    },\n    {\n        name: \"Blizzard\",\n        ids: [26607]\n    },\n    {\n        name: \"Explode\",\n        ids: [26059,25699]\n    },\n    {\n        name: \"Impale\",\n        ids: [26025]\n    },\n    {\n        name: \"Bomb\",\n        ids: [8858,9143,22334]\n    },\n    {\n        name: \"Thunderclap\",\n        ids: [26554,8732]\n    },\n    {\n        name: \"Shadow Storm\",\n        ids: [26546,26555]\n    },\n    {\n        name: \"Dark Glare\",\n        ids: [41936,41937,26029]\n    },\n    {\n        name: \"Falling\",\n        ids: [3]\n    },\n    {\n        name: \"Void Zone\",\n        ids: [28863,28865]\n    },\n    {\n        name: \"Poison Cloud\",\n        ids: [28240,28241]\n    },\n    {\n        name: \"Frost Breath\",\n        ids: [3129,28524]\n    },\n    {\n        name: \"Eruption\",\n        ids: [29371]\n    },\n    {\n        name: \"Brood Power Bronze\",\n        ids: [22311]\n    },\n    {\n        name: \"Void Blast\",\n        ids: [27812]\n    },\n    {\n        name: \"Tail Sweep\",\n        ids: [15847,25653]\n    },\n    {\n        name: \"Positive Charge\",\n        ids: [28062]\n    },\n    {\n        name: \"Negative Charge\",\n        ids: [28085]\n    },\n    {\n        name: \"Disrupting Shout\",\n        ids: [29107]\n    },\n    {\n        name: \"Chill\",\n        ids: [28547]\n    },\n    {\n        name: \"Dark Blast\",\n        ids: [28457]\n    },\n    {\n        name: \"Wail of Souls\",\n        ids: [28459]\n    }\n]\n\nexport const rarity = {\n    Common: \"Common\",\n    Uncommon: \"Uncommon\",\n    Rare: \"Rare\",\n    Epic: \"Epic\",\n}\n","export function msToTime(s) {\n    var ms = s % 1000;\n    s = (s - ms) / 1000;\n    var secs = s % 60;\n    s = (s - secs) / 60;\n    var mins = s % 60;\n    s = (s - mins) / 60;\n    var hours = s % 24;\n\n    return (hours > 0 ? hours + \":\" + (mins < 10 ? \"0\" : \"\") : \"\") + mins + ':' + (secs < 10 ? \"0\" : \"\") + secs;\n}\n\nexport function abbreviateNumber(num) {\n    if (num > 1000) {\n        return (num / 1000).toFixed(1) + \"k\";\n    }\n\n    return num;\n}\n\nexport function asPercentage(num, decimals = 1) {\n    return (num*100).toFixed(decimals) + \"%\";\n}\n\nexport function removeDuplicates(array, keyAccessFunction) {\n    if (!keyAccessFunction || typeof(keyAccessFunction) !== 'function') {\n        keyAccessFunction = (obj) => obj;\n    }\n\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(keyAccessFunction(a[i]) === keyAccessFunction(a[j]))\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n};\n\nexport function countNonNull(...params) {\n    return params.reduce((agg, obj) => {\n        if (obj) {\n            agg++\n        }\n\n        return agg;\n    }, 0);\n}\n\nexport function sumNonNull(...params) {\n    return params.reduce((agg, obj) => {\n        if (obj) {\n            agg += obj;\n        }\n\n        return agg;\n    }, 0);\n}\n\nexport function arrayToDictionary(array, key) {\n    return array.reduce((accum, value) => ({...accum, [value[key]]: value}), {});\n}","import druid from './classes/druid.json';\nimport hunter from './classes/hunter.json';\nimport mage from './classes/mage.json';\nimport paladin from './classes/paladin.json';\nimport priest from './classes/priest.json';\nimport rogue from './classes/rogue.json';\nimport shaman from './classes/shaman.json';\nimport warlock from './classes/warlock.json';\nimport warrior from './classes/warrior.json';\nimport racials from './racials.json';\nimport items from './items.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...druid, ...hunter, ...mage, ...paladin, ...priest, ...rogue, ...shaman, ...warlock, ...warrior, ...racials, ...items];","import back from './back.json';\nimport chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...back, ...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import cloth from './cloth';\nimport leather from './leather';\nimport mail from './mail';\nimport plate from './plate';\n\nimport idol from './idol/relic.json';\nimport libram from './libram/relic.json';\nimport totem from './totem/relic.json';\n\nimport rings from './miscellaneous/finger.json';\nimport neck from './miscellaneous/neck.json';\n\nimport offhandfrills from './miscellaneous/held-in-off-hand.json';\nimport shields from './shield/off-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...cloth, ...leather, ...mail, ...plate, ...idol, ...libram, ...totem, ...rings, ...neck, ...offhandfrills, ...shields];\n\nexport const relics = [...idol, ...libram, ...totem];\nexport const jewellery = [...rings, ...neck];\nexport const offhand = [...offhandfrills, ...shields];\n\nexport {default as trinkets} from './miscellaneous/trinket.json';","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\nimport twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand, ...twohand];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\nimport twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand, ...twohand];","import twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...twohand];","import twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...twohand];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\nimport twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand, ...twohand];","import thrown from './thrown.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...thrown];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import axes from './axe';\nimport bows from './bow';\nimport crossbows from './crossbow';\nimport daggers from './dagger';\nimport fists from './fist-weapon';\nimport guns from './gun';\nimport maces from './mace';\nimport polearms from './polearm';\nimport staves from './staff';\nimport swords from './sword';\nimport thrown from './thrown'\nimport wands from './wand';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...axes, ...bows, ...crossbows, ...daggers, ...fists, ...guns, ...maces, ...polearms, ...staves, ...swords, ...thrown, ...wands];","import armor from \"./armor\";\nimport weapons from './weapon';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...armor, ...weapons];\n\nexport {relics} from './armor';\nexport {trinkets} from './armor';\n","import { arrayToDictionary } from \"../utils\";\nimport bosses_raw from \"./bosses.json\";\nimport gems_raw from \"./gems.json\";\nimport cooldowns_raw from './cooldowns';\nimport gear_raw from './gear';\n\nexport {default as tempWeaponEnchants} from './buffs/temp-enchant.json';\nexport {default as seasonBuffs} from './buffs/seasonal.json';\nexport {default as flaskBuffs} from './buffs/flask.json';\nexport {default as battleElixirBuffs} from './buffs/elixir-battle.json';\nexport {default as guardianElixirBuffs} from './buffs/elixir-guardian.json';\nexport {default as scrollBuffs} from './buffs/scroll.json';\nexport {default as foodBuffs} from './buffs/food.json';\n\nexport const bosses = arrayToDictionary(bosses_raw, \"id\");\nexport const gemList = arrayToDictionary(gems_raw, \"id\");\nexport const cooldownList = arrayToDictionary(cooldowns_raw, \"id\");\nexport const itemList = arrayToDictionary(gear_raw, \"id\");","import {offhandFrills} from \"./data\";\nimport {itemList, gemList} from \"./datastore\";\nimport {removeDuplicates} from \"./utils\";\n\nexport class WarcraftLogLoader {\n    constructor(reportId = null) {\n        this.key = \"e422378c419a25cc1accb41845b259ab\";\n        this.domain = \"https://classic.warcraftlogs.com/v1/\";\n        this.reportId = reportId;\n        this.Results = {};\n        this._loadedStatus = {\n            fights: false,\n            characterSummaries: false,\n            deaths: false,\n            interrupts: false,\n            character: {\n                details: {},\n                casts: {},\n                buffs: {},\n                damageTaken: {},\n                protectionPots: {},\n            }\n        }\n    }\n\n    static Load(reportId) {\n        return new WarcraftLogLoader(reportId);\n    }\n\n    setReport(reportId) {\n        this.reportId = reportId;\n    }\n\n    loadFights() {\n        if (this._loadedStatus.fights) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return fetch(this.domain + \"report/fights/\" + this.reportId + \"?api_key=\" + this.key)\n            .then(res => res.json())\n            .then(res => {\n                this.Results.Fights = res.fights;\n                this.Results.FightType = res.fights.reduce((acc,obj) => {\n                    acc[obj.id] = (obj.boss > 0 ? \"boss\" : \"trash\");\n\n                    return acc;\n                }, {})\n                this.Results.Characters = res.friendlies.reduce((acc,obj) => {\n                    acc[obj.id] = obj;\n\n                    acc[obj.id].raidStartTime = res.fights[obj.fights[0].id-1].start_time;\n\n                    return acc;\n                }, {});\n                // Add pet information to their owner\n                res.friendlyPets.forEach((pet) => {\n                    if (!this.Results.Characters[pet.petOwner])\n                        return;\n                    \n                    if (!this.Results.Pets) {\n                        this.Results.Pets = {};\n                    }\n\n                    this.Results.Characters[pet.petOwner].pets = [...(this.Results.Characters[pet.petOwner].pets || []),pet];\n                    this.Results.Pets[pet.id] = pet;\n                })\n                this.Results.title = res.title;\n                this.Results.startTimestamp = res.start;\n                this.Results.endTimestamp = res.end;\n                this.Results.startTime = res.fights[0].start_time;\n                this.Results.endTime = res.fights[res.fights.length-1].end_time;\n\n                this._loadedStatus.fights = true;\n\n                return this;\n            });\n    }\n\n    loadCharacterSummary() {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.characterSummaries) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime)\n        .then(response => response.json())\n        .then(data => {\n            let playerData = [];\n\n            if (data.playerDetails?.tanks) {\n                playerData = data.playerDetails.tanks.reduce(this._reducePlayerDetails(\"tank\"), {});\n            }\n\n            if (data.playerDetails?.healers) {\n                playerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), playerData);\n            }\n\n            if (data.playerDetails?.dps) {\n                playerData = data.playerDetails.dps.reduce(this._reducePlayerDetails(\"dps\"), playerData);\n            }\n\n            for (const [key,value] of Object.entries(playerData)) {\n                let playerInfo = this.Results.Characters[key];\n\n                playerInfo.roles = value.roles;\n                playerInfo.intellect = value.intellect;\n                playerInfo.armor = value.armor;\n                playerInfo.stamina = value.stamina;\n                playerInfo.strength = value.strength;\n                playerInfo.agility = value.agility;\n                playerInfo.weaponEnchant = value.weaponEnchant;\n                playerInfo.offhandEnchant = value.offhandEnchant;\n                playerInfo.enchants = value.enchants;\n                playerInfo.gems = value.gems;\n            }\n\n            this._loadedStatus.characterSummaries = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    loadDeaths() {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.deaths) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/deaths/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime)\n        .then(response => response.json())\n        .then(data => {\n            data.entries.forEach((obj) => {\n                let character = this.Results.Characters[obj.id];\n\n                if (!character) {\n                    return;\n                }\n\n                character.deaths = [...(character.deaths || []),obj];\n            })\n\n            this._loadedStatus.deaths = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    loadInterrupts() {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.interrupts) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/interrupts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime)\n        .then(response => response.json())\n        .then(data => {\n            data.events.forEach((obj) => {\n                let character = this.Results.Characters[obj.sourceID];\n\n                if (!character) {\n                    let pet = this.Results.Pets[obj.sourceID];\n                    if (pet) {\n                        character = this.Results.Characters[pet.petOwner];\n                    }\n                }\n\n                if (!character) {\n                    return;\n                }\n\n                character.interrupts = [...(character.interrupts || []),obj];\n            })\n\n            this._loadedStatus.interrupts = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    loadCharacterDetails(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.details[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return Promise.all([\n            this._loadCharacterCasts(playerid),\n            this._loadCharacterBuffs(playerid),\n            this._loadProtectionPots(playerid),\n            this._loadCharacterDamageTaken(playerid),\n        ])\n        .then((_data) => {\n            this._loadedStatus.character.details[playerid] = true;\n\n            return new Promise((resolve, _reject) => resolve(this))\n        })\n    }\n\n    _loadCharacterCasts(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.casts[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            data.events.forEach((obj) => {\n                let character = this.Results.Characters[playerid];\n\n                if (!character) {\n                    let pet = this.Results.Pets[obj.sourceID];\n                    if (pet) {\n                        character = this.Results.Characters[pet.petOwner];\n                    }\n                }\n\n                if (!character) {\n                    return;\n                }\n\n                obj.fightType = this.Results.FightType[obj.fight];\n\n                character.casts = [...(character.casts || []),obj];\n            })\n\n            this._loadedStatus.character.casts[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadCharacterBuffs(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.buffs[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/buffs/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            data.auras.forEach((obj) => {\n                let character = this.Results.Characters[playerid];\n\n                if (!character) {\n                    return;\n                }\n\n                character.buffs = {...character.buffs, [obj.guid]: obj};\n            })\n\n            this._loadedStatus.character.buffs[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadCharacterDamageTaken(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.damageTaken[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/damage-taken/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            data.events.forEach((obj) => {\n                let character = this.Results.Characters[playerid];\n\n                if (!character) {\n                    return;\n                }\n\n                character.damageTaken = {...character.damageTaken, [obj.ability.guid]: [...(!character.damageTaken || !character.damageTaken[obj.ability.guid] ? [] : character.damageTaken[obj.ability.guid]), obj]};\n            })\n\n            this._loadedStatus.character.damageTaken[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadProtectionPots(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.protectionPots[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => response.json())\n        .then(data => {\n            let character = this.Results.Characters[playerid];\n\n            if (!character) {\n                return;\n            }\n\n            if (!character.protectionPotions) {\n                character.protectionPotions = {};\n            }\n\n            data.events.forEach((obj) => {\n                let protPot = character.protectionPotions[obj.ability.guid];\n                if (!protPot) {\n                    character.protectionPotions[obj.ability.guid] = {\n                        amount: 0,\n                        firstAbsorb: {},\n                        events: [],\n                    };\n                    protPot = character.protectionPotions[obj.ability.guid]\n                }\n\n                protPot.amount += obj.amount;\n                protPot.events.push(obj);\n                if (!protPot.firstAbsorb[obj.fight]) {\n                    protPot.firstAbsorb[obj.fight] = obj.timestamp;\n                }\n            });\n\n            this._loadedStatus.character.protectionPots[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _getFightIds(fightId) {\n        let fightIds = [];\n        if (fightId > 0)\n            fightIds.push(fightId);\n        else {\n            this.Results.Fights.forEach(fight => {\n                if (fight.boss !== 0)\n                    return;\n                    \n                fightIds.push(fight.id);\n            });\n        }\n\n        return fightIds;\n    }\n\n    getResults(fightId) {\n        if (fightId == null || fightId === -1) {\n            return this.Results;\n        }\n\n        let fightIds = this._getFightIds(fightId);\n\n        let filteredResults = {\n            Characters: {},\n            Fights: this.Results.Fights,\n            FightType: this.Results.FightType,\n            title: this.Results.title,\n            startTimestamp: this.Results.startTimestamp,\n            endTimestamp: this.Results.endTimestamp,\n            startTime: this.Results.startTime,\n            endTime: this.Results.endTime,\n        };\n\n        Object.values(this.Results.Characters).forEach(character => {\n            let filteredCharacter = this._getFilteredCharacter(character, fightIds);\n            if (filteredCharacter)\n                filteredResults.Characters[character.id] = filteredCharacter;\n        });\n\n        return filteredResults;\n    }\n\n    _getFilteredCharacter(character, fightIds) {\n        let filteredCharacter = null;\n\n        character.fights.forEach(characterFight => {\n            if (fightIds.includes(characterFight.id)) {\n                filteredCharacter = {...character};\n            }\n        })\n\n        if (!filteredCharacter)\n            return null;\n\n        let fightBands = [];\n        this.Results.Fights.forEach(aFight => {\n            if (fightIds.includes(aFight.id)) {\n                fightBands.push({start: aFight.start_time, end: aFight.end_time});\n            }\n        })\n        \n\n        // Amend the collections\n        // buffs\n        if (character.buffs) {\n            filteredCharacter.buffs = {};\n            Object.values(character.buffs).forEach(x => {\n                let validBands = x.bands.filter(buffBand => {\n                    return fightBands.some(fightBand => buffBand.endTime > fightBand.start && buffBand.startTime < fightBand.end);\n                });\n\n                if (validBands.length > 0) {\n                    filteredCharacter.buffs[x.guid] = x;\n                }\n            })\n        }\n        // casts\n        if (character.casts) {\n            filteredCharacter.casts = character.casts.filter(x => fightIds.includes(x.fight));\n        }\n        // damageTaken\n        if (character.damageTaken) {\n            filteredCharacter.damageTaken = {};\n            Object.entries(character.damageTaken).forEach(([key,value]) => {\n                let validEvents = value.filter(y => fightIds.includes(y.fight));\n                if (validEvents.length > 0) {\n                    filteredCharacter.damageTaken[key] = validEvents;\n                }\n            });\n        }\n        // deaths\n        if (character.deaths) {\n            filteredCharacter.deaths = character.deaths.filter(x => fightIds.includes(x.fight));\n        }\n        // interrupts\n        if (character.interrupts) {\n            filteredCharacter.interrupts = character.interrupts.filter(x => fightIds.includes(x.fight));\n        }\n        // protectionPotions\n        if (character.protectionPotions) {\n            filteredCharacter.protectionPotions = {};\n            Object.entries(character.protectionPotions).forEach(([key,value]) => {\n                let validEvents = value.events.filter(y => fightIds.includes(y.fight));\n                if (validEvents.length > 0)\n                {\n                    filteredCharacter.protectionPotions[key] = {\n                        events: validEvents,\n                        amount: validEvents.reduce((agg, potEvent) => agg += potEvent.amount, 0),\n                        firstAbsorb: value.firstAbsorb,\n                    };\n                }\n            });\n        }\n\n        return filteredCharacter;\n    }\n\n    getCharacter(characterid, fightId) {\n        if (fightId == null || fightId === -1) {\n            return this.Results.Characters[characterid];\n        }\n\n        let fightIds = this._getFightIds(fightId);\n\n        return this._getFilteredCharacter(this.Results.Characters[characterid], fightIds);\n    }\n\n    getFights() {\n        return fetch(this.domain + \"report/fights/\" + this.reportId + \"?api_key=\" + this.key)\n                .then(res => res.json());\n    }\n\n    getHealEvents(start_time, end_time) {\n        return Promise.all([\n            this.getClassHealEvents(start_time, end_time, \"priest\"),\n            this.getClassHealEvents(start_time, end_time, \"druid\"),\n            this.getClassHealEvents(start_time, end_time, \"shaman\"),\n            this.getClassHealEvents(start_time, end_time, \"paladin\"),\n\n            this.getClassCastEvents(start_time, end_time, \"priest\"),\n            this.getClassCastEvents(start_time, end_time, \"druid\"),\n            this.getClassCastEvents(start_time, end_time, \"shaman\"),\n            this.getClassCastEvents(start_time, end_time, \"paladin\"),\n\n            //this.getManaRegeneration(start_time, end_time),\n\n            this.getProtectionPotionHealingEvents(start_time, end_time),\n            this.getProtectionPotionCastEvents(start_time, end_time),\n        ])\n        //.then(res => Promise.all(res.map(response => response.json())))\n        .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n            accum = [...accum, ...current];\n\n            return accum;\n        }, []))));\n    }\n\n    _reducePlayerDetails(role) {\n        return (acc, obj) => {\n        let playerId = obj[\"id\"];\n\n                const slots = {\n                    0: { enchantable: true, name: \"Head\" },\n                    1: { enchantable: false, name: \"Neck\" },\n                    2: { enchantable: true, name: \"Shoulders\" },\n                    3: { enchantable: false, name: \"Shirt\" },\n                    4: { enchantable: true, name: \"Chest\" },\n                    5: { enchantable: false, name: \"Waist\" },\n                    6: { enchantable: true, name: \"Legs\" },\n                    7: { enchantable: true, name: \"Feet\" },\n                    8: { enchantable: true, name: \"Arms\" },\n                    9: { enchantable: true, name: \"Hands\" },\n                    10: { enchantable: false, name: \"Ring 1\" },\n                    11: { enchantable: false, name: \"Ring 2\" },\n                    12: { enchantable: false, name: \"Trinket 1\" },\n                    13: { enchantable: false, name: \"Trinket 2\" },\n                    14: { enchantable: true, name: \"Back\" },\n                    15: { enchantable: true, name: \"Main Hand\" },\n                    16: { enchantable: true, name: \"Off Hand\" },\n                    17: { enchantable: false, name: \"Ranged\" },\n                    18: { enchantable: false, name: \"Tabard\" }\n                };\n\n                let gearInfo = obj.combatantInfo?.gear?.reduce((accum, gear) => {\n                    let gearItem = itemList[gear.id];\n\n                    if (slots[gear.slot].enchantable && gear.id !== 0 && !offhandFrills[gear.id])\n                    {\n                        accum.permanentEnchants.push({\n                            slot: gear.slot, \n                            slotname: slots[gear.slot].name, \n                            id: gear.permanentEnchant, \n                            name: gear.permanentEnchantName, \n                            key: gear.id + \"_\" + gear.permanentEnchant,\n                            gearId: gear.id,\n                            gearName: gear.name,\n                        })\n                    }\n\n                    if (gear.slot === 15) {\n                        accum.weaponEnchant.id = gear.temporaryEnchant;\n                        accum.weaponEnchant.name = gear.temporaryEnchantName;\n                    }\n\n                    if (gear.slot === 16) {\n                        accum.offhandEnchant.id = gear.temporaryEnchant;\n                        accum.offhandEnchant.name = gear.temporaryEnchantName;\n                    }\n\n                    if (gear.gems) {\n                        gear.gems.forEach(gem => {\n                            if (accum.gems[gem.id]) {\n                                accum.gems[gem.id].count++;\n                            }\n                            else {\n                                let gemDetails = gemList[gem.id];\n                                accum.gems[gem.id] = {\n                                    id: gem.id,\n                                    itemLevel: gem.itemLevel,\n                                    icon: gemDetails?.icon || gem.icon,\n                                    rarity: gemDetails?.rarity,\n                                    colour: gemDetails?.colour,\n                                    label: gemDetails?.label,\n                                    description: gemDetails?.description,\n                                    count: 1\n                                };\n                            }\n                        });\n                    }\n\n                    if (gearItem?.sockets) {\n                        let gemCount = gear.gems?.length ?? 0;\n                        if (gearItem.sockets > gemCount) {\n                            accum.gems[0].count += gearItem.sockets - gemCount;\n                        }\n                    }\n\n                    return accum;\n                }, { permanentEnchants: [], weaponEnchant: {}, offhandEnchant: {}, gems: { 0: {id: 0, count: 0} }});\n\n                if (!acc[playerId]) {\n                    acc[playerId] = {\n                        id: playerId,\n                        name: obj.name,\n                        type: obj.type,\n                        roles: [role],\n                        intellect: obj.combatantInfo?.stats?.Intellect?.max,\n                        armor: obj.combatantInfo?.stats?.Armor?.max,\n                        stamina: obj.combatantInfo?.stats?.Stamina?.max,\n                        strength: obj.combatantInfo?.stats?.Strength?.max,\n                        agility: obj.combatantInfo?.stats?.Agility?.max,\n                        weaponEnchant: gearInfo?.weaponEnchant,\n                        offhandEnchant: gearInfo?.offhandEnchant,\n                        enchants: gearInfo?.permanentEnchants,\n                        gems: gearInfo?.gems\n                    };\n                }\n                else {\n                    acc[playerId].roles.push(role);\n                    if (!acc[playerId].weaponEnchant?.id && gearInfo?.weaponEnchant) {\n                        acc[playerId].weaponEnchant = gearInfo?.weaponEnchant;\n                    }\n                    if (!acc[playerId].offhandEnchant?.id && gearInfo?.offhandEnchant) {\n                        acc[playerId].offhandEnchant = gearInfo?.offhandEnchant;\n                    }\n                    acc[playerId].enchants = removeDuplicates([...(acc[playerId].enchants || []), ...(gearInfo?.permanentEnchants || [])], x => x.key);\n\n                }\n\n                return acc;\n        }\n    }\n\n    getCharacterInfo(start_time, end_time) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let playerData = [];\n            if (!data.playerDetails) {\n                resolve(playerData);\n                return;\n            }\n\n            if (data.playerDetails.tanks) {\n                playerData = data.playerDetails.tanks.reduce(this._reducePlayerDetails(\"tank\"), {});\n            }\n\n            if (data.playerDetails.healers) {\n                playerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), playerData);\n            }\n\n            if (data.playerDetails.dps) {\n                playerData = data.playerDetails.dps.reduce(this._reducePlayerDetails(\"dps\"), playerData);\n            }\n\n            resolve(playerData);\n        }).catch(reject));\n    }\n\n    getHealerInfo(start_time, end_time) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let healerData = [];\n            if (!data.playerDetails.healers) {\n                resolve(healerData);\n                return;\n            }\n\n            healerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), {});\n\n            resolve(healerData);\n        }).catch(reject));\n    }\n\n    getTankInfo(start_time, end_time, context = null) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let tankData = [];\n            if (data.playerDetails.tanks) {\n\n                tankData = data.playerDetails.tanks.reduce((acc, obj) => {\n                    let playerId = obj[\"id\"];\n                    \n                    acc[playerId] = {\n                        id: playerId,\n                        name: obj.name,\n                        type: obj.type,\n                        armor: obj.combatantInfo?.stats?.Armor?.max,\n                        stamina: obj.combatantInfo?.stats?.Stamina?.max,\n                        strength: obj.combatantInfo?.stats?.Strength?.max,\n                        agility: obj.combatantInfo?.stats?.Agility?.max\n                    };\n\n                    return acc;\n                }, {});\n            }\n\n            resolve({context: context, data: tankData});\n        }).catch(reject));\n    }\n\n    /* getManaRegeneration(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/resources/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&abilityid=100\")\n        .then(response =>  {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events.filter(obj => obj.ability.guid === 18194));\n\n                if (data.nextPageTimestamp) {\n                    this.getManaRegeneration(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    } */\n\n    getProtectionPotionHealingEvents(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getProtectionPotionHealingEvents(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getProtectionPotionCastEvents(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getProtectionPotionCastEvents(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getClassHealEvents(start_time, end_time, sourceClass, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceclass=\" + sourceClass)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getClassHealEvents(data.nextPageTimestamp, end_time, sourceClass, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getClassCastEvents(start_time, end_time, sourceClass, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceclass=\" + sourceClass)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getClassCastEvents(data.nextPageTimestamp, end_time, sourceClass, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getCharacterCastTable(start_time, end_time, sourceid, sourcename) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceid=\" + sourceid)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                resolve({ id: sourceid, name: sourcename, entries: data.entries })\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getArmorBuffUptime(start_time, end_time, context = null) {\n        return Promise.all([\n            this.getBuffUptime(start_time, end_time, 15359), // Inspiration (Rank 3)\n            this.getBuffUptime(start_time, end_time, 16237), // Ancestral Fortitude (Rank 3)\n        ])\n        .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n            current.reduce((innerAccum, character) => {\n                if (!innerAccum[character.id]) {\n                    innerAccum[character.id] = character;\n                }\n                else {\n                    // Join together\n                    let existingCharacter = innerAccum[character.id];\n                    existingCharacter.totalUptime += character.totalUptime;\n                    existingCharacter.totalUses += character.totalUses;\n                    existingCharacter.bands = [...existingCharacter.bands, ...character.bands];\n                    existingCharacter.bands = existingCharacter.bands.sort((x, y) => x.startTime - y.startTime);\n                }\n\n                return innerAccum;\n            }, accum)\n\n            return accum;\n        }, {}))))\n        .then(results => new Promise((resolve,_reject) => resolve({context: context, data: results})));\n    }\n\n    getBuffUptime(start_time, end_time, abilityid) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/buffs/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&abilityid=\" + abilityid)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                resolve(data.auras)\n            }).catch(reject);\n        }).catch(reject));\n    }\n}\n\nexport let LogLoader = new WarcraftLogLoader();","import {Component} from \"react\";\n\nexport class ProgressBar extends Component {\n\n    render() {\n        const {summary, maxHeals} = this.props;\n\n        return (\n            <div className=\"bar\" style={{width: (summary.getTotalHeals() / maxHeals * 100).toFixed(2) + \"%\"}}>\n                <div className=\"bar_effective\" style={{width: summary.getEffectivePercent()+'%'}}></div>\n                <div className=\"bar_overheal\" style={{width: (summary.getOverhealPercent() - summary.getWastedPercent())+'%'}}>&nbsp;</div>\n                <div className=\"bar_wasted\" style={{width: summary.getWastedPercent()+'%'}}>&nbsp;</div>\n            </div>\n        )\n    }\n}","import {Component} from \"react\";\nimport {abbreviateNumber} from \"../utils\";\nimport {ProgressBar} from \"../ProgressBar\";\n\nexport class HealerFightSummary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            summary: props.healer.summary,\n            spells: props.healer.spells,\n            name: props.healer.name,\n            manaOil: props.healer.manaOil,\n            enchants: props.healer.enchants,\n            id: props.healer.id,\n            classType: props.healer.classType,\n            isExpanded: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            isExpanded: !this.state.isExpanded\n        })\n    }\n\n    render() {\n        const {id, name, classType, manaOil, summary, spells, isExpanded, enchants} = this.state;\n        const {row, maxHeals} = this.props;\n\n        let maxSpellHeals = spells.reduce((agg,obj) => {\n            if (obj.summary.getTotalHeals() > agg) {\n                agg = obj.summary.getTotalHeals();\n            }\n            return agg;\n        }, 0);\n\n        let enchantScore = enchants.reduce((acc, obj) => {\n            acc.score += obj.score;\n            acc.count++;\n\n            if (acc.score !== acc.count) {\n                acc.colour = \"yellow\";\n            }\n\n            if (acc.score === 0) {\n                acc.colour = \"red\";\n            }\n\n            acc.tooltip += obj.slot + \": \" \n                + (obj.name ? obj.name : \"(none)\") \n                + (obj.score === 1 ? \" <span class='tick'>✔</span>\" : obj.score === 0 ? \" <span class='cross'>✖</span>\" : \" <span class='alternative'>✔</span>\")\n                + \"<br />\";\n\n            return acc;\n        }, { score: 0, count: 0, colour: \"green\", tooltip: \"\"})\n\n        return (\n            <>\n                <tr key={id} className={classType + \" character \" + (row % 2 === 0 ? \"even\" : \"odd\")} onClick={this.toggle}>\n                    <td className=\"healer_name\">{name}</td>\n                    <td className={\"healer_enchants_\" + enchantScore.colour} data-tip={enchantScore.tooltip} data-place='right' data-class='enchant_tooltip' data-html={true}>{enchantScore.score}/{enchantScore.count}</td>\n                    <td className=\"healer_consumes_manapot center\">{summary.manaPots}</td>\n                    <td className=\"healer_consumes_runes center\">{summary.runes}</td>\n                    <td className={\"healer_consumes_manaoil center \" + (manaOil ? \"tick\" : \"cross\")}>{manaOil ? \"✔\" : \"✖\"}</td>\n                    <td className=\"right\">{abbreviateNumber(summary.manaGained)}</td>\n                    <td className=\"healer_cooldowns\">\n                        {summary.cooldowns.map((cooldown, idx) => (\n                            <img key={idx} className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + cooldown.icon} alt={cooldown.name} data-tip={cooldown.name} />\n                        ))}\n                    </td>\n                    <td className=\"healer_casts_started center\">{summary.castsStarted}</td>\n                    <td className=\"healer_casts_completed center\">{summary.castsCompleted}</td>\n                    <td className=\"healer_casts percent right\">{summary.getCastsPercent()}%</td>\n                    <td className=\"healer_amount\">\n                        <ProgressBar summary={summary} maxHeals={maxHeals} />\n                    </td>\n                    <td className={\"healer_effective amount right\" + (summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.effectiveHeals)}</td>\n                    <td className={\"healer_effective percent right\" + (summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{summary.getEffectivePercent()}%</td>\n                    <td className={\"healer_overheal amount right\" + (summary.overHeal === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.overHeal)}</td>\n                    <td className={\"healer_overheal percent right\" + (summary.overHeal === 0 ? \" empty\" : \"\")}>{summary.getOverhealPercent()}%</td>\n                    <td className={\"healer_wasted amount right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.wastedHeals)}</td>\n                    <td className={\"healer_wasted percent right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{summary.getWastedPercent()}%</td>\n                    <td className={\"healer_wasted percent right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.wastedMana)}</td>\n                </tr>\n\n                {isExpanded && spells.sort((x,y) => y.summary.effectiveHeals -x.summary.effectiveHeals)\n                                     .map((spell) => (\n                    <tr key={spell.id} className={spell.type + \" spell \" + (row % 2 === 0 ? \"even\" : \"odd\")}>\n                        <td className=\"healer_name\" colSpan=\"7\"><img className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + spell.icon} alt={spell.name} /> {spell.name}</td>\n                        <td className=\"healer_casts_started center\">{spell.summary.castsStarted}</td>\n                        <td className=\"healer_casts_completed center\">{spell.summary.castsCompleted}</td>\n                        <td className=\"healer_casts percent right\">{spell.summary.getCastsPercent()}%</td>\n                        <td className=\"healer_amount\">\n                            <ProgressBar summary={spell.summary} maxHeals={maxSpellHeals} />\n                        </td>\n                        <td className={\"healer_effective amount right\" + (spell.summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.effectiveHeals)}</td>\n                        <td className={\"healer_effective percent right\" + (spell.summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{spell.summary.getEffectivePercent()}%</td>\n                        <td className={\"healer_overheal amount right\" + (spell.summary.overHeal === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.overHeal)}</td>\n                        <td className={\"healer_overheal percent right\" + (spell.summary.overHeal === 0 ? \" empty\" : \"\")}>{spell.summary.getOverhealPercent()}%</td>\n                        <td className={\"healer_wasted amount right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.wastedHeals)}</td>\n                        <td className={\"healer_wasted percent right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{spell.summary.getWastedPercent()}%</td>\n                        <td className={\"healer_wasted percent right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.wastedMana)}</td>\n                    </tr>\n                ))}\n            </>\n        )\n    }\n}","import {healingSpells} from \"../data\";\nimport {cooldownList} from \"../datastore\";\n\nexport class HealSummary {\n    constructor() {\n        this.manaPots = 0;\n        this.runes = 0;\n        this.manaGained = 0;\n        this.castsStarted = 0;\n        this.castsCompleted = 0;\n        this.effectiveHeals = 0;\n        this.overHeal = 0;\n        this.wastedHeals = 0;\n        this.wastedMana = 0;\n        this.cooldowns = [];\n    }\n\n    getCastsPercent() { return (this.castsStarted > 0 ? this.castsCompleted / this.castsStarted * 100 : 0).toFixed(2); }\n    getTotalHeals() { return this.effectiveHeals + this.overHeal; }\n    getEffectivePercent() { return (this.getTotalHeals() > 0 ? this.effectiveHeals / this.getTotalHeals() * 100 : 0).toFixed(2); }\n    getOverhealPercent() { return (this.getTotalHeals() > 0 ? this.overHeal / this.getTotalHeals() * 100 : 0).toFixed(2); }\n    getWastedPercent() { return (this.getTotalHeals() > 0 ? this.wastedHeals / this.getTotalHeals() * 100 : 0).toFixed(2); }\n}\n\nexport function getHealSummary(collection, event, getOrCreate) {\n    \n    let aggregate = getOrCreate(collection, event);\n\n    if (!aggregate) {\n        return;\n    }\n\n    if (event.ability.guid === 27869 || event.ability.guid === 16666) {\n        aggregate.runes++;\n        aggregate.manaGained += 1500;\n    }\n\n    if (event.ability.guid === 17531) {\n        aggregate.manaPots++;\n        aggregate.manaGained += 2250;\n    }\n\n    let spellInfo = healingSpells[event.ability.guid];\n\n    if (spellInfo)\n    {\n        if (event.type === \"begincast\") {\n            aggregate.castsStarted++;\n        } else if (event.type === \"cast\") {\n            if (spellInfo.castTime === 0) {\n                aggregate.castsStarted++;\n            }\n            aggregate.castsCompleted++;\n        }\n    } else {\n        console.log(\"Not healing spell: \" + event.ability.name + \" (\" + event.ability.guid + \")\");\n    }\n\n    if (event.type === \"heal\" || event.type === \"absorbed\") {\n        if (event.amount) {\n            aggregate.effectiveHeals += event.amount;\n        }\n        if (event.overheal) {\n            aggregate.overHeal += event.overheal;\n            if (event.amount === 0) {\n                aggregate.wastedHeals += event.overheal;\n                if (event.tick && spellInfo && spellInfo.ticks) {\n                    aggregate.wastedMana += Math.round(spellInfo.mana * spellInfo.tickPortion / spellInfo.ticks);\n                } else {\n                    aggregate.wastedMana += spellInfo ? spellInfo.mana : 0;\n                }\n            }\n        }\n    }\n\n    if (event.type === \"cast\" && cooldownList[event.ability.guid]) {\n        aggregate.cooldowns.push(cooldownList[event.ability.guid]);\n    }\n\n}","import \"./FightReport.scss\";\nimport {Component} from \"react\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport {msToTime, abbreviateNumber} from \"../utils\";\nimport { HealerFightSummary } from \"./HealerFightSummary\";\nimport {getHealSummary, HealSummary} from \"./healSummary\";\nimport {healingSpells, protectionPotions, requiredEnchants} from \"../data\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport class FightReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            reportId: props.reportId,\n            fight: props.fight,\n            events: [],\n            healers: [],\n            isLoaded: false,\n            healSummary: null,\n            expanded: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    loadData() {\n        const { reportId, fight, isLoaded } = this.state;\n        const {characters} = this.props;\n        if (!reportId || !fight || isLoaded)\n            return;\n\n        let healerInfo = {};\n\n        LogLoader.getHealerInfo(fight.start_time, fight.end_time)\n        .then(\n            (healers) => {\n                healerInfo = healers;\n            }\n        );\n\n        LogLoader.getHealEvents(fight.start_time, fight.end_time)\n        .then(\n            (result) => {\n                let eventsByCharacter = this.getCharactersFromEvents(result);\n                let characterList = [];\n\n                for (const [key, value] of Object.entries(eventsByCharacter.characters))\n                {\n                    let characterName;\n                    let characterClass;\n                    let characterManaOil = false;\n                    let enchants = [];\n                    if (characters[key]) {\n                        characterName = characters[key].name;\n                        characterClass = characters[key].type;\n                        if (healerInfo[key]) {\n                            characterManaOil = healerInfo[key].weaponEnchant.id === 2629;\n\n                            const bisEnchants = requiredEnchants[characterClass];\n\n                            enchants = healerInfo[key].enchants.map((obj) => {\n                                return {\n                                    slot: obj.slotname,\n                                    score: bisEnchants[obj.slot][obj.id] ? bisEnchants[obj.slot][obj.id].score : 0,\n                                    name: bisEnchants[obj.slot][obj.id] ? bisEnchants[obj.slot][obj.id].name : obj.name\n                                }\n\n                            })\n                        }\n                    }\n\n                    if (key === '9999') {\n                        characterName = \"Protection Potions\";\n                        characterClass = \"Consumable\";\n                    }\n\n                    characterList.push({ \n                        id: key,\n                        name: characterName,\n                        classType: characterClass,\n                        manaOil: characterManaOil,\n                        enchants: enchants,\n                        summary: value.total,\n                        spells: Object.entries(value.spells).map(keyValuePair => keyValuePair[1])\n                    })\n                }\n\n                this.setState({\n                    isLoaded: true,\n                    events: result.events,\n                    healSummary: eventsByCharacter.total,\n                    healers: characterList\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    getCharactersFromEvents(events) {\n        const {pets} = this.props;\n\n        let groupByCharacter = events.reduce((acc, obj) => {\n            getHealSummary(acc, obj, (collection, _event) => collection.total);  // Save to totals\n            getHealSummary(acc, obj, (collection, event) => {\n                let sourceId = event[\"sourceID\"];\n                if (pets[sourceId]) {\n                    sourceId = pets[sourceId].petOwner;\n                }\n\n                let abilityId = event.ability.guid;\n                if (protectionPotions[abilityId]) {\n                    sourceId = 9999;\n                }\n\n                if (!collection.characters[sourceId]) {\n                    collection.characters[sourceId] = { total: new HealSummary(), spells: {} };\n                }\n\n                return collection.characters[sourceId].total;\n            });\n            getHealSummary(acc, obj, (collection, event) => {\n                let sourceId = event.sourceID;\n                if (pets[sourceId]) {\n                    sourceId = pets[sourceId].petOwner;\n                }\n                let spellId = event.ability.guid;\n                if (protectionPotions[spellId]) {\n                    sourceId = 9999;\n                }\n\n                let spell = healingSpells[spellId];\n                if (!spell) {\n                    return null;\n                }\n\n                if (!collection.characters[sourceId].spells[spellId]) {\n                    collection.characters[sourceId].spells[spellId] = { id: spellId, name: spell.name, icon: spell.icon, type: spell.type, summary: new HealSummary() };\n                }\n\n                return collection.characters[sourceId].spells[spellId].summary;\n            })\n\n            return acc;\n        }, { total: new HealSummary(), characters: {}})\n\n        return groupByCharacter;\n    }\n\n    toggle() {\n        this.setState({\n            expanded: !this.state.expanded\n        });\n\n        this.loadData();\n    }\n\n    render() {\n        const { error, isLoaded, fight, healSummary, healers, expanded} = this.state;\n\n        let fightClass = !fight.boss ? \"trash\" : fight.kill ? \"success\" : \"fail\";\n        let details;\n        if (error) {\n            details = <div>Error: {error.message}</div>\n        } else if (!isLoaded) {\n            details = <div>Loading...</div>\n        } else {\n            let maxHeals = healers.reduce((agg,obj) => {\n                if (obj.summary.getTotalHeals() > agg) {\n                    agg = obj.summary.getTotalHeals();\n                }\n                return agg;\n            }, 0);\n            details = (\n            <>\n                <table>\n                    <thead>\n                        <tr>\n                            <td className=\"healer_name\" rowSpan=\"2\">Name</td>\n                            <td className=\"healer_enchants\" rowSpan=\"2\">Enchants</td>\n                            <td className=\"healer_consumes\" colSpan=\"3\">Consumes</td>\n                            <td className=\"healer_consumes_mana\" rowSpan=\"2\">Mana Gained</td>\n                            <td className=\"healer_cooldowns\" rowSpan=\"2\">Cooldowns</td>\n                            <td className=\"healer_casts\" colSpan=\"3\">Casts</td>\n                            <td className=\"healer_amount\" rowSpan=\"2\">Amount</td>\n                            <td className=\"healer_effective center\" colSpan=\"2\">Effective</td>\n                            <td className=\"healer_overheal center\" colSpan=\"2\">Overheal</td>\n                            <td className=\"healer_wasted center\" colSpan=\"3\">Wasted</td>\n                        </tr>\n                        <tr>\n                            <td className=\"healer_consumes_manapot center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_potion_76.jpg\" width=\"24\" height=\"24\" alt=\"Major Mana Potion\" data-tip='Major Mana Potions'/></td>\n                            <td className=\"healer_consumes_runes center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_misc_rune_04.jpg\" width=\"24\" height=\"24\" alt=\"Demonic/Dark Runes\"  data-tip='Demonic/Dark Runes'/></td>\n                            <td className=\"healer_consumes_manaoil center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_potion_100.jpg\" width=\"24\" height=\"24\" alt=\"Brilliant Mana Oil\"  data-tip='Brilliant Mana Oil'/></td>\n                            <td className=\"healer_casts_started center\">Start</td>\n                            <td className=\"healer_casts_completed center\">Finish</td>\n                            <td className=\"healer_casts percent right\">%</td>\n                            <td className=\"healer_effective amount right\">#</td>\n                            <td className=\"healer_effective percent right\">%</td>\n                            <td className=\"healer_overheal amount right\">#</td>\n                            <td className=\"healer_overheal percent right\">%</td>\n                            <td className=\"healer_wasted amount right\">#</td>\n                            <td className=\"healer_wasted percent right\">%</td>\n                            <td className=\"healer_wasted amount right\">Mana</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                {healers.sort((x,y) => y.summary.effectiveHeals - x.summary.effectiveHeals)\n                        .map((x, idx) => (\n                    <HealerFightSummary key={x.id} healer={x} row={idx} maxHeals={maxHeals} />\n                ))}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td className=\"healer_name\">Total</td>\n                            <td className=\"healer_enchants\"></td>\n                            <td className=\"healer_consumes_manapot center\">{healSummary.manaPots}</td>\n                            <td className=\"healer_consumes_runes center\">{healSummary.runes}</td>\n                            <td className=\"healer_consumes_manaoil center\"></td>\n                            <td className=\"right\">{abbreviateNumber(healSummary.manaGained)}</td>\n                            <td className=\"healer_cooldowns\"></td>\n                            <td className=\"healer_casts_started center\">{healSummary.castsStarted}</td>\n                            <td className=\"healer_casts_completed center\">{healSummary.castsCompleted}</td>\n                            <td className=\"healer_casts percent center\">{healSummary.getCastsPercent()}%</td>\n                            <td className=\"healer_amount\">&nbsp;</td>\n                            <td className=\"healer_effective amount right\">{abbreviateNumber(healSummary.effectiveHeal)}</td>\n                            <td className=\"healer_effective percent right\">{healSummary.getEffectivePercent()}%</td>\n                            <td className=\"healer_overheal amount right\">{abbreviateNumber(healSummary.overHeal)}</td>\n                            <td className=\"healer_overheal percent right\">{healSummary.getOverhealPercent()}%</td>\n                            <td className=\"healer_wasted amount right\">{abbreviateNumber(healSummary.wastedHeals)}</td>\n                            <td className=\"healer_wasted percent right\">{healSummary.getWastedPercent()}%</td>\n                            <td className=\"healer_wasted percent right\">{abbreviateNumber(healSummary.wastedMana)}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n                <ReactTooltip />\n            </>\n            )\n        }\n        return (\n            <div className={\"fight \" + fightClass}>\n            <div className=\"heading\" onClick={this.toggle}>{fight.name} {fight.kill ? \"- Kill \" : \"- Wipe \"}({msToTime(fight.end_time - fight.start_time)})</div>\n            {expanded && details}\n            </div>\n        )\n    }\n}","import {Component} from \"react\";\nimport {FightReport} from \"./FightReport\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport { withRouter } from \"react-router-dom\";\n\nclass HealerReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            pets: {},\n            isLoaded: false,\n            //reportId: props.reportId\n        }\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        //const { reportId } = this.state;\n        if (!id)\n            return;\n\n        this.setState({reportId: id});\n\n        LogLoader.setReport(id);\n        LogLoader.getFights()\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    fights: result.fights,\n                    characters: result.friendlies.reduce((acc, obj) => {\n                        let id = obj[\"id\"];\n                        if (!acc[id]) {\n                            acc[id] = obj;\n                        }\n\n                        return acc;\n                    }, {}),\n                    pets: result.friendlyPets.reduce((acc, obj) => {\n                        let id = obj[\"id\"];\n                        if (!acc[id]) {\n                            acc[id] = obj;\n                        }\n\n                        return acc;\n                    })\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    render() {\n        const { error, isLoaded, fights, reportId, characters, pets} = this.state;\n        const {showTrash} = this.props;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                {fights.filter(x => showTrash || x.boss !== 0).map(item => (\n                    <FightReport key={item.id} fight={item} characters={characters} pets={pets} reportId={reportId} />\n                ))}\n                </>\n            )\n        }\n    }\n}\n\nexport const HealerReportWithRouter = withRouter(HealerReport);","import \"./AncestralFortitudeReport.css\";\nimport { Component } from \"react\";\nimport { LogLoader } from \"../warcraftLogLoader\";\nimport { msToTime, asPercentage } from \"../utils\";\n\nexport class AncestralFortitudeReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            tanksPerFight: {},\n            tanks: {},\n            isLoaded: false,\n            reportId: props.reportId\n        }\n    }\n\n    //getArmorBuffUptime\n    _getArmorBuffUptime(fights) {\n        let buffCalls = fights.map(fight => LogLoader.getArmorBuffUptime(fight.start_time, fight.end_time, fight.id))\n        return Promise.all(buffCalls)\n        .then(res => new Promise((resolve, _reject) => {\n            let buffsForFight = res.reduce((accum, current) => {\n                accum[current.context] = current.data;\n\n                return accum;\n            }, {});\n            resolve(buffsForFight);\n        }))\n        .then(allBuffs => {\n            this.setState({\n                buffUptime: allBuffs\n            })\n        });\n    }\n\n    _getTanksForFights(fights) {\n        let tankCalls = fights.map(fight => LogLoader.getTankInfo(fight.start_time, fight.end_time, fight.id));\n        return Promise.all(tankCalls)\n            .then(res => new Promise((resolve, _reject) => {\n                let tanksForFight = res.reduce((accum, current) => {\n                    accum[current.context] = current.data;\n\n                    return accum;\n                }, {});\n                resolve(tanksForFight);\n            }))\n            .then(allTanks => {\n                this.setState({\n                    tanksPerFight: allTanks,\n                    tanks: Object.entries(allTanks).reduce((accum, [_fightkey, current]) => {\n                        Object.entries(current).reduce((innerAccum, [charId, character]) => {\n                            if (!innerAccum[charId]) {\n                                innerAccum[charId] = { name: character.name, class: character.type };\n                            }\n\n                            return innerAccum\n                        }, accum)\n\n                        return accum;\n                    }, {})\n                })\n            });\n    }\n\n    componentDidMount() {\n        const { reportId } = this.state;\n        if (!reportId)\n            return;\n\n        LogLoader.getFights()\n            .then(\n                (result) => {\n                    let fights = result.fights.filter(x => x.boss !== 0);\n                    return Promise.all([\n                        this._getTanksForFights(fights),\n                        this._getArmorBuffUptime(fights)\n                    ])\n                    .then(_results => {\n                        this.setState({\n                            isLoaded: true,\n                            fights: fights\n                        });\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            error: error\n                        })\n                    })\n                    /* let tankCalls = fights.map(fight => LogLoader.getTankInfo(fight.start_time, fight.end_time, fight.id));\n                    return Promise.all(tankCalls)\n                        .then(res => new Promise((resolve, _reject) => {\n                            let tanksForFight = res.reduce((accum, current) => {\n                                accum[current.context] = current.data;\n\n                                return accum;\n                            }, {});\n                            resolve(tanksForFight);\n                        }))\n                        .then(allTanks => {\n                            this.setState({\n                                isLoaded: true,\n                                fights: fights,\n                                tanksPerFight: allTanks,\n                                tanks: Object.entries(allTanks).reduce((accum, [_fightkey, current]) => {\n                                    Object.entries(current).reduce((innerAccum, [charId, character]) => {\n                                        if (!innerAccum[charId]) {\n                                            innerAccum[charId] = { name: character.name, class: character.type };\n                                        }\n\n                                        return innerAccum\n                                    }, accum)\n\n                                    return accum;\n                                }, {})\n                            })\n                        },\n                            (error) => {\n                                this.setState({\n                                    isLoaded: true,\n                                    error: error\n                                })\n                            }) */\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error: error\n                    })\n                });\n    }\n\n    render() {\n        const { error, isLoaded, tanks, fights, tanksPerFight, buffUptime } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h3>Ancestral Fortitude/Inspiration</h3>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>&nbsp;</td>\n                                {Object.entries(tanks).map(([key, value]) => <td key={key} className={\"inspiration_heading \" + value.class + \"Background\"} colspan=\"2\">{value.name}</td>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {fights.map((fight, idx) => {\n                                return (\n                                    <tr key={fight.id} className={(idx % 2 === 0 ? \"even\" : \"odd\")}>\n                                        <td className={!fight.boss ? \"trash\" : fight.kill ? \"success\" : \"fail\"}>{fight.name} {fight.kill ? \"- Kill \" : \"- Wipe \"}({msToTime(fight.end_time - fight.start_time)})</td>\n                                        {Object.entries(tanks).map(([key, value]) => {\n                                            if (tanksPerFight[fight.id][key]) {\n                                                let fightLength = fight.end_time - fight.start_time;\n                                                let tankBuffInfo = buffUptime[fight.id][key];\n                                                let tankBuffUptime = tankBuffInfo ? tankBuffInfo.totalUptime / fightLength : 0;\n                                                let preBuff = tankBuffInfo ? tankBuffInfo.bands[0].startTime === fight.start_time ? true : false : false;\n                                                return (\n                                                    <>\n                                                    <td key={fight.id + \"_\" + key} className={\"center \" + (preBuff ? \"tick\" : \"cross\")}>{preBuff ? \"✔\" : \"✖\"}</td>\n                                                    <td className=\"right\">{asPercentage(tankBuffUptime)}</td>\n                                                    </>\n                                                )\n                                            }\n\n                                            return <td key={fight.id + \"_\" + key} colspan=\"2\">&nbsp;</td>\n                                        })}\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                    <div className=\"note\">The tick or cross indicates that they had the buff on fight start (on pull) and the percentage shows how much of the fight it was up for.</div>\n                </>\n            )\n        }\n    }\n}","import {Component} from \"react\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport {cooldownList} from \"../datastore\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./CooldownReport.css\";\n\nexport class CooldownReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            reportId: props.reportId,\n            startTime: props.startTime,\n            endTime: props.endTime,\n            characters: props.characters,\n            cooldownRows: [],\n            cooldowns: {},\n            //events: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        const { reportId, startTime, endTime, characters } = this.state;\n        if (!reportId)\n            return;\n\n        LogLoader.getBuffUptime(startTime, endTime, 24659)   // Zandalarian Hero Charm\n        .then(zhcResult => {\n\n            let zhcCounts = zhcResult.reduce((accum, current) => {\n                if (current.type === \"Shaman\") {\n                    accum[current.id] = current.bands.length;\n                }\n\n                return accum;\n            }, {})\n\n            return Promise.all(characters.map(character => LogLoader.getCharacterCastTable(startTime, endTime, character.id, character.name)))\n            .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n                let cooldownRow = { id: current.id, name: current.name, total: 0 }\n                for (const entry of current.entries) {\n                    if (!cooldownList[entry.guid])\n                        continue;\n\n                    cooldownRow[entry.guid] = entry.total;\n                    cooldownRow.total += entry.total;\n                }\n                if (zhcCounts[current.id]) {\n                    cooldownRow[\"24659\"] = zhcCounts[current.id];\n                    cooldownRow.total += zhcCounts[current.id];\n                }\n\n                accum = [...accum, cooldownRow];\n\n                return accum;\n            }, []))))\n            .then(\n                (result) => {\n                    this.setState({\n                        //events: result,\n                        cooldownRows: result.sort((x,y) => y.total - x.total),\n                        cooldowns: Object.entries(cooldownList).sort(([xKey,xValue],[yKey,yValue]) => {\n                            let typeCompare = xValue.type.localeCompare(yValue.type);\n\n                            if (typeCompare !== 0)\n                                return typeCompare;\n\n                            return xValue.name.localeCompare(yValue.name);\n                        }).reduce((accum, [key,_value]) => {\n                            let cooldownFound = result.reduce((found, resultRow) => {\n                                if (resultRow[key]) {\n                                    return true;\n                                }\n\n                                return found;\n                            }, false);\n                            if (cooldownFound) {\n                                accum = [...accum, key];\n                            }\n\n                            return accum;\n                        }, []),\n                        isLoaded: true\n                    })\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error: error\n                    })\n                }\n            )\n        })\n        \n    }\n\n    render() {\n        const { error, isLoaded, cooldownRows, cooldowns} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h3>Cooldown Usage</h3>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>&nbsp;</td>\n                                {cooldowns.map(cooldown => \n                                    <td key={cooldown}><img className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + cooldownList[cooldown].icon} alt={cooldownList[cooldown].name} data-tip={cooldownList[cooldown].name} /></td>\n                                )}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {cooldownRows.map((cooldownRow,row) =>\n                                <tr key={cooldownRow.id} className={\"Shaman \" + (row % 2 === 0 ? \"even\" : \"odd\")}>\n                                    <td className=\"shaman_name\">{cooldownRow.name}</td>\n                                    {cooldowns.map(cooldown => \n                                    <td className=\"shaman_cooldown\" key={cooldownRow.id + \"_\" + cooldown}>{cooldownRow[cooldown]}</td>\n                                    )}\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    <ReactTooltip />\n                </>\n            )\n        }\n    }\n}","import {Component} from \"react\";\n\nexport class TotemReport extends Component {\n    render() {\n        return (\n            <>\n                <h3>Totem Usage</h3>\n            </>\n        )\n    }\n}","import {Component} from \"react\";\nimport { withRouter } from \"react-router-dom\";\n//import {FightReport} from \"./FightReport\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport { AncestralFortitudeReport } from \"./AncestralFortitudeReport\";\nimport { CooldownReport } from \"./CooldownReport\";\nimport { TotemReport } from \"./TotemReport\";\n\nclass ShamanReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            pets: {},\n            isLoaded: false,\n            //reportId: props.reportId,\n            startTime: null,\n            endTime: null\n        }\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        //const { reportId } = this.state;\n        if (!id)\n            return;\n\n        this.setState({reportId: id});\n\n        LogLoader.setReport(id);\n        LogLoader.getFights()\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    fights: result.fights,\n                    shamans: result.friendlies.reduce((acc, obj) => {\n                        if (obj.type === \"Shaman\") {\n                            acc.push({name: obj.name, id: obj.id});\n                        }\n\n                        return acc;\n                    }, []),\n                    startTime: result.fights[0].start_time,\n                    endTime: result.fights[result.fights.length-1].end_time\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    render() {\n        const { error, isLoaded, reportId, startTime, endTime, shamans} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h2>Shaman Report</h2>\n                    <TotemReport reportId={reportId} />\n                    <AncestralFortitudeReport reportId={reportId}/>\n                    <CooldownReport reportId={reportId} startTime={startTime} endTime={endTime} characters={shamans} />\n                </>\n            )\n        }\n    }\n}\n\nexport const ShamanReportWithRouter = withRouter(ShamanReport);","//import {createContext} from \"react\";\n\nexport const GroupKeys = {\n    Name: \"Name\",\n    Enchants: \"Enchants\",\n    Gems: \"Gems\",\n    Elixirs: \"Elixirs\",\n    Deaths: \"Deaths\",\n    ProtPotions: \"ProtPotions\",\n    Consumes: \"Consumes\",\n    Abilities: \"Abilities\",\n    Damage: \"Damage\",\n    DispelsInterrupts: \"DispelsInterrupts\",\n    Cooldowns: \"Cooldowns\",\n    Tank: \"Tank\",\n    Healer: \"Healer\",\n    Dps: \"Dps\",\n}\n\nexport const DataPoints = {\n    Name: \"Name\",\n    Enchants: \"Enchants\",\n    GemsMissing: \"GemsMissing\",\n    GemsCommon: \"GemsCommon\",\n    GemsUncommon: \"GemUncommon\",\n    GemsRare: \"GemsRare\",\n    GemsEpic: \"GemsEpic\",\n    GemsList: \"GemsList\",\n    Elixirs: \"Elixirs\",\n    ElixirsFlasks: \"ElixirsFlasks\",\n    ElixirsGuardian: \"ElixirsGuardian\",\n    ElixirsBattle: \"ElixirsBattle\",\n    ElixirsFood: \"ElixirsFood\",\n    ElixirsSeasonal: \"ElixirsSeasonal\",\n    ElixirsScrolls: \"ElixirsScrolls\",\n    ElixirsWeaponEnchants: \"ElixirsWeaponEnchants\",\n    Deaths: \"Deaths\",\n    ProtectionPotionsTotal: \"ProtectionPotionsTotal\",\n    ProtectionPotionsTotalAbsorbed: \"ProtectionPotionsTotalAbsorbed\",\n    ProtectionPotionsNature: \"ProtectionPotionsNature\",\n    ProtectionPotionsGreaterNature: \"ProtectionPotionsGreaterNature\",\n    ProtectionPotionsMajorNature: \"ProtectionPotionsMajorNature\",\n    ProtectionPotionsNatureAbsorbed: \"ProtectionPotionsNatureAbsorbed\",\n    ProtectionPotionsFire: \"ProtectionPotionsFire\",\n    ProtectionPotionsGreaterFire: \"ProtectionPotionsGreaterFire\",\n    ProtectionPotionsMajorFire: \"ProtectionPotionsMajorFire\",\n    ProtectionPotionsFireAbsorbed: \"ProtectionPotionsFireAbsorbed\",\n    ProtectionPotionsFrost: \"ProtectionPotionsFrost\",\n    ProtectionPotionsGreaterFrost: \"ProtectionPotionsGreaterFrost\",\n    ProtectionPotionsMajorFrost: \"ProtectionPotionsMajorFrost\",\n    ProtectionPotionsFrostAbsorbed: \"ProtectionPotionsFrostAbsorbed\",\n    ProtectionPotionsShadow: \"ProtectionPotionsShadow\",\n    ProtectionPotionsGreaterShadow: \"ProtectionPotionsGreaterShadow\",\n    ProtectionPotionsMajorShadow: \"ProtectionPotionsMajorShadow\",\n    ProtectionPotionsShadowAbsorbed: \"ProtectionPotionsShadowAbsorbed\",\n    ProtectionPotionsGreaterArcane: \"ProtectionPotionsGreaterArcane\",\n    ProtectionPotionsMajorArcane: \"ProtectionPotionsMajorArcane\",\n    ProtectionPotionsArcaneAbsorbed: \"ProtectionPotionsArcaneAbsorbed\",\n    ConsumesPotions: \"ConsumesPotions\",\n    ConsumesDrums: \"ConsumesDrums\",\n    ConsumesGems: \"ConsumesGems\",\n    ConsumesExplosives: \"ConsumesExplosives\",\n    ConsumesBandages: \"ConsumesBandages\",\n    ConsumesManaPots: \"ConsumesManaPots\",\n    ConsumesRunes: \"ConsumesRunes\",\n    ConsumesRejuvPots: \"ConsumesRejuvPots\",\n    ConsumesHealthPots: \"ConsumesHealthPots\",\n    ConsumesHealthStones: \"ConsumesHealthStones\",\n    ConsumesWhipperRootTuber: \"ConsumesWhipperRootTuber\",\n    ConsumesRagePotions: \"ConsumesRagePotions\",\n    ConsumesThistleTea: \"ConsumesThistleTea\",\n    ConsumesRestorationPots: \"ConsumesRestorationPots\",\n    ConsumesFreeActionPotion: \"ConsumesFreeActionPotion\",\n    ConsumesManaGem: \"ConsumesManaGem\",\n    ConsumesNightmareSeed: \"ConsumesNightmareSeed\",\n    ConsumesStoneshield: \"ConsumesStoneshield\",\n    ConsumesHeavyRuneclothBandage: \"ConsumesHeavyRuneclothBandage\",\n    ConsumesAntiVenom: \"ConsumesAntiVenom\",\n    ConsumesHolyWater: \"ConsumesHolyWater\",\n    ConsumesSapperCharge: \"ConsumesSapperCharge\",\n    ConsumesEzThro: \"ConsumesEzThro\",\n    ConsumesDenseDynamite: \"ConsumesDenseDynamite\",\n    ConsumesFelIronBombs: \"ConsumesFelIronBombs\",\n    ConsumesDrumsBattle: \"ConsumesDrumsBattle\",\n    ConsumesDrumsRestoration: \"ConsumesDrumsRestoration\",\n    ConsumesDrumsPanic: \"ConsumesDrumsPanic\",\n    ConsumesDrumsWar: \"ConsumesDrumsWar\",\n    ConsumesInsaneStrength: \"ConsumesInsaneStrength\",\n    ConsumesShrouding: \"ConsumesShrouding\",\n    ConsumesFelRegeneration: \"ConsumesFelRegeneration\",\n    ConsumesHeroic: \"ConsumesHeroic\",\n    ConsumesDestruction: \"ConsumesDestruction\",\n    ConsumesHaste: \"ConsumesHaste\",\n    ConsumesFelMana: \"ConsumesFelMana\",\n    ConsumesIronshield: \"ConsumesIronshield\",\n    DispelTotal: \"DispelTotal\",\n    DispelBoss: \"DispelBoss\",\n    DispelTrash: \"DispelTrash\",\n    DispelPoison: \"DispelPoison\",\n    DispelDisease: \"DispelDisease\",\n    DispelCurse: \"DispelCurse\",\n    DispelMagic: \"DispelMagic\",\n    DispelFrenzy: \"DispelFrenzy\",\n    DispelDruidCurePoison: \"DispelDruidCurePoison\",\n    DispelDruidAbolishPoison: \"DispelDruidAbolishPoison\",\n    DispelDruidRemoveCurse: \"DispelDruidRemoveCurse\",\n    DispelHunterTranqShot: \"DispelHunterTranqShot\",\n    DispelMageRemoveLesserCurse: \"DispelMageRemoveLesserCurse\",\n    DispelPaladinPurify: \"DispelPaladinPurify\",\n    DispelPaladinCleanse: \"DispelPaladinCleanse\",\n    DispelPriestDispelMagic: \"DispelPriestDispelMagic\",\n    DispelPriestCureDisease: \"DispelPriestCureDisease\",\n    DispelPriestAbolishDisease: \"DispelPriestAbolishDisease\",\n    DispelShamanPurge: \"DispelShamanPurge\",\n    DispelShamanCurePoison: \"DispelShamanCurePoison\",\n    DispelShamanCureDisease: \"DispelShamanCureDisease\",\n    DispelShamanPoisonCleansingTotem: \"DispelShamanPoisonCleansingTotem\",\n    DispelShamanDiseaseCleansingTotem: \"DispelShamanDiseaseCleansingTotem\",\n    DispelWarlockDevourMagic: \"DispelWarlockDevourMagic\",\n    InterruptTotal: \"InterruptTotal\",\n    InterruptDruidBash: \"InterruptDruidBash\",\n    InterruptDruidFeralCharge: \"InterruptDruidFeralCharge\",\n    InterruptMageCounterspell: \"InterruptMageCounterspell\",\n    InterruptPaladinHammerOfJustice: \"InterruptPaladinHammerOfJustice\",\n    InterruptPriestSilence: \"InterruptPriestSilence\",\n    InterruptRogueKick: \"InterruptRogueKick\",\n    InterruptShamanEarthShock: \"InterruptShamanEarthShock\",\n    InterruptWarriorPummel: \"InterruptWarriorPummel\",\n    InterruptCheapShot: \"InterruptCheapShot\",\n    InterruptWarlockSpellLock: \"InterruptWarlockSpellLock\",\n    InterruptHunterIntimidate: \"InterruptHunterIntimidate\",\n    InterruptWarstomp: \"InterruptWarstomp\",\n    Cooldowns: \"Cooldowns\",\n    CooldownsRacial: \"CooldownsRacial\",\n    CooldownsAbility: \"CooldownsAbility\",\n    CooldownsItems: \"CooldownsItems\",\n    DamageTakenHit: \"DamageTakenHit\",\n    DamageTakenCrit: \"DamageTakenCrit\",\n    DamageTakenCrushed: \"DamageTakenCrushed\",\n    DamageTakenBlocked: \"DamageTakenBlocked\",\n    DamageTakenMiss: \"DamageTakenMiss\",\n    DamageTakenDodge: \"DamageTakenDodge\",\n    DamageTakenParry: \"DamageTakenParry\",\n};\n\nexport const emptyData = {\n    [DataPoints.Name]: \" \",\n    [DataPoints.Enchants]: \" \",\n    [DataPoints.GemsMissing]: \" \",\n    [DataPoints.GemsCommon]: \" \",\n    [DataPoints.GemsUncommon]: \" \",\n    [DataPoints.GemsRare]: \" \",\n    [DataPoints.GemsEpic]: \" \",\n    [DataPoints.GemsList]: [],\n    [DataPoints.Elixirs]: \" \",\n    [DataPoints.ElixirsFlasks]: [],\n    [DataPoints.ElixirsGuardian]: [],\n    [DataPoints.ElixirsBattle]: [],\n    [DataPoints.ElixirsFood]: [],\n    [DataPoints.ElixirsSeasonal]: [],\n    [DataPoints.ElixirsScrolls]: [],\n    [DataPoints.ElixirsWeaponEnchants]: [],\n    [DataPoints.Deaths]: \" \",\n    [DataPoints.ProtectionPotionsTotal]: \" \",\n    [DataPoints.ProtectionPotionsTotalAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsNature]: \" \",\n    [DataPoints.ProtectionPotionsGreaterNature]: \" \",\n    [DataPoints.ProtectionPotionsMajorNature]: \" \",\n    [DataPoints.ProtectionPotionsNatureAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsFire]: \" \",\n    [DataPoints.ProtectionPotionsGreaterFire]: \" \",\n    [DataPoints.ProtectionPotionsMajorFire]: \" \",\n    [DataPoints.ProtectionPotionsFireAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsFrost]: \" \",\n    [DataPoints.ProtectionPotionsGreaterFrost]: \" \",\n    [DataPoints.ProtectionPotionsMajorFrost]: \" \",\n    [DataPoints.ProtectionPotionsFrostAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsShadow]: \" \",\n    [DataPoints.ProtectionPotionsGreaterShadow]: \" \",\n    [DataPoints.ProtectionPotionsMajorShadow]: \" \",\n    [DataPoints.ProtectionPotionsShadowAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsGreaterArcane]: \" \",\n    [DataPoints.ProtectionPotionsMajorArcane]: \" \",\n    [DataPoints.ProtectionPotionsArcaneAbsorbed]: \" \",\n    [DataPoints.ConsumesPotions]: \" \",\n    [DataPoints.ConsumesDrums]: \" \",\n    [DataPoints.ConsumesGems]: \" \",\n    [DataPoints.ConsumesExplosives]: \" \",\n    [DataPoints.ConsumesBandages]: \" \",\n    [DataPoints.ConsumesManaPots]: \" \",\n    [DataPoints.ConsumesRunes]: \" \",\n    [DataPoints.ConsumesRejuvPots]: \" \",\n    [DataPoints.ConsumesHealthPots]: \" \",\n    [DataPoints.ConsumesHealthStones]: \" \",\n    [DataPoints.ConsumesRagePotions]: \" \",\n    [DataPoints.ConsumesThistleTea]: \" \",\n    [DataPoints.ConsumesRestorationPots]: \" \",\n    [DataPoints.ConsumesElixirOfPoisonResistance]: \" \",\n    [DataPoints.ConsumesFreeActionPotion]: \" \",\n    [DataPoints.ConsumesManaGem]: \" \",\n    [DataPoints.ConsumesNightmareSeed]: \" \",\n    [DataPoints.ConsumesStoneshield]: \" \",\n    [DataPoints.ConsumesOilOfImmolation]: \" \",\n    [DataPoints.ConsumesHeavyRuneclothBandage]: \" \",\n    [DataPoints.ConsumesAntiVenom]: \" \",\n    [DataPoints.ConsumesHolyWater]: \" \",\n    [DataPoints.ConsumesSapperCharge]: \" \",\n    [DataPoints.ConsumesEzThro]: \" \",\n    [DataPoints.ConsumesFelIronBombs]: \" \",\n    [DataPoints.ConsumesDenseDynamite]: \" \",\n    [DataPoints.ConsumesDrumsBattle]: \" \",\n    [DataPoints.ConsumesDrumsRestoration]: \" \",\n    [DataPoints.ConsumesDrumsPanic]: \" \",\n    [DataPoints.ConsumesDrumsWar]: \" \",\n    [DataPoints.ConsumesInsaneStrength]: \" \",\n    [DataPoints.ConsumesShrouding]: \" \",\n    [DataPoints.ConsumesFelRegeneration]: \" \",\n    [DataPoints.ConsumesHeroic]: \" \",\n    [DataPoints.ConsumesDestruction]: \" \",\n    [DataPoints.ConsumesHaste]: \" \",\n    [DataPoints.ConsumesFelMana]: \" \",\n    [DataPoints.ConsumesIronshield]: \" \",\n    [DataPoints.DispelTotal]: \" \",\n    [DataPoints.DispelBoss]: \" \",\n    [DataPoints.DispelTrash]: \" \",\n    [DataPoints.DispelPoison]: \" \",\n    [DataPoints.DispelDisease]: \" \",\n    [DataPoints.DispelCurse]: \" \",\n    [DataPoints.DispelMagic]: \" \",\n    [DataPoints.DispelFrenzy]: \" \",\n    [DataPoints.DispelDruidCurePoison]: \" \",\n    [DataPoints.DispelDruidAbolishPoison]: \" \",\n    [DataPoints.DispelDruidRemoveCurse]: \" \",\n    [DataPoints.DispelHunterTranqShot]: \" \",\n    [DataPoints.DispelMageRemoveLesserCurse]: \" \",\n    [DataPoints.DispelPaladinPurify]: \" \",\n    [DataPoints.DispelPaladinCleanse]: \" \",\n    [DataPoints.DispelPriestDispelMagic]: \" \",\n    [DataPoints.DispelPriestCureDisease]: \" \",\n    [DataPoints.DispelPriestAbolishDisease]: \" \",\n    [DataPoints.DispelShamanPurge]: \" \",\n    [DataPoints.DispelShamanCurePoison]: \" \",\n    [DataPoints.DispelShamanCureDisease]: \" \",\n    [DataPoints.DispelShamanPoisonCleansingTotem]: \" \",\n    [DataPoints.DispelShamanDiseaseCleansingTotem]: \" \",\n    [DataPoints.DispelWarlockDevourMagic]: \" \",\n    [DataPoints.InterruptTotal]: \" \",\n    [DataPoints.InterruptDruidBash]: \" \",\n    [DataPoints.InterruptDruidFeralCharge]: \" \",\n    [DataPoints.InterruptMageCounterspell]: \" \",\n    [DataPoints.InterruptPaladinHammerOfJustice]: \" \",\n    [DataPoints.InterruptPriestSilence]: \" \",\n    [DataPoints.InterruptRogueKick]: \" \",\n    [DataPoints.InterruptShamanEarthShock]: \" \",\n    [DataPoints.InterruptWarriorPummel]: \" \",\n    [DataPoints.InterruptCheapShot]: \" \",\n    [DataPoints.InterruptWarlockSpellLock]: \" \",\n    [DataPoints.InterruptHunterIntimidate]: \" \",\n    [DataPoints.InterruptWarstomp]: \" \",\n    [DataPoints.Cooldowns]: [],\n    [DataPoints.CooldownsRacial]: [],\n    [DataPoints.CooldownsAbility]: [],\n    [DataPoints.CooldownsItems]: [],\n    [DataPoints.DamageTakenHit]: \" \",\n    [DataPoints.DamageTakenCrushed]: \" \",\n    [DataPoints.DamageTakenCrit]: \" \",\n    [DataPoints.DamageTakenBlocked]: \" \",\n    [DataPoints.DamageTakenParry]: \" \",\n    [DataPoints.DamageTakenDodge]: \" \",\n    [DataPoints.DamageTakenMiss]: \" \",\n}\n","import {Component, Children, isValidElement, cloneElement} from \"react\";\nimport {protectionPotionEnum, rarity} from \"../data\";\nimport {battleElixirBuffs, cooldownList, flaskBuffs, foodBuffs, guardianElixirBuffs, scrollBuffs, seasonBuffs, tempWeaponEnchants} from \"../datastore\";\nimport {DataPoints, emptyData} from \"./GridContexts\";\nimport {sumNonNull} from \"../utils\";\n\nexport class GridRow extends Component {\n    constructor(props) {\n        super(props);\n\n        this._logLoader = props.logLoader;\n        let report = this._logLoader.getResults();\n\n        this.state = {\n            id: props.character.id,\n            classType: props.character.type,\n            raidTime: report.endTime - report.startTime,\n            isLoaded: false,\n            error: null,\n            Data: this._flattenCharacterData(null),\n        }\n    }\n\n    componentDidMount() {\n        \n        this._logLoader.loadCharacterDetails(this.state.id)\n        .then((data) => {\n            let character = data.getCharacter(this.state.id, this.props.fightId);\n\n            this.setState({\n                isLoaded: true,\n                Data: this._flattenCharacterData(character),\n            });\n        })\n        .catch((error) => {\n            this.setState({\n                isLoaded: true,\n                error: error\n            })\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.fightId !== prevProps.fightId) {\n            let character = this._logLoader.getCharacter(this.state.id, this.props.fightId);\n\n            this.setState({\n                isLoaded: true,\n                Data: this._flattenCharacterData(character),\n            });\n        }\n    }\n\n    _flattenCharacterData(character) {\n        let characterData = {...emptyData, name: this.props.character.name};\n\n        if (!character) {\n            return characterData;\n        }\n\n        characterData[DataPoints.Name] = character.name;\n        characterData[DataPoints.Deaths] = this._getDeathCount(character);\n\n        characterData[DataPoints.GemsMissing] = this._getMissingGemCount(character);\n        characterData[DataPoints.GemsCommon] = this._getGemCount(character, rarity.Common);\n        characterData[DataPoints.GemsUncommon] = this._getGemCount(character, rarity.Uncommon);\n        characterData[DataPoints.GemsRare] = this._getGemCount(character, rarity.Rare);\n        characterData[DataPoints.GemsEpic] = this._getGemCount(character, rarity.Epic);\n        characterData[DataPoints.GemsList] = this._getGemList(character);\n\n        characterData[DataPoints.ElixirsFood] = this._getBuffs(character, foodBuffs);\n        characterData[DataPoints.ElixirsFlasks] = this._getBuffs(character, flaskBuffs);\n        characterData[DataPoints.ElixirsBattle] = this._getBuffs(character, battleElixirBuffs);\n        characterData[DataPoints.ElixirsGuardian] = this._getBuffs(character, guardianElixirBuffs);\n        characterData[DataPoints.ElixirsSeasonal] = this._getBuffs(character, seasonBuffs);\n        characterData[DataPoints.ElixirsScrolls] = this._getBuffs(character, scrollBuffs);\n        characterData[DataPoints.ElixirsWeaponEnchants] = this._getWeaponImbue(character, tempWeaponEnchants);\n\n        characterData[DataPoints.ProtectionPotionsGreaterArcane] = this._getProtectionPotionCount(character, protectionPotionEnum.GAPP);\n        characterData[DataPoints.ProtectionPotionsMajorArcane] = this._getProtectionPotionCount(character, protectionPotionEnum.MAPP);\n        characterData[DataPoints.ProtectionPotionsArcaneAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GAPP, protectionPotionEnum.MAPP);\n        characterData[DataPoints.ProtectionPotionsFire] = this._getProtectionPotionCount(character, protectionPotionEnum.FPP);\n        characterData[DataPoints.ProtectionPotionsGreaterFire] = this._getProtectionPotionCount(character, protectionPotionEnum.GFPP);\n        characterData[DataPoints.ProtectionPotionsMajorFire] = this._getProtectionPotionCount(character, protectionPotionEnum.MFPP);\n        characterData[DataPoints.ProtectionPotionsFireAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GFPP, protectionPotionEnum.FPP, protectionPotionEnum.MFPP);\n        characterData[DataPoints.ProtectionPotionsFrost] = this._getProtectionPotionCount(character, protectionPotionEnum.FrPP);\n        characterData[DataPoints.ProtectionPotionsGreaterFrost] = this._getProtectionPotionCount(character, protectionPotionEnum.GFrPP);\n        characterData[DataPoints.ProtectionPotionsMajorFrost] = this._getProtectionPotionCount(character, protectionPotionEnum.MFrPP);\n        characterData[DataPoints.ProtectionPotionsFrostAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GFrPP, protectionPotionEnum.FrPP, protectionPotionEnum.MFrPP);\n        characterData[DataPoints.ProtectionPotionsNature] = this._getProtectionPotionCount(character, protectionPotionEnum.NPP);\n        characterData[DataPoints.ProtectionPotionsGreaterNature] = this._getProtectionPotionCount(character, protectionPotionEnum.GNPP);\n        characterData[DataPoints.ProtectionPotionsMajorNature] = this._getProtectionPotionCount(character, protectionPotionEnum.MNPP);\n        characterData[DataPoints.ProtectionPotionsNatureAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GNPP, protectionPotionEnum.NPP, protectionPotionEnum.MNPP);\n        characterData[DataPoints.ProtectionPotionsShadow] = this._getProtectionPotionCount(character, protectionPotionEnum.SPP);\n        characterData[DataPoints.ProtectionPotionsGreaterShadow] = this._getProtectionPotionCount(character, protectionPotionEnum.GSPP);\n        characterData[DataPoints.ProtectionPotionsMajorShadow] = this._getProtectionPotionCount(character, protectionPotionEnum.MSPP);\n        characterData[DataPoints.ProtectionPotionsShadowAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GSPP, protectionPotionEnum.SPP, protectionPotionEnum.MSPP);\n\n        characterData[DataPoints.ProtectionPotionsTotal] = sumNonNull(characterData[DataPoints.ProtectionPotionsGreaterArcane],\n            characterData[DataPoints.ProtectionPotionsMajorArcane],\n            characterData[DataPoints.ProtectionPotionsFire],\n            characterData[DataPoints.ProtectionPotionsGreaterFire],\n            characterData[DataPoints.ProtectionPotionsMajorFire],\n            characterData[DataPoints.ProtectionPotionsFrost],\n            characterData[DataPoints.ProtectionPotionsGreaterFrost],\n            characterData[DataPoints.ProtectionPotionsMajorFrost],\n            characterData[DataPoints.ProtectionPotionsNature],\n            characterData[DataPoints.ProtectionPotionsGreaterNature],\n            characterData[DataPoints.ProtectionPotionsMajorNature],\n            characterData[DataPoints.ProtectionPotionsShadow],\n            characterData[DataPoints.ProtectionPotionsGreaterShadow],\n            characterData[DataPoints.ProtectionPotionsMajorShadow]);\n\n        characterData[DataPoints.ProtectionPotionsTotalAbsorbed] = sumNonNull(characterData[DataPoints.ProtectionPotionsArcaneAbsorbed],\n            characterData[DataPoints.ProtectionPotionsFireAbsorbed],\n            characterData[DataPoints.ProtectionPotionsFrostAbsorbed],\n            characterData[DataPoints.ProtectionPotionsNatureAbsorbed],\n            characterData[DataPoints.ProtectionPotionsShadowAbsorbed]);\n\n        characterData[DataPoints.ConsumesManaPots] = this._getCastCount(character, 17531, 28499, 41618, 41617);\n        characterData[DataPoints.ConsumesRejuvPots] = this._getCastCount(character, 22729, 28517, 45051);\n        characterData[DataPoints.ConsumesHealthPots] = this._getCastCount(character, 17534, 28495, 41620, 41619);\n        characterData[DataPoints.ConsumesFreeActionPotion] = this._getCastCount(character, 6615, 24364);\n        characterData[DataPoints.ConsumesRestorationPots] = this._getCastCount(character, 11359, 17550);\n        characterData[DataPoints.ConsumesRagePotions] = this._getCastCount(character, 6613, 17528);\n        characterData[DataPoints.ConsumesStoneshield] = this._getCastCount(character, 17540);\n        characterData[DataPoints.ConsumesInsaneStrength] = this._getCastCount(character, 28494);\n        characterData[DataPoints.ConsumesShrouding] = this._getCastCount(character, 28548);\n        characterData[DataPoints.ConsumesFelRegeneration] = this._getCastCount(character, 38908);\n        characterData[DataPoints.ConsumesHeroic] = this._getCastCount(character, 28506);\n        characterData[DataPoints.ConsumesDestruction] = this._getCastCount(character, 28508); // Check for buff on combat start\n        characterData[DataPoints.ConsumesHaste] = this._getCastCount(character, 28507); // Check for buff on combat start\n        characterData[DataPoints.ConsumesFelMana] = this._getCastCount(character, 38929);\n        characterData[DataPoints.ConsumesIronshield] = this._getCastCount(character, 17540, 28515);\n\n        characterData[DataPoints.ConsumesRunes] = this._getCastCount(character, 16666, 27869);\n        characterData[DataPoints.ConsumesHealthStones] = this._getCastCount(character, 27235, 27236, 27237);\n        characterData[DataPoints.ConsumesWhipperRootTuber] = this._getCastCount(character, 15700);\n        characterData[DataPoints.ConsumesThistleTea] = this._getCastCount(character, 9512);\n        characterData[DataPoints.ConsumesManaGem] = this._getCastCount(character, 10058, 10057, 10052, 5405, 27103);\n        characterData[DataPoints.ConsumesNightmareSeed] = this._getCastCount(character, 28726);\n\n        characterData[DataPoints.ConsumesDrumsBattle] = this._getCastCount(character, 35476, 351355);\n        characterData[DataPoints.ConsumesDrumsWar] = this._getCastCount(character, 35475, 351360);\n        characterData[DataPoints.ConsumesDrumsRestoration] = this._getCastCount(character, 35478, 351358);\n        characterData[DataPoints.ConsumesDrumsPanic] = this._getCastCount(character, 35474, 351357);\n\n        characterData[DataPoints.ConsumesHolyWater] = this._getCastCount(character, 17291);\n        characterData[DataPoints.ConsumesSapperCharge] = this._getCastCount(character, 13241, 30486);\n        characterData[DataPoints.ConsumesDenseDynamite] = this._getCastCount(character, 23063);\n        characterData[DataPoints.ConsumesEzThro] = this._getCastCount(character, 23000);\n        characterData[DataPoints.ConsumesFelIronBombs] = this._getCastCount(character, 30216);\n\n        characterData[DataPoints.ConsumesHeavyRuneclothBandage] = this._getCastCount(character, 18610, 27030, 27031);\n        characterData[DataPoints.ConsumesAntiVenom] = this._getCastCount(character, 23786);\n\n        characterData[DataPoints.ConsumesPotions] = sumNonNull(characterData[DataPoints.ConsumesManaPots],\n            characterData[DataPoints.ConsumesRejuvPots],\n            characterData[DataPoints.ConsumesHealthPots],\n            characterData[DataPoints.ConsumesFreeActionPotion],\n            characterData[DataPoints.ConsumesRestorationPots],\n            characterData[DataPoints.ConsumesRagePotions],\n            characterData[DataPoints.ConsumesInsaneStrength],\n            characterData[DataPoints.ConsumesShrouding],\n            characterData[DataPoints.ConsumesFelRegeneration],\n            characterData[DataPoints.ConsumesHeroic],\n            characterData[DataPoints.ConsumesDestruction],\n            characterData[DataPoints.ConsumesHaste],\n            characterData[DataPoints.ConsumesFelMana],\n            characterData[DataPoints.ConsumesIronshield]);\n\n        characterData[DataPoints.ConsumesGems] = sumNonNull(characterData[DataPoints.ConsumesRunes],\n            characterData[DataPoints.ConsumesHealthStones],\n            characterData[DataPoints.ConsumesWhipperRootTuber],\n            characterData[DataPoints.ConsumesThistleTea],\n            characterData[DataPoints.ConsumesManaGem],\n            characterData[DataPoints.ConsumesNightmareSeed]);\n\n        characterData[DataPoints.ConsumesDrums] = sumNonNull(characterData[DataPoints.ConsumesDrumsBattle],\n            characterData[DataPoints.ConsumesDrumsWar],\n            characterData[DataPoints.ConsumesDrumsRestoration],\n            characterData[DataPoints.ConsumesDrumsPanic]);\n\n        characterData[DataPoints.ConsumesExplosives] = sumNonNull(characterData[DataPoints.ConsumesHolyWater],\n            characterData[DataPoints.ConsumesSapperCharge],\n            characterData[DataPoints.ConsumesDenseDynamite],\n            characterData[DataPoints.ConsumesFelIronBombs],\n            characterData[DataPoints.ConsumesEzThro]);\n\n        characterData[DataPoints.ConsumesBandages] = sumNonNull(characterData[DataPoints.ConsumesHeavyRuneclothBandage],\n            characterData[DataPoints.ConsumesAntiVenom]);\n\n        characterData[DataPoints.DispelDruidCurePoison] = this._getCastCount(character, 8946);\n        characterData[DataPoints.DispelDruidAbolishPoison] = this._getCastCount(character, 2893);\n        characterData[DataPoints.DispelDruidRemoveCurse] = this._getCastCount(character, 2782);\n        characterData[DataPoints.DispelHunterTranqShot] = this._getCastCount(character, 19801);\n        characterData[DataPoints.DispelMageRemoveLesserCurse] = this._getCastCount(character, 475);\n        characterData[DataPoints.DispelPaladinPurify] = this._getCastCount(character, 1152);\n        characterData[DataPoints.DispelPaladinCleanse] = this._getCastCount(character, 4987);\n        characterData[DataPoints.DispelPriestDispelMagic] = this._getCastCount(character, 988, 527);\n        characterData[DataPoints.DispelPriestCureDisease] = this._getCastCount(character, 528);\n        characterData[DataPoints.DispelPriestAbolishDisease] = this._getCastCount(character, 552);\n        characterData[DataPoints.DispelShamanPurge] = this._getCastCount(character, 8012, 370);\n        characterData[DataPoints.DispelShamanCurePoison] = this._getCastCount(character, 526);\n        characterData[DataPoints.DispelShamanCureDisease] = this._getCastCount(character, 2870);\n        characterData[DataPoints.DispelShamanPoisonCleansingTotem] = this._getCastCount(character, 8166);\n        characterData[DataPoints.DispelShamanDiseaseCleansingTotem] = this._getCastCount(character, 8170);\n        characterData[DataPoints.DispelWarlockDevourMagic] = this._getCastCount(character, 19505, 19731, 19734, 19736, 27276, 27277);\n\n        characterData[DataPoints.DispelPoison] = sumNonNull(characterData[DataPoints.DispelDruidCurePoison],\n            characterData[DataPoints.DispelDruidAbolishPoison],\n            characterData[DataPoints.DispelShamanCurePoison],\n            characterData[DataPoints.DispelShamanPoisonCleansingTotem]);\n\n        characterData[DataPoints.DispelDisease] = sumNonNull(characterData[DataPoints.DispelPriestCureDisease],\n            characterData[DataPoints.DispelPriestAbolishDisease],\n            characterData[DataPoints.DispelShamanCureDisease],\n            characterData[DataPoints.DispelShamanDiseaseCleansingTotem]);\n\n        characterData[DataPoints.DispelCurse] = sumNonNull(characterData[DataPoints.DispelDruidRemoveCurse],\n            characterData[DataPoints.DispelMageRemoveLesserCurse]);\n\n        characterData[DataPoints.DispelMagic] = sumNonNull(characterData[DataPoints.DispelPriestDispelMagic],\n            characterData[DataPoints.DispelShamanPurge],\n            characterData[DataPoints.DispelPaladinCleanse],\n            characterData[DataPoints.DispelWarlockDevourMagic]);\n\n        characterData[DataPoints.DispelFrenzy] = sumNonNull(characterData[DataPoints.DispelHunterTranqShot]);\n\n        characterData[DataPoints.DispelBoss] = this._getBossCastCount(character, 8946, 2893, 2782, 19801, 475, 1152, 4987, 988, 527, 528, 552, 8012, 370, 526, 2870, 8166, 8170, 19505, 19731, 19734, 19736, 27276, 27277);\n        characterData[DataPoints.DispelTrash] = this._getTrashCastCount(character, 8946, 2893, 2782, 19801, 475, 1152, 4987, 988, 527, 528, 552, 8012, 370, 526, 2870, 8166, 8170, 19505, 19731, 19734, 19736, 27276, 27277);\n\n        characterData[DataPoints.DispelTotal] = sumNonNull(characterData[DataPoints.DispelPoison],\n            characterData[DataPoints.DispelDisease],\n            characterData[DataPoints.DispelCurse],\n            characterData[DataPoints.DispelMagic],\n            characterData[DataPoints.DispelFrenzy]);\n\n        characterData[DataPoints.InterruptDruidBash] = this._getInterruptCount(character, 8983);\n        characterData[DataPoints.InterruptDruidFeralCharge] = this._getInterruptCount(character, 19675);\n        characterData[DataPoints.InterruptMageCounterspell] = this._getInterruptCount(character, 2139);\n        characterData[DataPoints.InterruptPaladinHammerOfJustice] = this._getInterruptCount(character, 10308);\n        characterData[DataPoints.InterruptPriestSilence] = this._getInterruptCount(character, 15487);\n        characterData[DataPoints.InterruptRogueKick] = this._getInterruptCount(character, 1769, 1768, 1767, 1766, 38768);\n        characterData[DataPoints.InterruptCheapShot] = this._getInterruptCount(character, 1833);\n        characterData[DataPoints.InterruptShamanEarthShock] = this._getInterruptCount(character, 10414, 8042, 8044, 8045, 8046, 10412, 10413, 25454);\n        characterData[DataPoints.InterruptWarriorPummel] = this._getInterruptCount(character, 6552, 6554);\n        characterData[DataPoints.InterruptWarlockSpellLock] = this._getInterruptCount(character, 19647);\n        characterData[DataPoints.InterruptHunterIntimidate] = this._getInterruptCount(character, 24394);\n        characterData[DataPoints.InterruptWarstomp] = this._getInterruptCount(character, 20549);\n\n        characterData[DataPoints.InterruptTotal] = sumNonNull(characterData[DataPoints.InterruptDruidBash],\n            characterData[DataPoints.InterruptDruidFeralCharge],\n            characterData[DataPoints.InterruptMageCounterspell],\n            characterData[DataPoints.InterruptPaladinHammerOfJustice],\n            characterData[DataPoints.InterruptPriestSilence],\n            characterData[DataPoints.InterruptRogueKick],\n            characterData[DataPoints.InterruptCheapShot],\n            characterData[DataPoints.InterruptShamanEarthShock],\n            characterData[DataPoints.InterruptWarlockSpellLock],\n            characterData[DataPoints.InterruptHunterIntimidate],\n            characterData[DataPoints.InterruptWarstomp],\n            characterData[DataPoints.InterruptWarriorPummel]);\n\n        characterData[DataPoints.Cooldowns] = this._getCooldownList(character);\n        characterData[DataPoints.CooldownsRacial] = this._getCooldownList(character, \"Racial\");\n        characterData[DataPoints.CooldownsAbility] = this._getCooldownList(character, \"Ability\");\n        characterData[DataPoints.CooldownsItems] = this._getCooldownList(character, \"Trinket\");\n\n        this._getTankStats(character, characterData);\n        \n        this.props.onDataUpdate(characterData);\n\n        return characterData;\n    }\n\n    _getBuffs(character, options) {\n        const {buffs} = character;\n\n        if (!buffs) {\n            return [];\n        }\n\n        let activeBuffs = [];\n        for (let i = 0; i < options.length; ++i) {\n            if (buffs[options[i].id]) {\n                activeBuffs.push(options[i]);\n            }\n        }\n\n        return activeBuffs;\n    }\n\n    _getWeaponImbue(character, options) {\n        const {weaponEnchant, offhandEnchant} = character;\n\n        if (!weaponEnchant) {\n            return [];\n        }\n\n        let activeBuffs = [];\n        for (let i = 0; i < options.length; ++i) {\n            if (weaponEnchant.id === options[i].id) {\n                activeBuffs.push(options[i]);\n            }\n            if (offhandEnchant.id === options[i].id) {\n                activeBuffs.push({...options[i], name: options[i].name + ' (OH)'});\n            }\n            \n        }\n\n        return activeBuffs;\n    }\n\n    _getMissingGemCount(character) {\n        const {gems} = character;\n\n        if (!gems) {\n            return null;\n        }\n\n        return gems[0].count;\n    }\n\n    _getGemCount(character, rarity) {\n        const {gems} = character;\n\n        if (!gems) {\n            return null;\n        }\n\n        let gemList = Object.values(gems);\n\n        return gemList.reduce((gemCount, gem) => {\n\n            if (gem.rarity === rarity) {\n                gemCount += gem.count;\n            }\n\n            return gemCount;\n        }, 0)\n\n    }\n\n    _getGemList(character) {\n        const {gems} = character;\n\n        if (!gems) {\n            return [];\n        }\n\n        let gemList = Object.values(gems).filter(x => x.id !== 0);\n\n        return gemList.reduce((gemIcons, gem) => {\n\n            gemIcons.push({\n                id: gem.id,\n                itemId: gem.id,\n                name: gem.count + \" x \" + gem.label + \" (\" + gem.description + \")\",\n                icon: gem.icon,\n                count: gem.count,\n            })\n\n            return gemIcons;\n        }, []);\n    }\n\n    _getCooldownList(character, type = null) {\n        const {casts} = character;\n\n        if (!casts) {\n            return [];\n        }\n\n        let cooldowns = casts.reduce((cds, cast) => {\n            let cooldownInfo = cooldownList[cast.ability.guid];\n            if (cooldownInfo && (type == null || type === cooldownInfo.type)) {\n                if (cds[cast.ability.guid]) {\n                    cds[cast.ability.guid].count++;\n                }\n                else {\n                    cds[cast.ability.guid] = {\n                        id: cast.ability.guid,\n                        itemId: cooldownInfo.itemId,\n                        spellId: cast.ability.guid,\n                        name: cooldownInfo.name,\n                        icon: cooldownInfo.icon,\n                        count: 1\n                    }\n                }\n            }\n\n            return cds;\n        }, {});\n\n        return Object.values(cooldowns);\n    }\n\n    _getProtectionPotionCount(character, spellId) {\n        const {casts, protectionPotions, fights} = character;\n\n        let count = 0;\n        let countByFight = {};\n\n        if (casts) {\n            for (let i = 0; i < casts.length; ++i) {\n                let cast = casts[i];\n                if (cast.ability.guid === spellId) {\n                    if (!countByFight[cast.fight]) {\n                        countByFight[cast.fight] = {\n                            count: 1,\n                            firstCast: cast.timestamp,\n                        };\n                    }\n                    else {\n                        countByFight[cast.fight].count++;\n                    }\n                }\n            }\n        }\n\n        if (fights) {\n            for (let i = 0; i < fights.length; ++i) {\n                let fight = fights[i];\n                let protectionPotion = protectionPotions[spellId] || null;\n\n                if (countByFight[fight.id]) {\n                    count += countByFight[fight.id].count;\n\n                    if (protectionPotion !== null && protectionPotion.firstAbsorb[fight.id]) {\n                        if (protectionPotion.firstAbsorb[fight.id] < countByFight[fight.id].firstCast) {\n                            count++;\n                        }\n                    }\n                }\n                else {\n                    if (protectionPotion !== null && protectionPotion.firstAbsorb[fight.id]) {\n                        count++;\n                    }\n                }\n            }\n        }\n\n        return count;\n    }\n\n    _getProtectionPotionAbsorb(character, spellId1, spellId2) {\n        const {protectionPotions} = character;\n\n        let absorbed = 0;\n\n        absorbed += (protectionPotions[spellId1]?.amount || 0);\n        absorbed += (protectionPotions[spellId2]?.amount || 0);\n\n        return absorbed;\n    }\n\n    _getDeathCount(character) {\n        const {deaths} = character;\n\n        return deaths?.length;\n    }\n\n    _getBossCastCount(character, ...spellIds) {\n        return this._getRestrictedCastCount(character, \"boss\", spellIds);\n    }\n\n    _getTrashCastCount(character, ...spellIds) {\n        return this._getRestrictedCastCount(character, \"trash\", spellIds);\n    }\n\n    _getInterruptCount(character, ...spellIds) {\n        const {interrupts} = character;\n\n        if (!interrupts) {\n            return 0;\n        }\n\n        let castCount = 0;\n        for (let i = 0; i < interrupts.length; ++i) {\n            let cast = interrupts[i];\n            if (spellIds.includes(cast.ability.guid)) {\n                castCount++;\n            }\n        }\n\n        return castCount;\n    }\n\n    _getRestrictedCastCount(character, fightType, spellIds) {\n        const {casts} = character;\n\n        if (!casts) {\n            return 0;\n        }\n\n        let castCount = 0;\n        for (let i = 0; i < casts.length; ++i) {\n            let cast = casts[i];\n            if ((fightType == null || cast.fightType === fightType) && cast.type === \"cast\" && spellIds.includes(cast.ability.guid)) {\n                castCount++;\n            }\n        }\n\n        return castCount;\n    }\n\n    _getCastCount(character, ...spellIds) {\n        return this._getRestrictedCastCount(character, null, spellIds);\n    }\n\n    _getDamageDone(character, ...spellIds) {\n        const {damageTaken} = character;\n\n        let damageTakenArray = Object.values(damageTaken);\n\n        let damageAmount = 0;\n        for (let i = 0; i < damageTakenArray.length; ++i) {\n            let damage = damageTakenArray[i];\n            if (spellIds.includes(damage.guid)) {\n                damageAmount += damage.total;\n            }\n        }\n\n        return damageAmount;\n    }\n\n    _addIfNotNull(characterData, properyName, propertyLabel, table) {\n        if (characterData[properyName]) {\n            table.push({name: propertyLabel, value: characterData[properyName]});\n        }\n    }\n    _getDamageTakenTable(characterData) {\n        let damageTakenTable = [];\n\n        this._addIfNotNull(characterData, DataPoints.DamageWhirlwind, \"Whirlwind\", damageTakenTable);\n\n        this._addIfNotNull(characterData, DataPoints.DamageRainOfFire, \"Rain of Fire\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFireShield, \"Fire Shield\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFlames, \"Flames\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageCleave, \"Cleave\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageBlizzard, \"Blizzard\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageExplode, \"Explode\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageImpale, \"Impale\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageBomb, \"Bomb\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageThunderclap, \"Thunderclap\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageShadowStorm, \"Shadow Storm\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageDarkGlare, \"Dark Glare\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFalling, \"Falling\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageVoidZone, \"Void Zone\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamagePoisonCloud, \"Poison Cloud\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFrostBreath, \"Frost Breath\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageEruption, \"Eruption\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageBroodPowerBronze, \"Brood Power Bronze\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageVoidBlast, \"Void Blast\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageTailSweep, \"Tail Sweep\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamagePositiveCharge, \"Positive Charge\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageNegativeCharge, \"Negative Charge\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageDisruptingShout, \"Disrupting Shout\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageChill, \"Chill\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageDarkBlast, \"Dark Blast\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageWailOfSouls, \"wail of Souls\", damageTakenTable);\n\n        return damageTakenTable;\n    }\n\n    _getTankStats(character, characterData) {\n        let meleeDamage = [];\n        Object.values(character.damageTaken).forEach(value => {\n            if (value.length > 0 && value[0].ability.type === 1) {\n                meleeDamage = [...meleeDamage,...value];\n            }\n        });\n        if (meleeDamage.length === 0)\n            return;\n\n        let totalHits = meleeDamage.length;\n        const hitMap = {\n            \"0\": DataPoints.DamageTakenMiss,\n            \"1\": DataPoints.DamageTakenHit,\n            \"2\": DataPoints.DamageTakenCrit,\n            \"4\": DataPoints.DamageTakenBlocked,\n            \"7\": DataPoints.DamageTakenDodge,\n            \"8\": DataPoints.DamageTakenParry,\n            \"15\": DataPoints.DamageTakenCrushed,\n        };\n\n        let breakdown = meleeDamage.reduce((accum, obj) => {\n            let hitType = obj.hitType.toString();\n            if (!accum[hitType]) {\n                accum[hitType] = {\n                    type: hitType,\n                    count: 1,\n                }\n            }\n            else {\n                accum[hitType].count += 1;\n            }\n\n            return accum;\n        }, {})\n\n        Object.values(breakdown).forEach(hit => {\n            let hitType = hitMap[hit.type];\n            if (!hitType)\n                return;\n\n            characterData[hitType] = hit.count / totalHits;\n        });\n    }\n\n    render() {\n        const {Data, isLoaded, error, classType} = this.state;\n        const {children, row, context} = this.props;\n\n        return (\n            <tr className={classType + \" character \" + (row % 2 === 0 ? \"even\" : \"odd\") + (!isLoaded ? \" loading\": \"\") + (error ? \" error\" : \"\")}>\n                {Children.map(children, child => {\n                    // checking isValidElement is the safe way and avoids a typescript error too\n                    if (isValidElement(child)) {\n                        return cloneElement(child, { data: Data, context: context, render: (x) => x.renderCell(), renderType: \"cell\" });\n                    }\n                    return child;\n                })}\n            </tr>\n        );\n    }\n}","import {Component, Children, isValidElement, cloneElement} from \"react\";\nimport {DataPoints, emptyData, GroupKeys} from \"./GridContexts\";\nimport {GridRow} from \"./GridRow\";\n\nexport class Grid extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: {\n                [GroupKeys.Gems]: true,\n                [GroupKeys.ProtPotions]: true,\n                [GroupKeys.Consumes]: true,\n                [GroupKeys.DispelsInterrupts]: true,\n            },\n            summaryRow: {...emptyData, [DataPoints.Name]: \"Totals\"},\n        }\n\n        this._logLoader = props.logLoader;\n\n        this.handleColGroupToggle = this.handleColGroupToggle.bind(this);\n        this.handleDataUpdate = this.handleDataUpdate.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.data !== nextProps.data) {\n            return true;\n        }\n\n        if (this.props.classFilter !== nextProps.classFilter) {\n            return true;\n        }\n\n        if (this.props.roleFilter !== nextProps.roleFilter) {\n            return true;\n        }\n\n        if (this.props.fightId !== nextProps.fightId) {\n            return true;\n        }\n\n        if (this.state.collapsed !== nextState.collapsed) {\n            return true;\n        }\n\n        if (this.state.summaryRow !== nextState.summaryRow) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleColGroupToggle(colGroup) {\n        this.setState((state) => ({\n            collapsed: {...state.collapsed, [colGroup]: (state.collapsed[colGroup] ? !state.collapsed[colGroup] : true)}\n        }));\n    }\n\n    handleDataUpdate(character) {\n        const {children} = this.props;\n        let {summaryRow} = this.state;\n\n        Children.forEach(children, colGroup => {\n            if (!isValidElement(colGroup)) {\n                return;\n            }\n\n            Children.forEach(colGroup.props.children, column => {\n                if (!isValidElement(column)) {\n                    return;\n                }\n\n                if (column.props.aggregate === true && column.props.field) {\n                    const field = column.props.field;\n                    summaryRow[field] = (summaryRow[field] === ' ' ? 0 : summaryRow[field]) + character[field];\n                }\n            });\n        });\n\n        this.setState({summaryRow: {...summaryRow}});\n    }\n\n    render() {\n        const {data, children, fightId, classFilter, roleFilter} = this.props;\n        const {collapsed, summaryRow} = this.state;\n\n        let ctx = {collapsed: collapsed, classFilter: classFilter, roleFilter: roleFilter};\n\n        return (\n        <table className=\"grid_table\">\n            <thead>\n                <tr className=\"grid_header\">\n                    {Children.map(children, child => {\n                        // checking isValidElement is the safe way and avoids a typescript error too\n                        if (isValidElement(child)) {\n                            return cloneElement(child, { render: (x) => x.renderHeader(), renderType: \"header\", context: ctx, onColGroupToggle: this.handleColGroupToggle });\n                        }\n                        return child;\n                    })}\n                </tr>\n                <tr className=\"grid_subheader\">\n                {Children.map(children, child => {\n                        // checking isValidElement is the safe way and avoids a typescript error too\n                        if (isValidElement(child)) {\n                            return cloneElement(child, { render: (x) => x.renderSubHeader(), renderType: \"sub-header\", context: ctx });\n                        }\n                        return child;\n                    })}\n                </tr>\n            </thead>\n            <tbody>\n                {data.map((obj, idx) => (\n                <GridRow key={obj.id} character={obj} row={idx} logLoader={this._logLoader} context={ctx} fightId={fightId} onDataUpdate={this.handleDataUpdate}>\n                    {children}\n                </GridRow>\n                ))}\n    \n            </tbody>\n            <tfoot>\n                <tr className=\"Summary\">\n                    {Children.map(children, child => {\n                        if (isValidElement(child)) {\n                            return cloneElement(child, { render: (x) => x.renderCell(), renderType: \"cell\", data: summaryRow, context: ctx })\n                        }\n                    })}\n                </tr>\n            </tfoot>\n        </table>\n        );\n    }\n}","export function ExpandCollapseButton(props) {\n    function handleToggle() {\n        props.onToggle();\n    }\n\n    return (\n        <span className=\"expand_toggle\" onClick={handleToggle}>{props.expanded ? \" ‹‹\" : \" ››\"}</span>\n    )\n}","import {Component, Children, cloneElement, isValidElement} from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { ExpandCollapseButton } from \"./ExpandCollapseButton\";\n\nexport class GridColumnGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            collapsed: props.context?.collapsed[props.id] || false,\n/*             classFilter: props.context?.classFilter,\n            roleFilter: props.context?.roleFilter, */\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        // If data changed and we render cells\n        if (this.props.renderType === \"cell\" && nextProps.data !== this.props.data) {\n            return true;\n        }\n\n        // If class filter or role filter changed\n        if (this.props.context?.classFilter !== nextProps.context?.classFilter ||\n            this.props.context?.roleFilter !== nextProps.context?.roleFilter) {\n                return true;\n            }\n\n        // If collapsed changed for us\n        if (this.props.context?.collapsed[this.props.id] !== nextProps.context?.collapsed[this.props.id]) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.context?.collapsed[this.props.id] !== prevProps.context?.collapsed[this.props.id]\n            /* || this.props.context?.classFilter !== prevProps.context?.classFilter\n            || this.props.context?.roleFilter !== prevProps.context?.roleFilter*/)  {\n          this.setState({\n              collapsed: this.props.context?.collapsed[this.props.id] || false,\n              /* classFilter: this.props.context?.classFilter,\n              roleFilter: this.props.context?.roleFilter, */\n          })\n        }\n\n        ReactTooltip.rebuild();\n    }\n\n    componentDidMount() {\n        ReactTooltip.rebuild();\n    }\n\n    _getVisibleChildCount() {\n        const {children} = this.props;\n        let ctx =  this._getContext();\n\n        let visibleCount = 0;\n        Children.forEach(children, (child) => {\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(ctx);\n                    if (isVisible) {\n                        visibleCount++;\n                    }\n                }\n                else {\n                    visibleCount++;\n                }\n            }\n        })\n\n        return visibleCount;\n    }\n\n    _getChildCount() {\n        const {children} = this.props;\n\n        let visibleCount = 0;\n        Children.forEach(children, (child) => {\n            if (isValidElement(child)) {\n                visibleCount++;\n            }\n        })\n\n        return visibleCount;\n    }\n\n    _canExpand() {\n        return this._getChildCount() > 1;\n    }\n\n    _getContext() {\n        const {id, context} = this.props;\n\n        return {\n            collapsed: context?.collapsed[id] || false,\n            classFilter: context?.classFilter,\n            roleFilter: context?.roleFilter,\n        };\n    }\n\n    renderHeader() {\n        const {id, label, onColGroupToggle, cssClass} = this.props;\n        const {collapsed} = this.state;\n\n        let visibleChildren = this._getVisibleChildCount();\n\n        if (visibleChildren === 0) {\n            return null;\n        }\n\n        return <th className={cssClass + ' ' + id} colSpan={visibleChildren}>{label}{this._canExpand() && <ExpandCollapseButton expanded={!collapsed} onToggle={() => onColGroupToggle(id)} />}</th>;\n    }\n\n    renderSubHeader() {\n        const {children, cssClass} = this.props;\n        let ctx =  this._getContext();\n\n        return Children.map(children, child => {\n            // checking isValidElement is the safe way and avoids a typescript error too\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(ctx);\n                    if (!isVisible) {\n                        return null;\n                    }\n                }\n                return cloneElement(child, { context: ctx, render: (x) => x.renderSubHeader(), renderType: \"sub-header\", cssClass: child.props.cssClass + ' ' + cssClass});\n            }\n            return child;\n        })\n    }\n\n    renderCell() {\n        const {children, data} = this.props;\n        let ctx =  this._getContext();\n\n        return Children.map(children, child => {\n            // checking isValidElement is the safe way and avoids a typescript error too\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(ctx);\n                    if (!isVisible) {\n                        return null;\n                    }\n                }\n                return cloneElement(child, { data: data, context: ctx, render: (x) => x.renderCell(), renderType: \"cell\" });\n            }\n            return child;\n        })\n    }\n\n    render() {\n\n        return this.props.render(this);\n    }\n}","import {Component} from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { asPercentage } from \"../utils\";\n\nexport class GridColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        }\n    }\n\n    _cleanupValue(value) {\n        const {format} = this.props;\n\n        if (!value) {\n            return ' ';\n        }\n\n        if (isNaN(value)) {\n            return value;\n        }\n\n        if (value === 0) {\n            return ' ';\n        }\n\n        if (format === \"%\") {\n            return asPercentage(value, 0);\n        }\n\n        return value;\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <th className={cssClass}>{label}</th>;\n    }\n\n    renderCell() {\n        const {data, field, tooltipField, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        if (tooltipField == null) {\n            return <td className={cssClass}>{this._cleanupValue(data[field])}</td>;\n        }\n\n        //let tooltip = data[tooltipField];\n\n        return (\n        <td className={cssClass}>\n            <div data-tip>{this._cleanupValue(data[field])}</div>\n            {tooltipField && <ReactTooltip>\n                    <table>\n                    </table>\n                </ReactTooltip>}\n        </td>)\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import {Component} from \"react\";\nimport {asPercentage} from \"../utils\";\n\nexport class GridIconColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        };\n    }\n\n    _cleanupValue(value) {\n        const {format} = this.props;\n\n        if (!value) {\n            return ' ';\n        }\n\n        if (isNaN(value)) {\n            return value;\n        }\n\n        if (value === 0) {\n            return ' ';\n        }\n\n        if (format === \"%\") {\n            return asPercentage(value, 0);\n        }\n\n        return value;\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass, icon_name, icon_url, item_id, spell_id} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        let icon = icon_url;\n        if (icon == null) {\n            icon = \"https://assets.rpglogs.com/img/warcraft/abilities/\" + icon_name;\n        }\n\n        let cellContent = <img className=\"spell_icon\" src={icon} alt={label} data-tip={item_id || spell_id ? null : label} />\n        if (item_id) {\n            cellContent = <a href={\"https://tbc.wowhead.com/item=\" + item_id} target=\"_blank\" rel=\"noreferrer\">{cellContent}</a>\n        }\n\n        if (spell_id) {\n            cellContent = <a href={\"https://tbc.wowhead.com/spell=\" + spell_id} target=\"_blank\" rel=\"noreferrer\">{cellContent}</a>\n        }\n\n        return (\n        <th className={cssClass}>\n            {cellContent}\n        </th>);\n    }\n\n    renderCell() {\n        const {data, field, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <td className={cssClass}>{this._cleanupValue(data[field])}</td>\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import {Component, Children, isValidElement, cloneElement} from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport class GridBarColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        }\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <th className={cssClass}>{label}</th>;\n    }\n\n    renderCell() {\n        const {children, data, width} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        let childObjects = Children.map(children, child => {\n            // checking isValidElement is the safe way and avoids a typescript error too\n            if (isValidElement(child)) {\n                return cloneElement(child, { data: data, context: this.state });\n            }\n            return child;\n        })\n\n        return (\n            <td width={width}>\n                <div className=\"grid-bar-column\">\n                { childObjects }\n                </div>\n                <ReactTooltip />\n            </td>\n        )\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}\n\nexport class GridBarColumnSection extends Component {\n    render() {\n        const {data, field, cssClass, label} = this.props;\n\n        if (data[field] === \" \")\n            return null;\n\n        return <div style={{width: (data[field] * 100) + \"%\"}} className={cssClass} data-tip={label}>&nbsp;</div>\n    }\n}","import {Component} from \"react\";\n\nexport class GridIconListColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        };\n    }\n\n    _cleanupValue(value) {\n        if (!value) {\n            return ' ';\n        }\n\n        if (!Array.isArray(value)) {\n            return ' ';\n        }\n\n        return (\n            <>\n            { value.map(x => (\n                <a href={\"https://tbc.wowhead.com/\" + (x.itemId ? \"item=\" + x.itemId : (x.spellId ? \"spell=\" + x.spellId : \"\"))} target=\"_blank\" rel=\"noreferrer\"><span key={x.name} className=\"icon_count\" data-count={x.count}><img className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + x.icon} alt={x.name} /></span></a>\n            ))}\n            </>\n        );\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass, icon_name, icon_url} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        let icon = icon_url;\n        if (icon == null && icon_name) {\n            icon = \"https://assets.rpglogs.com/img/warcraft/abilities/\" + icon_name;\n        }\n\n        let header = label;\n\n        if (icon) {\n            header = (<img className=\"spell_icon\" src={icon} alt={label} data-tip={label} />);\n        }\n\n        return (\n        <th className={cssClass}>{header}</th>);\n    }\n\n    renderCell() {\n        const {data, field, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <td className={cssClass}>{this._cleanupValue(data[field])}</td>\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import { useParams } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport { bosses } from \"../datastore\"\nimport {msToTime} from \"../utils\"\n\nfunction getPercentageBar(fight) {\n    if (fight.kill) {\n        return <div className={\"boss_percentage kill\"}></div>\n    }\n    \n    return <div className={\"boss_percentage wipe\"} style={{ width: (fight.fightPercentage/100).toString() + \"%\"}}></div>\n}\n\nexport function BossNavItem (props) {\n    let {boss, onMouseOver, onMouseOut} = props;\n    let {id, filter} = useParams();\n    let bossInfo = bosses[boss.id];\n    if (!bossInfo) {\n        bossInfo = {\n            name: boss.fights[boss.fights.length -1]?.name ?? \"Unknown\",\n            logo: \"https://assets.rpglogs.com/img/warcraft/icons/Boss.jpg\",\n        }\n    }\n\n    let lastFight = boss.fights[boss.fights.length - 1];\n\n    let lastFightTile = getPercentageBar(lastFight);\n    const filterSuffix = filter ? \"/\" + filter : \"\";\n\n    let otherFights = [];\n    for (let i = boss.fights.length - 2; i >= 0; --i) {\n        otherFights.push(boss.fights[i]);\n    }\n\n    return (\n        <>\n        <div className=\"boss_tile\">\n            <NavLink to={\"/\" + id + \"/\" + lastFight.id + filterSuffix} activeClassName=\"selected\">\n                <div className=\"boss_fight\" onMouseOver={(e) => onMouseOver(lastFight.id)} onMouseOut={(e) => onMouseOut(lastFight.id)}>\n                    <img src={bossInfo.logo} alt={bossInfo.name} />\n                    <div className=\"boss_name\">{bossInfo.name}</div>\n                    {lastFightTile}\n                </div>\n            </NavLink>\n            {otherFights.map(fight => (\n                <NavLink key={fight.id} to={\"/\" + id + \"/\" + fight.id + filterSuffix} activeClassName=\"selected\">\n                    <div className=\"boss_fight\" onMouseOver={(e) => onMouseOver(fight.id)} onMouseOut={(e) => onMouseOut(fight.id)}>\n                        {msToTime(fight.end_time - fight.start_time)}\n                        {getPercentageBar(fight)}\n                    </div>\n                </NavLink>\n            ))}\n        </div>\n        </>\n    )\n}","import \"./FightChart.scss\";\nimport { createRef } from 'react';\nimport { Tooltip } from 'react-svg-tooltip';\nimport { asPercentage, msToTime } from \"../utils\";\n\nexport function FightChart(props) {\n    const {fights, raidStart,  raidTime, fightIds} = props;\n\n    const maxWidth = 1000;\n\n    let timeToPixel = (time) => {\n        return (time / raidTime) * maxWidth;\n    };\n\n    let getClassName = (fight) => {\n        if (fight.boss === 0) {\n            return \"trash\";\n        }\n\n        if (fight.kill) {\n            return \"boss-kill\";\n        }\n\n        return \"boss-wipe\";\n    };\n\n    let fightBands = [];\n\n    fights.forEach((fight, index, array) => {\n        if (index !== 0) {\n            fightBands.push({ \n                start: timeToPixel(array[index-1].end_time - raidStart), \n                end: timeToPixel(fight.start_time - raidStart), \n                cssClass: \"idle\", \n                id: 10000 + index, \n                duration: msToTime(fight.start_time - array[index-1].end_time),\n                name: null\n            });\n        }\n\n        fightBands.push({\n            start: timeToPixel(fight.start_time - raidStart), \n            end: timeToPixel(fight.end_time - raidStart), \n            cssClass: getClassName(fight), id: fight.id, \n            duration: msToTime(fight.end_time - fight.start_time),\n            name: fight.name,\n        });\n    })\n\n    let fightSummary = fights.reduce((agg, fight) => {\n        if (fight.boss === 0) {\n            agg.trash += (fight.end_time - fight.start_time);\n            return agg;\n        }\n\n        if (fight.kill) {\n            agg.bossKill += (fight.end_time - fight.start_time);\n            return agg;\n        }\n\n        agg.bossWipe += (fight.end_time - fight.start_time);\n\n        return agg;\n\n    }, { trash: 0, bossKill: 0, bossWipe: 0});\n    fightSummary.idle = raidTime - fightSummary.trash - fightSummary.bossKill - fightSummary.bossWipe;\n\n    return (\n        <div className=\"fightChart\">\n            <div className=\"fightSummary\">\n                <table>\n                    <tbody>\n                        <tr className=\"boss-kill\">\n                            <th className=\"name\">Boss Kills</th>\n                            <td className=\"time\">{msToTime(fightSummary.bossKill)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.bossKill / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"boss-wipe\">\n                            <th className=\"name\">Boss Wipes</th>\n                            <td className=\"time\">{msToTime(fightSummary.bossWipe)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.bossWipe / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"trash\">\n                            <th className=\"name\">Trash</th>\n                            <td className=\"time\">{msToTime(fightSummary.trash)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.trash / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"idle\">\n                            <th className=\"name\">Idle</th>\n                            <td className=\"time\">{msToTime(fightSummary.idle)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.idle / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"total\">\n                            <th>&nbsp;</th>\n                            <td className=\"time\">{msToTime(raidTime)}</td>\n                            <td className=\"percentage\">100.0%</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <svg width={maxWidth} height=\"110\">\n                <g>\n                    {fightBands.map(band => {\n                        const bandRef = createRef();\n                        return (<>\n                                <rect key={band.id} ref={bandRef} x={band.start} y={fightIds.includes(band.id) ? \"0\" : \"10\"} height=\"65\" width={band.end - band.start} className={band.cssClass} />\n                                <Tooltip triggerRef={bandRef}>\n                                    <rect x={5} y={15} width={50} height={25} rx={5} ry={5} fill={'black'} fill-opacity={0.7} />\n                                    <text x={45} y={32} fontSize={14} text-anchor=\"end\" className={band.cssClass}>{band.duration}</text>\n                                </Tooltip>\n                            </>)\n                    })}\n                </g>\n                <g>\n                    { fightSummary.bossKill > 0 && (\n                        <>\n                        <rect x=\"0\" y=\"85\" height=\"25\" width={timeToPixel(fightSummary.bossKill)} className=\"boss-kill\" />\n                        </>\n                    )}\n                    { fightSummary.bossWipe > 0 && (\n                        <>\n                        <rect x={timeToPixel(fightSummary.bossKill)} y=\"85\" height=\"25\" width={timeToPixel(fightSummary.bossWipe)} className=\"boss-wipe\" />\n                        </>\n                    )}\n                    { fightSummary.trash > 0 && (\n                        <>\n                        <rect x={timeToPixel(fightSummary.bossKill + fightSummary.bossWipe)} y=\"85\" height=\"25\" width={timeToPixel(fightSummary.trash)} className=\"trash\" />\n                        </>\n                    )}\n                    { fightSummary.idle > 0 && (\n                        <>\n                        <rect x={timeToPixel(fightSummary.bossKill + fightSummary.bossWipe + fightSummary.trash)} y=\"85\" height=\"25\" width={timeToPixel(fightSummary.idle)} className=\"idle\" />\n                        </>\n                    )}\n                    \n                </g>\n            </svg>\n        </div>\n    )\n}","export function WoWAnalyzerLink(props) {\n    const {reportId, fightId} = props;\n\n    let link = `https://wowanalyzer.com/report/${reportId}`;\n    if (fightId > 0) {\n        link += `/${fightId}`;\n    }\n    return (\n        <div><a href={link} className=\"external\" target=\"_blank\" rel=\"noreferrer\"><img src=\"https://www.wowanalyzer.com/favicon-16x16.png\" alt=\"WoWAnalyzer\"></img>Open in WoWAnalyzer</a></div>\n    );\n}","export function ThreatReportLink(props) {\n    const { reportId, fightId } = props;\n\n    let link = `https://voomlz.github.io/threat/?id=${reportId}&fight=${fightId}&enemy=&target=`;\n    return (\n        <div><a href={link} className=\"external\" target=\"_blank\" rel=\"noreferrer\"><img src=\"/line-chart-5754.png\" alt=\"Threat Graph icon\" />Open threat graph</a></div>\n    );\n}","export function WarcraftLogsLink(props) {\n    const { reportId, fightId } = props;\n\n    let link = `https://classic.warcraftlogs.com/reports/${reportId}`;\n    if (fightId > 0) {\n        link += `#fight=${fightId}`;\n    }\n    return (\n        <div><a href={link} className=\"external\" target=\"_blank\" rel=\"noreferrer\"><img src=\"https://assets.rpglogs.com/img/warcraft/favicon.png\" alt=\"Threat Graph icon\" />Open in Warcraft Logs</a></div>\n    );\n}","import \"./SummaryReport.scss\";\nimport {Component} from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {WarcraftLogLoader} from \"../warcraftLogLoader\";\nimport {GroupKeys, DataPoints} from \"./GridContexts\";\nimport {Grid} from \"./Grid\";\nimport {GridColumnGroup} from \"./GridColumnGroup\";\nimport {GridColumn} from \"./GridColumn\";\nimport {GridIconColumn} from \"./GridIconColumn\";\nimport { GridBarColumn, GridBarColumnSection } from \"./GridBarColumn\";\nimport { GridIconListColumn } from \"./GridIconListColumn\";\nimport { BossNavItem } from \"./BossNavItem\";\nimport ReactTooltip from \"react-tooltip\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { format, intervalToDuration} from \"date-fns\";\nimport { FightChart } from \"./FightChart\";\nimport { WoWAnalyzerLink } from \"./WoWAnalyzerLink\";\nimport { ThreatReportLink } from \"./ThreatReportLink\";\nimport { WarcraftLogsLink } from \"./WarcraftLogsLink\";\n\nconst roles = {\n    'tank': {\n        slug: 'tank',\n        name: 'Tank',\n        icon: 'https://wow.zamimg.com/images/wow/icons/tiny/role_tank.gif',\n    },\n    'dps': {\n        slug: 'dps',\n        name: 'DPS',\n        icon: 'https://wow.zamimg.com/images/wow/icons/tiny/role_dps.gif',\n    },\n    'healer': {\n        slug: 'healer',\n        name: 'Healer',\n        icon: 'https://wow.zamimg.com/images/wow/icons/tiny/role_healer.gif',\n    }\n};\n\nconst classes = {\n    'warrior': {\n        slug: 'warrior',\n        name: 'Warrior',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/inv_sword_27.jpg',\n    },\n    'rogue': {\n        slug: 'rogue',\n        name: 'Rogue',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_ThrowingKnife_04.jpg',\n    },\n    'hunter': {\n        slug: 'hunter',\n        name: 'Hunter',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_Weapon_Bow_07.jpg',\n    },\n    'mage': {\n        slug: 'mage',\n        name: 'Mage',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_Staff_13.jpg',\n    },\n    'warlock': {\n        slug: 'warlock',\n        name: 'Warlock',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/Spell_Nature_Drowsy.jpg',\n    },\n    'priest': {\n        slug: 'priest',\n        name: 'Priest',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_Staff_30.jpg',\n    },\n    'paladin': {\n        slug: 'paladin',\n        name: 'Paladin',\n        icon: 'https://wow.zamimg.com/images/wow/icons/medium/class_paladin.jpg',\n    },\n    'shaman': {\n        slug: 'shaman',\n        name: 'Shaman',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/inv_jewelry_talisman_04.jpg',\n    },\n    'druid': {\n        slug: 'druid',\n        name: 'Druid',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/Ability_Druid_Maul.jpg',\n    },\n}\n\nclass SummaryReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            isLoaded: false,\n            reportDetails: {},\n            context: {},\n            selectedFight: -1,\n            data: [],\n            classFilter: null,\n            roleFilter: null,\n        }\n        this._logLoader = null;\n\n        this.handleFightMouseOut = this.handleFightMouseOut.bind(this);\n        this.handleFightMouseOver = this.handleFightMouseOver.bind(this);\n    }\n\n    _getResults(selectedFight) {\n        let report = this._logLoader.getResults(selectedFight);\n        this.setState({\n            isLoaded: true,\n            characters: report.Characters,\n            fights: report.Fights,\n            raidStart: report.startTime,\n            raidTime: report.endTime - report.startTime,\n            reportDetails: {\n                title: report.title,\n                startTime: new Date(report.startTimestamp),\n                endTime: new Date(report.endTimestamp)\n            }\n        });\n\n        return report;\n    }\n\n    componentDidMount() {\n        const { id, fightId } = this.props.match.params;\n        if (!id)\n            return;\n\n        let selectedFight = fightId == null || isNaN(parseInt(fightId)) ? -1 : parseInt(fightId);\n\n        this.setState({reportId: id, selectedFight: selectedFight});\n\n        this._logLoader = WarcraftLogLoader.Load(id);\n        this._logLoader.loadFights()\n            .then(x => x.loadCharacterSummary())\n            .then(x => x.loadDeaths())\n            .then(x => x.loadInterrupts())\n            .then(x => {\n                let report = this._getResults();\n                this._generateFilteredData(report.Characters);\n            })\n            .catch((error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match !== prevProps.match) {\n            const { fightId } = this.props.match.params;\n            let selectedFight = fightId == null || isNaN(parseInt(fightId)) ? -1 : parseInt(fightId);\n\n            let report = this._getResults(selectedFight);\n            this._generateFilteredData(report.Characters);\n        }\n    }\n\n    _getFightIds(fightId) {\n        const { fights, hoverFight} = this.state;\n        let fightIds = [];\n        if (fightId === -1 && hoverFight == null)\n            return [];\n            \n        if (fightId > 0)\n            fightIds.push(fightId);\n\n        if (hoverFight > 0)\n            fightIds.push(hoverFight);\n\n        if (fightId === 0 || hoverFight === 0) {\n            fights.forEach(fight => {\n                if (fight.boss !== 0)\n                    return;\n                    \n                fightIds.push(fight.id);\n            });\n        }\n\n        return fightIds;\n    }\n\n    handleFightMouseOver(fightId) {\n        const {hoverFight} = this.state;\n\n        if (hoverFight !== fightId) {\n            console.log(\"OnMouseOver: \" + fightId);\n            this.setState({hoverFight: fightId});\n        }\n    }\n\n    handleFightMouseOut(fightId) {\n        const {hoverFight} = this.state;\n\n        if (hoverFight === fightId) {\n            console.log(\"OnMouseOut: \" + fightId);\n            this.setState({hoverFight: null});\n        }\n    }\n\n    _generateFilteredData(characters) {\n        const {filter} = this.props.match.params;\n\n        const classSortOrder = { Warrior: 0, Rogue: 1, Hunter: 2, Mage: 3, Warlock: 4, Priest: 5, Shaman: 6, Paladin: 7, Druid: 8 };\n\n        let roleFilter = null;\n        let classFilter = null;\n\n        if (roles[filter]) {\n            classFilter = null;\n            roleFilter = filter;\n        }\n\n        if (classes[filter]) {\n            classFilter = classes[filter].name;\n            roleFilter = null;\n        }\n\n        let data = [...Object.values(characters)\n        .filter((character) => character.type !== \"NPC\" && character.type !== \"Pet\" && character.type !== \"Boss\")\n        .filter((character) => classFilter == null || character.type === classFilter)\n        .filter((character) => roleFilter == null || character.roles.includes(roleFilter))\n        .sort((aValue, bValue) => {\n             let classCompare = classSortOrder[aValue.type] - classSortOrder[bValue.type];\n\n             if (classCompare !== 0)\n                 return classCompare;\n\n             return aValue.name.localeCompare(bValue.name);\n            })];\n\n        this.setState({data: data, classFilter: classFilter, roleFilter: roleFilter});\n    }\n\n    render() {\n        const { error, isLoaded, data, reportId, reportDetails, fights, raidStart, raidTime, classFilter, roleFilter} = this.state;\n        const { fightId, filter } = this.props.match.params;\n\n        let selectedFight = fightId == null || isNaN(parseInt(fightId)) ? -1 : parseInt(fightId);\n\n        let fightIds = this._getFightIds(selectedFight);\n\n        const filterSuffix = filter ? \"/\" + filter : \"\";\n        \n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n/*             let data = Object.values(characters)\n                .filter((character) => character.type !== \"NPC\" && character.type !== \"Pet\" && character.type !== \"Boss\")\n                .filter((character) => classFilter == null || character.type === classFilter)\n                .filter((character) => roleFilter == null || character.roles.includes(roleFilter))\n                .sort((aValue, bValue) => {\n                     let classCompare = classSortOrder[aValue.type] - classSortOrder[bValue.type];\n\n                     if (classCompare !== 0)\n                         return classCompare;\n\n                     return aValue.name.localeCompare(bValue.name);\n                    }); */\n            \n            let duration = intervalToDuration({start: reportDetails.startTime, end: reportDetails.endTime});\n            return (\n                <>\n                    <h3 className=\"report_title\">{reportDetails.title}</h3>\n                    <div><strong>Report ID:</strong> {reportId} (<Link to=\"/\">Load a different report</Link>)</div>\n                    <div>{format(reportDetails.startTime, \"EEE do MMM HH:mm:ss\")} - {format(reportDetails.endTime, \"HH:mm:ss\")} ({duration.hours}:{duration.minutes.toString().padStart(2, \"0\")}:{duration.seconds.toString().padStart(2, \"0\")})</div>\n                    <WoWAnalyzerLink reportId={reportId} fightId={selectedFight} />\n                    <ThreatReportLink reportId={reportId} fightId={selectedFight} />\n                    <WarcraftLogsLink reportId={reportId} fightId={selectedFight} />\n                    <div className=\"boss_nav\">\n                    <div className=\"boss_tile\">\n                        <NavLink to={\"/\" + reportId + (filterSuffix ? \"/-1\" + filterSuffix : \"\")}>\n                            <div className=\"boss_fight\">\n                                <img src=\"https://wow.zamimg.com/images/wow/journal/ui-ej-boss-default.png\" alt=\"Summary\" />\n                                <div className=\"boss_name\">Summary</div>\n                            </div>\n                        </NavLink>\n                    </div>\n                    <div className=\"boss_tile\">\n                        <NavLink to={\"/\" + reportId + \"/0\" + filterSuffix} activeClassName=\"selected\">\n                            <div className=\"boss_fight\" onMouseOver={(e) => this.handleFightMouseOver(0)} onMouseOut={(e) => this.handleFightMouseOut(0)}>\n                                <img src=\"https://wow.zamimg.com/images/wow/journal/ui-ej-boss-timmy-the-cruel.png\" alt=\"Trash\" />\n                                <div className=\"boss_name\">Trash</div>\n                            </div>\n                        </NavLink>\n                    </div>\n                        {fights.filter(fight => fight.boss > 0)\n                               .reduce((accum, fight) => {\n                                    let found = false;\n                                    for (let i = 0; i < accum.length; ++i) {\n                                        if (accum[i].id === fight.boss) {\n                                            accum[i].fights.push(fight);\n                                            found = true;\n                                        }\n                                    }\n\n                                    if (!found) {\n                                        accum.push({ id: fight.boss, fights: [fight] });\n                                    }\n\n                                    return accum;\n                               },[])\n                               .map(boss => (\n                            <BossNavItem key={boss.id} boss={boss} onMouseOver={this.handleFightMouseOver} onMouseOut={this.handleFightMouseOut} />\n                        ))}\n                    </div>\n                    <FightChart fights={fights} raidStart={raidStart} raidTime={raidTime} fightIds={fightIds} />\n                    <div className=\"nav_bar\">\n                        <NavLink to={\"/\" + reportId + \"/\" + selectedFight} activeClassName=\"selected\"><div className={\"class_nav All\"}><img className=\"spell_icon\" src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_misc_questionmark.jpg\" alt=\"All\" />All</div></NavLink>\n                        <div className=\"separator\"></div>\n                        {Object.values(roles).map(role => <NavLink key={role.slug} to={\"/\" + reportId + \"/\" + selectedFight + \"/\" + role.slug} activeClassName=\"selected\"><div className={\"class_nav \" + role.name}><img className=\"spell_icon\" src={role.icon} alt={role.name} />{role.name}</div></NavLink>)}\n                        <div className=\"separator\"></div>\n                        {Object.values(classes).map(role => <NavLink key={role.slug} to={\"/\" + reportId + \"/\" + selectedFight + \"/\" + role.slug} activeClassName=\"selected\"><div className={\"class_nav \" + role.name}><img className=\"spell_icon\" src={role.icon} alt={role.name} />{role.name}</div></NavLink>)}\n                    </div>\n\n                    <Grid data={data} logLoader={this._logLoader} classFilter={classFilter} roleFilter={roleFilter} fightId={selectedFight}>\n                        <GridColumnGroup id={GroupKeys.Name} label=\"Name\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.Name} \n                                        cssClass=\"name\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Enchants} label=\"Enchants\" cssClass=\"even-colgroup\">\n                            <GridColumn field={DataPoints.Enchants} \n                                        cssClass=\"enchants\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Gems} label=\"Gems\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.GemsMissing} label=\"Nil\"\n                                        cssClass=\"gems empty\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsCommon} label=\"Co\"\n                                        cssClass=\"gems common\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsUncommon} label=\"Un\"\n                                        cssClass=\"gems uncommon\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsRare} label=\"Ra\"\n                                        cssClass=\"gems rare\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsEpic} label=\"Ep\"\n                                        cssClass=\"gems epic\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconListColumn field={DataPoints.GemsList}\n                                        icon_name=\"inv_misc_gem_diamond_01.jpg\"\n                                        cssClass=\"gems\"\n                                        visibility={(ctx) => ctx.collapsed === false} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Elixirs} label=\"Self Buffs\" cssClass=\"even-colgroup\">\n                            <GridIconListColumn field={DataPoints.ElixirsFlasks}\n                                        label=\"Flask\"\n                                        icon_name=\"inv_potion_90.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsGuardian}\n                                        label=\"Guardian Elixirs\"\n                                        icon_name=\"ability_shaman_watershield.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsBattle}\n                                        label=\"Battle Elixirs\"\n                                        icon_name=\"ability_dualwield.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsFood}\n                                        label=\"Food Buffs\"\n                                        icon_name=\"spell_misc_food.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsScrolls}\n                                        label=\"Scrolls\"\n                                        icon_name=\"inv_scroll_07.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsWeaponEnchants}\n                                        label=\"Weapon Imbues\"\n                                        icon_name=\"ability_meleedamage.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsSeasonal}\n                                        label=\"Seasonal Buffs\"\n                                        icon_name=\"inv_misc_branch_01.jpg\"\n                                        cssClass=\"center\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Deaths} label=\"Deaths\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.Deaths} \n                                        cssClass=\"deaths\" aggregate={true} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.ProtPotions} label=\"Prot Potions\" cssClass=\"even-colgroup\">\n                            <GridColumn field={DataPoints.ProtectionPotionsTotal} \n                                        label=\"Uses\" \n                                        cssClass=\"center\" \n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.ProtectionPotionsTotalAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"center\" \n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsNature} \n                                        label=\"Nature Protection Potion\" \n                                        icon_name=\"inv_potion_06.jpg\" \n                                        item_id={6052}\n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterNature} \n                                        label=\"Greater Nature Protection Potion\" \n                                        icon_name=\"inv_potion_22.jpg\" \n                                        item_id={13458}\n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorNature} \n                                        label=\"Major Nature Protection Potion\" \n                                        icon_name=\"inv_potion_127.jpg\" \n                                        item_id={22844}\n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsNatureAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsFire} \n                                        label=\"Fire Protection Potion\" \n                                        icon_name=\"inv_potion_16.jpg\" \n                                        item_id={6049}\n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterFire} \n                                        label=\"Greater Fire Protection Potion\" \n                                        icon_name=\"inv_potion_24.jpg\" \n                                        item_id={13457}\n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorFire} \n                                        label=\"Major Fire Protection Potion\" \n                                        icon_name=\"inv_potion_124.jpg\" \n                                        item_id={22841}\n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsFireAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsFrost} \n                                            label=\"Frost Protection Potion\" \n                                            icon_name=\"inv_potion_13.jpg\" \n                                            item_id={6050}\n                                            cssClass=\"protection_potion frost\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterFrost} \n                                            label=\"Greater Frost Protection Potion\" \n                                            icon_name=\"inv_potion_20.jpg\" \n                                            item_id={13456}\n                                            cssClass=\"protection_potion frost\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorFrost} \n                                            label=\"Major Frost Protection Potion\" \n                                            icon_name=\"inv_potion_126.jpg\" \n                                            item_id={22842}\n                                            cssClass=\"protection_potion frost\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsFrostAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion frost\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsShadow} \n                                            label=\"Shadow Protection Potion\" \n                                            icon_name=\"inv_potion_44.jpg\" \n                                            item_id={6048}\n                                            cssClass=\"protection_potion shadow\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterShadow} \n                                            label=\"Greater Shadow Protection Potion\" \n                                            icon_name=\"inv_potion_23.jpg\" \n                                            item_id={13459}\n                                            cssClass=\"protection_potion shadow\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorShadow} \n                                            label=\"Major Shadow Protection Potion\" \n                                            icon_name=\"inv_potion_123.jpg\" \n                                            item_id={22846}\n                                            cssClass=\"protection_potion shadow\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsShadowAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion shadow\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterArcane} \n                                            label=\"Greater Arcane Protection Potion\" \n                                            icon_name=\"inv_potion_83.jpg\" \n                                            item_id={13461}\n                                            cssClass=\"protection_potion arcane\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorArcane} \n                                            label=\"Major Arcane Protection Potion\" \n                                            icon_name=\"inv_potion_128.jpg\" \n                                            item_id={22845}\n                                            cssClass=\"protection_potion arcane\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsArcaneAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion arcane\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Consumes} label=\"Consumes\" cssClass=\"odd-colgroup\">\n                            <GridIconColumn field={DataPoints.ConsumesPotions} \n                                            label=\"Potions\" \n                                            icon_name=\"inv_drink_06.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesManaPots} \n                                            label=\"Mana Potions\" \n                                            icon_name=\"inv_potion_137.jpg\" \n                                            item_id={22832}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.classFilter !== \"Warrior\" && ctx.classFilter !== \"Rogue\" && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRejuvPots} \n                                            label=\"Rejuvenation Potions\" \n                                            icon_name=\"inv_potion_134.jpg\" \n                                            item_id={22850}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHealthPots} \n                                            label=\"Healing Potion\" \n                                            icon_name=\"inv_potion_131.jpg\" \n                                            item_id={22829}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFreeActionPotion} \n                                            label=\"Free/Living Action Potion\" \n                                            icon_name=\"inv_potion_04.jpg\" \n                                            item_id={5634}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRestorationPots} \n                                            label=\"Restorative Potion\" \n                                            icon_name=\"inv_potion_01.jpg\" \n                                            item_id={9030}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRagePotions} \n                                            label=\"Rage Potions\" \n                                            icon_name=\"inv_potion_41.jpg\" \n                                            item_id={13442}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\") || (ctx.classFilter === \"Warrior\")}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesIronshield} \n                                            label=\"Ironshield Potions\" \n                                            icon_name=\"inv_potion_133.jpg\" \n                                            item_id={22849}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\") || (ctx.roleFilter === \"tank\")}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesInsaneStrength} \n                                            label=\"Insane Strength Potion\" \n                                            icon_name=\"inv_potion_109.jpg\" \n                                            item_id={22828}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesShrouding} \n                                            label=\"Shrouding Potion\" \n                                            icon_name=\"inv_potion_144.jpg\" \n                                            item_id={22871}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFelRegeneration} \n                                            label=\"Fel Regeneration Potion\" \n                                            icon_name=\"inv_potion_140.jpg\" \n                                            item_id={31676}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHeroic} \n                                            label=\"Heroic Potion\" \n                                            icon_name=\"inv_potion_106.jpg\" \n                                            item_id={22837}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDestruction} \n                                            label=\"Destruction Potion\" \n                                            icon_name=\"inv_potion_107.jpg\" \n                                            item_id={22839}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHaste} \n                                            label=\"Haste Potion\" \n                                            icon_name=\"inv_potion_108.jpg\" \n                                            item_id={22838}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFelMana} \n                                            label=\"Fel Mana Potion\" \n                                            icon_name=\"inv_potion_138.jpg\" \n                                            item_id={31677}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesGems} \n                                            label=\"Gems/Runes/Stones\" \n                                            icon_name=\"inv_misc_gem_variety_01.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRunes} \n                                            label=\"Dark/Demonic Runes\" \n                                            icon_name=\"inv_misc_rune_04.jpg\" \n                                            item_id={12662}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.classFilter !== \"Warrior\" && ctx.classFilter !== \"Rogue\" && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHealthStones} \n                                            label=\"Major Health Stone\" \n                                            icon_name=\"inv_stone_04.jpg\" \n                                            item_id={22105}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesNightmareSeed} \n                                            label=\"Nightmare Seed\" \n                                            item_id={22797}\n                                            icon_name=\"inv_misc_herb_nightmareseed.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesWhipperRootTuber} \n                                            label=\"Whipper Root Tuber\" \n                                            icon_name=\"inv_misc_food_55.jpg\" \n                                            item_id={11951}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesThistleTea} \n                                            label=\"Thistle Tea\" \n                                            icon_name=\"inv_drink_milk_05.jpg\" \n                                            item_id={7676}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\" && ctx.roleFilter !== \"tank\") || (ctx.classFilter === \"Rogue\")}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesManaGem} \n                                            label=\"Mana Gem\" \n                                            icon_name=\"inv_misc_gem_stone_01.jpg\" \n                                            item_id={22044}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\" && ctx.roleFilter !== \"tank\") || (ctx.classFilter === \"Mage\")}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesDrums} \n                                            label=\"Drums\" \n                                            icon_name=\"inv_misc_drum_02.jpg\" \n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsBattle} \n                                            label=\"Drums of Battle\" \n                                            icon_name=\"inv_misc_drum_02.jpg\" \n                                            item_id={29529}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsWar} \n                                            label=\"Drums of War\" \n                                            icon_name=\"inv_misc_drum_03.jpg\" \n                                            item_id={29528}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsRestoration} \n                                            label=\"Drums of Restoration\" \n                                            icon_name=\"inv_misc_drum_07.jpg\" \n                                            item_id={29531}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsPanic} \n                                            label=\"Drums of Panic\" \n                                            icon_name=\"inv_misc_drum_06.jpg\" \n                                            item_id={29532}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesExplosives} \n                                            label=\"Bombs and Explosives\" \n                                            icon_name=\"inv_misc_bomb_06.jpg\" \n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHolyWater} \n                                            label=\"Stratholme Holy Water\" \n                                            icon_name=\"inv_potion_75.jpg\" \n                                            item_id={13180}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesSapperCharge} \n                                            label=\"Sapper Charge\" \n                                            icon_name=\"inv_gizmo_supersappercharge.jpg\" \n                                            item_id={23827}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesEzThro} \n                                            label=\"Ez-Thro Dynamite II\" \n                                            icon_name=\"inv_misc_bomb_03.jpg\" \n                                            item_id={18588}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDenseDynamite} \n                                            label=\"Dense Dynamite\" \n                                            icon_name=\"inv_misc_bomb_06.jpg\" \n                                            item_id={18641}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFelIronBombs} \n                                            label=\"Fel Iron Bomb\" \n                                            icon_name=\"spell_fire_selfdestruct.jpg\" \n                                            item_id={23736}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesBandages} \n                                            label=\"First Aid\" \n                                            icon_name=\"spell_holy_sealofsacrifice.jpg\" \n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHeavyRuneclothBandage} \n                                            label=\"Bandages\" \n                                            icon_name=\"inv_misc_bandage_netherweave_heavy.jpg\" \n                                            item_id={21991}\n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesAntiVenom} \n                                            label=\"Powerful Anti-Venom\" \n                                            icon_name=\"inv_drink_14.jpg\" \n                                            item_id={19440}\n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                        </GridColumnGroup>\n\n                        <GridColumnGroup id={GroupKeys.DispelsInterrupts} label=\"Dispels\" cssClass=\"even-colgroup\">\n                            <GridIconColumn field={DataPoints.DispelBoss}\n                                        label=\"Boss\" \n                                        cssClass=\"center\"\n                                        icon_url=\"https://image.flaticon.com/icons/png/128/3325/3325105.png\"\n                                        visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === true}\n                                        aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelTrash}\n                                        label=\"Trash\" \n                                        cssClass=\"center\"\n                                        icon_url=\"https://image.flaticon.com/icons/png/128/3022/3022156.png\"\n                                        visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === true}\n                                        aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelPoison} \n                                            label=\"Poison\" \n                                            icon_name=\"spell_nature_nullifypoison.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelDruidCurePoison} \n                                            label=\"Cure Poison\" \n                                            icon_name=\"spell_nature_nullifypoison.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8946}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelDruidAbolishPoison} \n                                            label=\"Abolish Poison\" \n                                            icon_name=\"spell_nature_nullifypoison_02.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2893}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanCurePoison} \n                                            label=\"Cure Poison\" \n                                            icon_name=\"spell_nature_nullifypoison.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={526}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanPoisonCleansingTotem} \n                                            label=\"Poison Cleansing Totem\" \n                                            icon_name=\"spell_nature_poisoncleansingtotem.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8166}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelDisease} \n                                            label=\"Disease\" \n                                            icon_name=\"spell_holy_nullifydisease.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelPriestCureDisease} \n                                            label=\"Cure Disease\" \n                                            icon_name=\"spell_holy_nullifydisease.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={528}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelPriestAbolishDisease} \n                                            label=\"Abolish Disease\" \n                                            icon_name=\"spell_nature_nullifydisease.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={552}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanCureDisease} \n                                            label=\"Cure Disease\" \n                                            icon_name=\"spell_nature_removedisease.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2870}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanDiseaseCleansingTotem} \n                                            label=\"Disease Cleansing Totem\" \n                                            icon_name=\"spell_nature_diseasecleansingtotem.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8170}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelCurse} \n                                            label=\"Curse\" \n                                            icon_name=\"spell_nature_removecurse.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelDruidRemoveCurse} \n                                            label=\"Remove Curse\" \n                                            icon_name=\"spell_holy_removecurse.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2782}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelMageRemoveLesserCurse} \n                                            label=\"Remove Lesser Curse\" \n                                            icon_name=\"spell_nature_removecurse.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={475}\n                                            visibility={(ctx) => ctx.classFilter === \"Mage\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelMagic} \n                                            label=\"Magic\" \n                                            icon_name=\"spell_holy_dispelmagic.jpg\" \n                                            cssClass=\"center \"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelPriestDispelMagic} \n                                            label=\"Dispel Magic\" \n                                            icon_name=\"spell_holy_dispelmagic.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={988}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanPurge} \n                                            label=\"Purge\" \n                                            icon_name=\"spell_nature_purge.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8012}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelWarlockDevourMagic} \n                                            label=\"Devour Magic\" \n                                            icon_name=\"spell_nature_purge.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={27277}\n                                            visibility={(ctx) => ctx.classFilter === \"Warlock\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelFrenzy} \n                                            label=\"Frenzy\" \n                                            icon_name=\"ability_druid_challangingroar.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelHunterTranqShot} \n                                            label=\"Tranquilizing Shot\" \n                                            icon_name=\"spell_nature_drowsy.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={19801}\n                                            visibility={(ctx) => ctx.classFilter === \"Hunter\"}\n                                            aggregate={true} />\n                            \n                            <GridColumn field={DataPoints.InterruptTotal}\n                                        label=\"Interrupts\" \n                                        cssClass=\"center\"\n                                        visibility={(ctx) => ctx.classFilter == null}\n                                        aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptDruidBash} \n                                            label=\"Bash\" \n                                            icon_name=\"ability_druid_bash.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8983}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptDruidFeralCharge} \n                                            label=\"Feral Charge\" \n                                            icon_name=\"ability_hunter_pet_bear.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={16979}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptMageCounterspell} \n                                            label=\"Counterspell\" \n                                            icon_name=\"spell_frost_iceshock.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2139}\n                                            visibility={(ctx) => ctx.classFilter === \"Mage\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptPriestSilence} \n                                            label=\"Silence\" \n                                            icon_name=\"spell_shadow_impphaseshift.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={15487}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptShamanEarthShock} \n                                            label=\"Earth Shock\" \n                                            icon_name=\"spell_nature_earthshock.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={25454}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptRogueKick} \n                                            label=\"Kick\" \n                                            icon_name=\"ability_kick.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={38768}\n                                            visibility={(ctx) => ctx.classFilter === \"Rogue\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptCheapShot} \n                                            label=\"Cheap Shot\" \n                                            icon_name=\"ability_cheapshot.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={1833}\n                                            visibility={(ctx) => ctx.classFilter === \"Rogue\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptWarlockSpellLock} \n                                            label=\"Spell Lock\" \n                                            icon_name=\"spell_shadow_mindrot.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={19647}\n                                            visibility={(ctx) => ctx.classFilter === \"Warlock\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptHunterIntimidate} \n                                            label=\"Intimidation\" \n                                            icon_name=\"ability_devour.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={19577}\n                                            visibility={(ctx) => ctx.classFilter === \"Hunter\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptWarstomp} \n                                            label=\"War Stomp\" \n                                            icon_name=\"ability_warstomp.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={20549}\n                                            visibility={(ctx) => ctx.classFilter === \"Hunter\" || ctx.classFilter === \"Druid\" || ctx.classFilter === \"Shaman\" || ctx.classFilter === \"Warrior\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptWarriorPummel} \n                                            label=\"Pummel\" \n                                            icon_name=\"inv_gauntlets_04.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={6554}\n                                            visibility={(ctx) => ctx.classFilter === \"Warrior\"}\n                                            aggregate={true} />\n                            \n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Cooldowns} label=\"Cooldowns\" cssClass=\"odd-colgroup\">\n{/*                             <GridIconListColumn field={DataPoints.Cooldowns}\n                                        label=\" \"\n                                        cssClass=\"center\" /> */}\n                            <GridIconListColumn field={DataPoints.CooldownsRacial}\n                                        label=\" \"\n                                        cssClass=\"cooldowns center\" />\n                            <GridIconListColumn field={DataPoints.CooldownsAbility}\n                                        label=\" \"\n                                        cssClass=\"cooldowns center\" />\n                            <GridIconListColumn field={DataPoints.CooldownsItems}\n                                        label=\" \"\n                                        cssClass=\"cooldowns center\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Tank} label=\"Tank Stats\" cssClass=\"even-colgroup\">\n                            <GridBarColumn label=\"Damage Taken\" width=\"270\" visibility={(ctx) => ctx.roleFilter === \"tank\"}>\n                                <GridBarColumnSection field={DataPoints.DamageTakenHit} label=\"Hit\" cssClass=\"class-colour1\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenCrushed} label=\"Crushing Blow\" cssClass=\"bad2\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenCrit} label=\"Crit\" cssClass=\"bad1\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenBlocked} label=\"Blocked\" cssClass=\"class-colour3\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenParry} label=\"Parry\" cssClass=\"good2\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenDodge} label=\"Dodge\" cssClass=\"good1\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenMiss} label=\"Miss\" cssClass=\"class-colour4\" />\n                            </GridBarColumn>\n                            <GridColumn label=\"Hit\" field={DataPoints.DamageTakenHit} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"} />\n                            <GridColumn label=\"Crush\" field={DataPoints.DamageTakenCrushed} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Crit\" field={DataPoints.DamageTakenCrit} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Block\" field={DataPoints.DamageTakenBlocked} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Parry\" field={DataPoints.DamageTakenParry} format=\"%\" cssClass=\"right percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Dodge\" field={DataPoints.DamageTakenDodge} format=\"%\" cssClass=\"right percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Miss\" field={DataPoints.DamageTakenMiss} format=\"%\" cssClass=\"right percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                        </GridColumnGroup>\n                    </Grid>\n                    <ReactTooltip />\n                </>\n            )\n        }\n    }\n}\n\nexport const SummaryReportWithRouter = withRouter(SummaryReport);","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function ReportLoad() {\n    let history = useHistory();\n    let [reportId, setReportId] = useState();\n\n    let handleChange = (event) => {\n        setReportId(event.target.value);\n    }\n\n    let handleSubmit = () => {\n        history.push(\"/\" + reportId);\n    }\n\n    return (\n        <div className=\"App\">\n            <form onSubmit={handleSubmit} >\n            Enter your Classic Warcraft Logs ID: <input type=\"text\" onChange={handleChange} /> <input type=\"submit\" value=\"Go\" />\n            </form>\n        </div>\n    )\n}","import './App.css';\nimport {Component} from \"react\";\nimport {HealerReportWithRouter as HealerReport} from \"./HealerReport/HealerReport\";\nimport {ShamanReportWithRouter as ShamanReport} from \"./ShamanReport/ShamanReport\";\nimport {SummaryReportWithRouter as SummaryReport} from \"./SummaryReport/SummaryReport\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { ReportLoad } from './ReportLoad';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n      <div className=\"nav-bar\">\n        <div className=\"bug-report\">\n          <a href=\"https://github.com/arbixal/wow-classic-heal-analyser/issues/new\" target=\"_blank\" rel=\"noreferrer\"><img alt=\"Github Logo\" src=\"GitHub-Mark-Light-32px.png\"></img> Report a Bug</a>\n        </div>\n        <h1>WoW Classic Log Analyser</h1>\n      </div>\n      <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <ReportLoad />\n            </Route>\n            <Route path=\"/:id/archived/shaman\">\n              <ShamanReport />\n            </Route>\n            <Route path=\"/:id/archived/healer\" >\n              <HealerReport />\n            </Route>\n            <Route path=\"/:id/:fightId?/:filter?\">\n              <SummaryReport />\n            </Route>\n          </Switch>\n      </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}