{"version":3,"sources":["data.js","utils.js","datastore/cooldowns/index.js","datastore/gear/armor/cloth/index.js","datastore/gear/armor/leather/index.js","datastore/gear/armor/mail/index.js","datastore/gear/armor/plate/index.js","datastore/gear/armor/index.js","datastore/gear/weapon/axe/index.js","datastore/gear/weapon/bow/index.js","datastore/gear/weapon/crossbow/index.js","datastore/gear/weapon/dagger/index.js","datastore/gear/weapon/fist-weapon/index.js","datastore/gear/weapon/gun/index.js","datastore/gear/weapon/mace/index.js","datastore/gear/weapon/polearm/index.js","datastore/gear/weapon/staff/index.js","datastore/gear/weapon/sword/index.js","datastore/gear/weapon/thrown/index.js","datastore/gear/weapon/wand/index.js","datastore/gear/weapon/index.js","datastore/gear/index.js","datastore/index.js","warcraftLogLoader.js","ProgressBar.jsx","HealerReport/HealerFightSummary.jsx","HealerReport/healSummary.js","HealerReport/FightReport.jsx","HealerReport/HealerReport.jsx","ShamanReport/AncestralFortitudeReport.jsx","ShamanReport/CooldownReport.jsx","ShamanReport/TotemReport.jsx","ShamanReport/ShamanReport.jsx","SummaryReport/GridContexts.js","SummaryReport/GridRow.jsx","SummaryReport/Grid.jsx","SummaryReport/ExpandCollapseButton.jsx","SummaryReport/GridColumnGroup.jsx","SummaryReport/GridColumn.jsx","SummaryReport/GridIconColumn.jsx","SummaryReport/GridBarColumn.jsx","SummaryReport/GridIconListColumn.jsx","SummaryReport/BossNavItem.jsx","SummaryReport/FightChart.jsx","SummaryReport/WoWAnalyzerLink.jsx","SummaryReport/ThreatReportLink.jsx","SummaryReport/WarcraftLogsLink.jsx","SummaryReport/SummaryReport.jsx","ReportLoad.jsx","App.js","reportWebVitals.js","index.js"],"names":["healingSpells","name","type","icon","mana","castTime","ticks","tickPortion","protectionPotionEnum","protectionPotions","rank","sharedHealingEnchants","2544","score","2543","2545","1503","1505","1483","1504","1506","1507","1508","1509","1510","2604","1891","1893","928","1892","911","1887","851","929","2566","1886","1885","2565","1884","1883","2617","930","931","2619","2620","1888","2621","2622","1889","2505","2504","2567","2568","1903","1904","1890","926","requiredEnchants","Object","assign","2590","2587","2591","2584","rarity","enchants","3001","itemId","3003","3002","2999","2583","2979","2980","2715","2992","2993","2717","2996","2997","2983","2716","2977","2978","2990","2991","2986","2981","2982","2994","2995","2721","2605","368","spellId","1441","2664","2662","3150","2661","1144","2933","2659","1950","2649","2648","2650","2647","1593","2613","2937","2614","2564","2322","2935","1594","684","2746","2745","2747","2748","3011","3013","3010","3012","2940","2657","2658","2939","2656","2343","2670","2669","2673","2671","2672","2654","1071","2655","2841","2724","2723","resistanceGems","22459","arcane","fire","frost","nature","shadow","22460","resistanceEnchants","1257","903","2463","804","256","65","2984","3009","2683","2998","2985","2487","3007","2988","2987","3008","2488","2989","2681","3095","2483","3006","2485","2682","2484","2486","highResist","120","117","114","111","109","108","105","102","99","96","93","90","87","84","82","81","medResist","91","lowResist","115","103","94","resistRandomEnchantBySlot","0","1","2","4","5","6","7","8","9","10","11","14","16","msToTime","s","secs","mins","hours","abbreviateNumber","num","toFixed","asPercentage","decimals","sumNonNull","params","reduce","agg","obj","arrayToDictionary","array","key","accum","value","druid","hunter","mage","paladin","priest","rogue","shaman","warlock","warrior","racials","items","back","chest","feet","hands","head","legs","shoulders","waist","wrist","cloth","leather","mail","plate","idol","libram","totem","rings","neck","questNeck","offhandfrills","shields","trinkets_raw","mainhand","offhand","onehand","twohand","ranged","thrown","axes","bows","crossbows","daggers","fists","guns","maces","polearms","staves","swords","wands","armor","weapons","bosses","bosses_raw","gemList","gems_raw","cooldownList","cooldowns_raw","itemList","gear_raw","WarcraftLogLoader","reportId","this","domain","Results","_loadedStatus","fights","characterSummaries","deaths","interrupts","character","details","casts","buffs","damageTaken","protectionPots","Promise","resolve","fetch","then","res","json","Fights","FightType","acc","id","boss","Characters","friendlies","filter","raidStartTime","start_time","friendlyPets","forEach","pet","petOwner","Pets","pets","title","startTimestamp","start","endTimestamp","end","startTime","endTime","length","end_time","data","playerData","playerDetails","tanks","_reducePlayerDetails","healers","dps","fight","reject","response","_getPlayerData","entries","playerInfo","perFight","summary","roles","specs","intellect","stamina","strength","agility","weaponEnchant","offhandEnchant","gems","resistances","catch","_resolve","taskList","_getCharacterSummaryPromise","map","all","_","_reject","events","sourceID","playerid","_loadCharacterCasts","_loadCharacterBuffs","_loadProtectionPots","_loadCharacterDamageTaken","_data","fightType","auras","guid","ability","protPot","amount","firstAbsorb","push","timestamp","fightId","fightIds","_getFightIds","filteredResults","values","filteredCharacter","_getFilteredCharacter","characterFight","includes","fightBands","aFight","x","bands","buffBand","some","fightBand","validEvents","y","potEvent","characterid","getClassHealEvents","getClassCastEvents","getProtectionPotionHealingEvents","getProtectionPotionCastEvents","current","role","playerId","slots","enchantable","3","12","13","15","17","18","gearInfo","combatantInfo","gear","gearItem","slot","console","log","toLowerCase","randomEnchantment","itemLevel","resistAmount","includesGreens","notEnchantable","permanentEnchants","slotname","permanentEnchant","permanentEnchantName","gearId","gearName","temporaryEnchant","temporaryEnchantName","gem","count","gemDetails","colour","label","description","sockets","gemCount","keyAccessFunction","a","concat","i","j","splice","removeDuplicates","stats","Intellect","max","Armor","Stamina","Strength","Agility","healerData","context","tankData","status","Error","statusText","nextPageTimestamp","sourceClass","sourceid","sourcename","getBuffUptime","innerAccum","existingCharacter","totalUptime","totalUses","sort","results","abilityid","LogLoader","ProgressBar","props","maxHeals","className","style","width","getTotalHeals","getEffectivePercent","getOverhealPercent","getWastedPercent","Component","HealerFightSummary","state","healer","spells","manaOil","classType","isExpanded","toggle","bind","setState","row","maxSpellHeals","enchantScore","tooltip","onClick","data-tip","data-place","data-class","data-html","manaPots","runes","manaGained","cooldowns","cooldown","idx","src","alt","castsStarted","castsCompleted","getCastsPercent","effectiveHeals","overHeal","wastedHeals","wastedMana","spell","colSpan","HealSummary","getHealSummary","collection","event","getOrCreate","aggregate","spellInfo","overheal","tick","Math","round","FightReport","error","isLoaded","healSummary","expanded","characters","healerInfo","getHealerInfo","getHealEvents","result","eventsByCharacter","getCharactersFromEvents","characterList","characterName","characterClass","characterManaOil","bisEnchants","total","keyValuePair","_event","sourceId","abilityId","loadData","fightClass","kill","message","rowSpan","height","effectiveHeal","HealerReport","match","setReport","getFights","showTrash","item","HealerReportWithRouter","withRouter","AncestralFortitudeReport","tanksPerFight","buffCalls","getArmorBuffUptime","allBuffs","buffUptime","tankCalls","getTankInfo","allTanks","charId","class","_getTanksForFights","_getArmorBuffUptime","_results","colspan","fightLength","tankBuffInfo","tankBuffUptime","preBuff","CooldownReport","cooldownRows","zhcResult","zhcCounts","getCharacterCastTable","cooldownRow","entry","xValue","yValue","typeCompare","localeCompare","found","resultRow","TotemReport","ShamanReport","shamans","ShamanReportWithRouter","GroupKeys","DataPoints","Name","Enchants","EnchantGood","EnchantAverage","EnchantBad","EnchantMissing","EnchantList","GemsMissing","GemsCommon","GemsUncommon","GemsRare","GemsEpic","GemsList","Elixirs","ElixirsFlasks","ElixirsGuardian","ElixirsBattle","ElixirsFood","ElixirsSeasonal","ElixirsScrolls","ElixirsWeaponEnchants","Deaths","ProtectionPotionsTotal","ProtectionPotionsTotalAbsorbed","ProtectionPotionsNature","ProtectionPotionsGreaterNature","ProtectionPotionsMajorNature","ProtectionPotionsNatureAbsorbed","ProtectionPotionsFire","ProtectionPotionsGreaterFire","ProtectionPotionsMajorFire","ProtectionPotionsFireAbsorbed","ProtectionPotionsFrost","ProtectionPotionsGreaterFrost","ProtectionPotionsMajorFrost","ProtectionPotionsFrostAbsorbed","ProtectionPotionsShadow","ProtectionPotionsGreaterShadow","ProtectionPotionsMajorShadow","ProtectionPotionsShadowAbsorbed","ProtectionPotionsGreaterArcane","ProtectionPotionsMajorArcane","ProtectionPotionsArcaneAbsorbed","ConsumesPotions","ConsumesDrums","ConsumesGems","ConsumesExplosives","ConsumesBandages","ConsumesManaPots","ConsumesRunes","ConsumesRejuvPots","ConsumesHealthPots","ConsumesHealthStones","ConsumesWhipperRootTuber","ConsumesRagePotions","ConsumesThistleTea","ConsumesRestorationPots","ConsumesFreeActionPotion","ConsumesManaGem","ConsumesNightmareSeed","ConsumesStoneshield","ConsumesHeavyRuneclothBandage","ConsumesAntiVenom","ConsumesHolyWater","ConsumesSapperCharge","ConsumesEzThro","ConsumesDenseDynamite","ConsumesFelIronBombs","ConsumesArcaneBombs","ConsumesDrumsBattle","ConsumesDrumsRestoration","ConsumesDrumsPanic","ConsumesDrumsWar","ConsumesInsaneStrength","ConsumesShrouding","ConsumesFelRegeneration","ConsumesHeroic","ConsumesDestruction","ConsumesHaste","ConsumesFelMana","ConsumesIronshield","DispelTotal","DispelBoss","DispelTrash","DispelPoison","DispelDisease","DispelCurse","DispelMagic","DispelFrenzy","DispelDruidCurePoison","DispelDruidAbolishPoison","DispelDruidRemoveCurse","DispelHunterTranqShot","DispelMageRemoveLesserCurse","DispelPaladinPurify","DispelPaladinCleanse","DispelPriestDispelMagic","DispelPriestCureDisease","DispelPriestAbolishDisease","DispelShamanPurge","DispelShamanCurePoison","DispelShamanCureDisease","DispelShamanPoisonCleansingTotem","DispelShamanDiseaseCleansingTotem","DispelWarlockDevourMagic","InterruptTotal","InterruptDruidBash","InterruptDruidFeralCharge","InterruptMageCounterspell","InterruptPaladinHammerOfJustice","InterruptPriestSilence","InterruptRogueKick","InterruptShamanEarthShock","InterruptWarriorPummel","InterruptCheapShot","InterruptWarlockSpellLock","InterruptHunterIntimidate","InterruptWarstomp","Cooldowns","CooldownsRacial","CooldownsAbility","CooldownsItems","DamageTakenHit","DamageTakenCrit","DamageTakenCrushed","DamageTakenBlocked","DamageTakenMiss","DamageTakenDodge","DamageTakenParry","ResistanceNature","ResistanceFire","ResistanceFrost","ResistanceShadow","ResistanceArcane","emptyData","ConsumesElixirOfPoisonResistance","ConsumesOilOfImmolation","GridRow","_logLoader","logLoader","report","getResults","raidTime","Data","_flattenCharacterData","loadCharacterDetails","getCharacter","prevProps","characterData","_getDeathCount","_getEnchantInfo","_getMissingGemCount","_getGemCount","_getGemList","_getBuffs","foodBuffs","flaskBuffs","battleElixirBuffs","guardianElixirBuffs","seasonBuffs","scrollBuffs","_getWeaponImbue","tempWeaponEnchants","_getProtectionPotionCount","_getProtectionPotionAbsorb","_getCastCount","_getBossCastCount","_getTrashCastCount","_getInterruptCount","_getCooldownList","_cleanResistanceValue","_getTankStats","onDataUpdate","options","activeBuffs","gemIcons","cds","cast","cooldownInfo","countByFight","firstCast","protectionPotion","spellId1","spellId2","absorbed","spellIds","_getRestrictedCastCount","castCount","damageTakenArray","damageAmount","damage","properyName","propertyLabel","table","damageTakenTable","_addIfNotNull","DamageWhirlwind","DamageRainOfFire","DamageFireShield","DamageFlames","DamageCleave","DamageBlizzard","DamageExplode","DamageImpale","DamageBomb","DamageThunderclap","DamageShadowStorm","DamageDarkGlare","DamageFalling","DamageVoidZone","DamagePoisonCloud","DamageFrostBreath","DamageEruption","DamageBroodPowerBronze","DamageVoidBlast","DamageTailSweep","DamagePositiveCharge","DamageNegativeCharge","DamageDisruptingShout","DamageChill","DamageDarkBlast","DamageWailOfSouls","meleeDamage","totalHits","hitMap","breakdown","hitType","toString","hit","enchantList","slotToIconMapping","19","enchant","enchantIcon","icon_url","enchantInfo","spec","specScore","good","highlight","average","bad","missing","children","Children","child","isValidElement","cloneElement","render","renderCell","renderType","Grid","collapsed","summaryRow","handleColGroupToggle","handleDataUpdate","nextProps","nextState","classFilter","roleFilter","colGroup","column","field","ctx","renderHeader","onColGroupToggle","renderSubHeader","ExpandCollapseButton","onToggle","GridColumnGroup","ReactTooltip","rebuild","_getContext","visibleCount","visibility","_getChildCount","cssClass","visibleChildren","_getVisibleChildCount","_canExpand","GridColumn","isVisible","format","isNaN","tooltipField","_cleanupValue","GridIconColumn","icon_name","item_id","spell_id","cellContent","href","target","rel","GridBarColumn","childObjects","GridBarColumnSection","GridIconListColumn","Array","isArray","data-count","header","getPercentageBar","fightPercentage","BossNavItem","onMouseOver","onMouseOut","useParams","bossInfo","logo","lastFight","lastFightTile","filterSuffix","otherFights","to","activeClassName","e","FightChart","raidStart","timeToPixel","time","getClassName","index","duration","fightSummary","trash","bossKill","bossWipe","idle","band","bandRef","createRef","ref","triggerRef","rx","ry","fill","fill-opacity","fontSize","text-anchor","WoWAnalyzerLink","link","ThreatReportLink","WarcraftLogsLink","slug","classes","SummaryReport","reportDetails","selectedFight","handleFightMouseOut","handleFightMouseOver","Date","parseInt","Load","loadFights","loadCharacterSummary","loadDeaths","loadInterrupts","_getResults","_generateFilteredData","hoverFight","classSortOrder","Warrior","Rogue","Hunter","Mage","Warlock","Priest","Shaman","Paladin","Druid","aValue","bValue","classCompare","intervalToDuration","minutes","padStart","seconds","SummaryReportWithRouter","ReportLoad","history","useHistory","useState","setReportId","onSubmit","onChange","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57818235.chunk.js","sourcesContent":["export const healingSpells = {\n    // Priest Spells\n    '2054': {\n        name: \"Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 155,\n        castTime: 3000\n    },\n    '2055': {\n        name: \"Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 205,\n        castTime: 3000\n    },\n    '6063': {\n        name: \"Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 255,\n        castTime: 3000\n    },\n    '6064': {\n        name: \"Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 305,\n        castTime: 3000\n    },\n    '2061': {\n        name: \"Flash Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 125,\n        castTime: 1500\n    },\n    '9472': {\n        name: \"Flash Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 155,\n        castTime: 1500\n    },\n    '9473': {\n        name: \"Flash Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 185,\n        castTime: 1500\n    },\n    '9474': {\n        name: \"Flash Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 215,\n        castTime: 1500\n    },\n    '10915': {\n        name: \"Flash Heal (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 265,\n        castTime: 1500\n    },\n    '10916': {\n        name: \"Flash Heal (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 315,\n        castTime: 1500\n    },\n    '10917': {\n        name: \"Flash Heal (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 380,\n        castTime: 1500\n    },\n    '139': {\n        name: \"Renew (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 30,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6074': {\n        name: \"Renew (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 65,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6075': {\n        name: \"Renew (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 105,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6076': {\n        name: \"Renew (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 140,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6077': {\n        name: \"Renew (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 170,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6078': {\n        name: \"Renew (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 205,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10927': {\n        name: \"Renew (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 250,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10928': {\n        name: \"Renew (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 305,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10929': {\n        name: \"Renew (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 365,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '25315': {\n        name: \"Renew (Rank 10)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 410,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '17': {\n        name: \"Power Word: Shield (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 45,\n        castTime: 0\n    },\n    '592': {\n        name: \"Power Word: Shield (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 80,\n        castTime: 0\n    },\n    '600': {\n        name: \"Power Word: Shield (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 130,\n        castTime: 0\n    },\n    '3747': {\n        name: \"Power Word: Shield (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 175,\n        castTime: 0\n    },\n    '6065': {\n        name: \"Power Word: Shield (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 210,\n        castTime: 0\n    },\n    '6066': {\n        name: \"Power Word: Shield (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 250,\n        castTime: 0\n    },\n    '10898': {\n        name: \"Power Word: Shield (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 300,\n        castTime: 0\n    },\n    '10899': {\n        name: \"Power Word: Shield (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 355,\n        castTime: 0\n    },\n    '10900': {\n        name: \"Power Word: Shield (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 425,\n        castTime: 0\n    },\n    '10901': {\n        name: \"Power Word: Shield (Rank 10)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 500,\n        castTime: 0\n    },\n    '2060': {\n        name: \"Greater Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 370,\n        castTime: 3000\n    },\n    '10963': {\n        name: \"Greater Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 455,\n        castTime: 3000\n    },\n    '10964': {\n        name: \"Greater Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 545,\n        castTime: 3000\n    },\n    '10965': {\n        name: \"Greater Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 655,\n        castTime: 3000\n    },\n    '25314': {\n        name: \"Greater Heal (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 710,\n        castTime: 3000\n    },\n    '596': {\n        name: \"Prayer of Healing (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 410,\n        castTime: 3000\n    },\n    '996': {\n        name: \"Prayer of Healing (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 560,\n        castTime: 3000\n    },\n    '10960': {\n        name: \"Prayer of Healing (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 770,\n        castTime: 3000\n    },\n    '10961': {\n        name: \"Prayer of Healing (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 1030,\n        castTime: 3000\n    },\n    '25316': {\n        name: \"Prayer of Healing (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 1070,\n        castTime: 3000\n    },\n    '2050': {\n        name: \"Lesser Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 30,\n        castTime: 1500\n    },\n    '2052': {\n        name: \"Lesser Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 45,\n        castTime: 2000\n    },\n    '2053': {\n        name: \"Lesser Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 75,\n        castTime: 2500\n    },\n    '22009': {\n        name: \"Greater Heal (Renew)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 0,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 0\n    },\n    // Druid Spells\n    '774': {\n        name: \"Rejuvenation (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 25,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '1058': {\n        name: \"Rejuvenation (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 40,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '1430': {\n        name: \"Rejuvenation (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 75,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '2090': {\n        name: \"Rejuvenation (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 105,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '2091': {\n        name: \"Rejuvenation (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 135,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '3627': {\n        name: \"Rejuvenation (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 160,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '8910': {\n        name: \"Rejuvenation (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 195,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9839': {\n        name: \"Rejuvenation (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 235,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9840': {\n        name: \"Rejuvenation (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 280,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9841': {\n        name: \"Rejuvenation (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 335,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '25299': {\n        name: \"Rejuvenation (Rank 11)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 360,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '5185': {\n        name: \"Healing Touch (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 25,\n        castTime: 1500\n    },\n    '5186': {\n        name: \"Healing Touch (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 55,\n        castTime: 2000\n    },\n    '5187': {\n        name: \"Healing Touch (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 110,\n        castTime: 2500\n    },\n    '5188': {\n        name: \"Healing Touch (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 185,\n        castTime: 3000\n    },\n    '5189': {\n        name: \"Healing Touch (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 270,\n        castTime: 3500\n    },\n    '6778': {\n        name: \"Healing Touch (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 335,\n        castTime: 3500\n    },\n    '8903': {\n        name: \"Healing Touch (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 405,\n        castTime: 3500\n    },\n    '9758': {\n        name: \"Healing Touch (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 495,\n        castTime: 3500\n    },\n    '9888': {\n        name: \"Healing Touch (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 600,\n        castTime: 3500\n    },\n    '9889': {\n        name: \"Healing Touch (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 720,\n        castTime: 3500\n    },\n    '25297': {\n        name: \"Healing Touch (Rank 11)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 800,\n        castTime: 3500\n    },\n    '8936': {\n        name: \"Regrowth (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 120,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8938': {\n        name: \"Regrowth (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 205,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8939': {\n        name: \"Regrowth (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 280,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8940': {\n        name: \"Regrowth (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 350,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8941': {\n        name: \"Regrowth (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 420,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9750': {\n        name: \"Regrowth (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 510,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9856': {\n        name: \"Regrowth (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 615,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9857': {\n        name: \"Regrowth (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 740,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9858': {\n        name: \"Regrowth (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 880,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '740': {\n        name: \"Tranquility (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 375,\n        castTime: 0\n    },\n    '8918': {\n        name: \"Tranquility (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 505,\n        castTime: 0\n    },\n    '9862': {\n        name: \"Tranquility (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 695,\n        castTime: 0\n    },\n    '9863': {\n        name: \"Tranquility (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 925,\n        castTime: 0\n    },\n    '18562': {\n        name: \"Swiftmend\",\n        type: \"Nature\",\n        icon: \"inv_relics_idolofrejuvenation.jpg\",\n        mana: 250,\n        castTime: 0\n    },\n    // Shaman\n    '1064': {\n        name: \"Chain Heal (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 260,\n        castTime: 2500\n    },\n    '10622': {\n        name: \"Chain Heal (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 315,\n        castTime: 2500\n    },\n    '10623': {\n        name: \"Chain Heal (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 405,\n        castTime: 2500\n    },\n    '8004': {\n        name: \"Lesser Healing Wave (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 105,\n        castTime: 1500\n    },\n    '8008': {\n        name: \"Lesser Healing Wave (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 145,\n        castTime: 1500\n    },\n    '8010': {\n        name: \"Lesser Healing Wave (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 185,\n        castTime: 1500\n    },\n    '10466': {\n        name: \"Lesser Healing Wave (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 235,\n        castTime: 1500\n    },\n    '10467': {\n        name: \"Lesser Healing Wave (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 305,\n        castTime: 1500\n    },\n    '10468': {\n        name: \"Lesser Healing Wave (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 380,\n        castTime: 1500\n    },\n    '331': {\n        name: \"Healing Wave (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 25,\n        castTime: 1500\n    },\n    '332': {\n        name: \"Healing Wave (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 45,\n        castTime: 2000\n    },\n    '547': {\n        name: \"Healing Wave (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 80,\n        castTime: 2500\n    },\n    '913': {\n        name: \"Healing Wave (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 155,\n        castTime: 3000\n    },\n    '939': {\n        name: \"Healing Wave (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 200,\n        castTime: 3000\n    },\n    '959': {\n        name: \"Healing Wave (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 265,\n        castTime: 3000\n    },\n    '8005': {\n        name: \"Healing Wave (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 340,\n        castTime: 3000\n    },\n    '10395': {\n        name: \"Healing Wave (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 440,\n        castTime: 3000\n    },\n    '10396': {\n        name: \"Healing Wave (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 560,\n        castTime: 3000\n    },\n    '25357': {\n        name: \"Healing Wave (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 620,\n        castTime: 3000\n    },\n    '5672': {\n        name: \"Healing Stream (Rank 1)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 40,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '6371': {\n        name: \"Healing Stream (Rank 2)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 50,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '6372': {\n        name: \"Healing Stream (Rank 3)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 60,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '10460': {\n        name: \"Healing Stream (Rank 4)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 70,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '10461': {\n        name: \"Healing Stream (Rank 5)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 80,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    // Bandages\n    '746': {\n        name: \"Linen Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_15.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '1159': {\n        name: \"Heavy Linen Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_18.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '3267': {\n        name: \"Wool Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_14.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '3268': {\n        name: \"Heavy Wool Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_17.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7926': {\n        name: \"Silk Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_01.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7927': {\n        name: \"Heavy Silk Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_02.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '10838': {\n        name: \"Mageweave Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_19.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '10839': {\n        name: \"Heave Mageweave Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_20.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '18608': {\n        name: \"Runecloth Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_11.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '18610': {\n        name: \"Heavy Runecloth Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_12.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    // Paladin\n    '19750': {\n        name: \"Flash of Light (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 35,\n        castTime: 1500\n    },\n    '19939': {\n        name: \"Flash of Light (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 50,\n        castTime: 1500\n    },\n    '19940': {\n        name: \"Flash of Light (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 70,\n        castTime: 1500\n    },\n    '19941': {\n        name: \"Flash of Light (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 90,\n        castTime: 1500\n    },\n    '19942': {\n        name: \"Flash of Light (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 115,\n        castTime: 1500\n    },\n    '19943': {\n        name: \"Flash of Light (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 140,\n        castTime: 1500\n    },\n    '635': {\n        name: \"Holy Light (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 35,\n        castTime: 2500\n    },\n    '639': {\n        name: \"Holy Light (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 60,\n        castTime: 2500\n    },\n    '647': {\n        name: \"Holy Light (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 110,\n        castTime: 2500\n    },\n    '1026': {\n        name: \"Holy Light (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 190,\n        castTime: 2500\n    },\n    '1042': {\n        name: \"Holy Light (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 275,\n        castTime: 2500\n    },\n    '3472': {\n        name: \"Holy Light (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 365,\n        castTime: 2500\n    },\n    '10328': {\n        name: \"Holy Light (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 465,\n        castTime: 2500\n    },\n    '10329': {\n        name: \"Holy Light (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 580,\n        castTime: 2500\n    },\n    '25292': {\n        name: \"Holy Light (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 660,\n        castTime: 2500\n    },\n    '633': {\n        name: \"Lay on Hands (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    '2800': {\n        name: \"Lay on Hands (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    '10310': {\n        name: \"Lay on Hands (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    /*'20185': {\n        name: \"Judgement of Light (Rank 1)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20344': {\n        name: \"Judgement of Light (Rank 2)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20345': {\n        name: \"Judgement of Light (Rank 3)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20346': {\n        name: \"Judgement of Light (Rank 4)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    }*/\n\n    '17546': {\n        name: \"Greater Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_22.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7254': {\n        name: \"Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_06.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17548': {\n        name: \"Greater Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_23.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7242': {\n        name: \"Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_44.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17544': {\n        name: \"Greater Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_20.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7240': {\n        name: \"Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_13.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17543': {\n        name: \"Greater Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_24.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7230': {\n        name: \"Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_16.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17549': {\n        name: \"Greater Arcane Protection Potion\",\n        type: \"Arcane\",\n        icon: \"inv_potion_83.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    //Trinkets\n    '26470': {\n        name: \"Scarab Brooch\",\n        type: \"Physical\",\n        icon: \"inv_misc_ahnqirajtrinket_06.jpg\",\n        mana: 0,\n        castTime: 0\n    }\n\n    // Healing Totem\n\n    // Seal of Light\n}\n\nexport const protectionPotionEnum = {\n    GNPP: 17546,\n    NPP: 7254,\n    MNPP: 28513,\n    GSPP: 17548,\n    SPP: 7242,\n    MSPP: 28537,\n    GFrPP: 17544,\n    FrPP: 7240,\n    MFrPP: 28512,\n    GFPP: 17543,\n    FPP: 7230,\n    MFPP: 28511,\n    GAPP: 17549,\n    MAPP: 28536,\n    MHPP: 28538,\n}\nexport const protectionPotions = {\n    '17546': {\n        name: \"Greater Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_22.jpg\",\n        rank: 2,\n    },\n    '7254': {\n        name: \"Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_06.jpg\",\n        rank: 1,\n    },\n    '17548': {\n        name: \"Greater Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_23.jpg\",\n        rank: 2,\n    },\n    '7242': {\n        name: \"Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_44.jpg\",\n        rank: 1,\n    },\n    '17544': {\n        name: \"Greater Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_20.jpg\",\n        rank: 2,\n    },\n    '7240': {\n        name: \"Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_13.jpg\",\n        rank: 1,\n    },\n    '17543': {\n        name: \"Greater Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_24.jpg\",\n        rank: 2,\n    },\n    '7230': {\n        name: \"Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_16.jpg\",\n        rank: 1,\n    },\n    '17549': {\n        name: \"Greater Arcane Protection Potion\",\n        type: \"Arcane\",\n        icon: \"inv_potion_83.jpg\",\n        rank: 2,\n    }\n}\n\nexport const itemSlots = {\n    Head: \"0\",\n    Neck: \"1\",\n    Shoulders: \"2\",\n    Shirt: \"3\",\n    Chest: \"4\",\n    Belt: \"5\",\n    Legs: \"6\",\n    Feet: \"7\",\n    Wrists: \"8\",\n    Hands: \"9\",\n    Finger1: \"10\",\n    Finger2: \"11\",\n    Trinket1: \"12\",\n    Trinket2: \"13\",\n    Back: \"14\",\n    MainHand: \"15\",\n    Offhand: \"16\",\n    Ranged: \"17\",\n    Tabard: \"19\",\n}\n\nconst sharedHealingEnchants = {\n    \"0\": {\n        2544: { score: 0, name: \"Arcanum of Focus (+8 heal)\"},\n        2543: { score: 0, name: \"Arcanum of Rapidity (1% haste)\"},\n        2545: { score: 0, name: \"Arcanum of Protection (1% dodge)\"},\n        1503: { score: 0, name: \"Lesser Arcanum of Constitution (+100hp)\"},\n        1505: { score: 0, name: \"Lesser Arcanum of Resilience (+20FR)\"},\n        1483: { score: 0, name: \"Lesser Arcanum of Rumination (+150mana)\"},\n        1504: { score: 0, name: \"Lesser Arcanum of Tenacity (+125 armor)\"},\n        1506: { score: 0, name: \"Lesser Arcanum of Voracity (+8 str)\"},\n        1507: { score: 0, name: \"Lesser Arcanum of Voracity (+8 stam)\"},\n        1508: { score: 0, name: \"Lesser Arcanum of Voracity (+8 agi)\"},\n        1509: { score: 0, name: \"Lesser Arcanum of Voracity (+8 int)\"},\n        1510: { score: 0, name: \"Lesser Arcanum of Voracity (+8 spi)\"}\n    },\n    \"2\": {  // Shoulders\n        2604: { score: 1, name: \"Zandalar Signet of Serenity\" }  // Zandalar Signet of Serenity\n    },\n    \"4\": {  // Chest\n        1891: { score: 1, name: \"Greater Stats (+4)\" },     // +4 Stats\n        1893: { score: 0.5, name: \"Major Mana (+100)\" },   // Major Mana\n        928: { score: 0.5, name: \"Stats (+3)\" },     // Stats\n        1892: { score: 0, name: \"Major Health (+100)\"}\n    },\n    \"6\": {\n        2544: { score: 0, name: \"Arcanum of Focus (+8 heal)\"},\n        2543: { score: 0, name: \"Arcanum of Rapidity (1% haste)\"},\n        2545: { score: 0, name: \"Arcanum of Protection (1% dodge)\"},\n        1503: { score: 0, name: \"Lesser Arcanum of Constitution (+100hp)\"},\n        1505: { score: 0, name: \"Lesser Arcanum of Resilience (+20FR)\"},\n        1483: { score: 0, name: \"Lesser Arcanum of Rumination (+150mana)\"},\n        1504: { score: 0, name: \"Lesser Arcanum of Tenacity (+125 armor)\"},\n        1506: { score: 0, name: \"Lesser Arcanum of Voracity (+8 str)\"},\n        1507: { score: 0, name: \"Lesser Arcanum of Voracity (+8 stam)\"},\n        1508: { score: 0, name: \"Lesser Arcanum of Voracity (+8 agi)\"},\n        1509: { score: 0, name: \"Lesser Arcanum of Voracity (+8 int)\"},\n        1510: { score: 0, name: \"Lesser Arcanum of Voracity (+8 spi)\"}\n    },\n    \"7\": {  // Feet\n        911: { score: 1, name: \"Minor Run Speed\" },    // Minor Run Speed\n        1887: { score: 0, name: \"Greater Agility (+7)\"},\n        851: { score: 0.5, name: \"Spirit (+5)\"},\n        929: { score: 0, name: \"Greater Stamina (+7)\"}\n    },\n    \"8\": {  // Bracers\n        2566: { score: 1, name: \"Healing Power (+24)\" },  // +24 Healing\n        1886: { score: 0, name: \"Superior Stamina (+9)\"},\n        1885: { score: 0, name: \"Superior Strength (+9)\"},\n        2565: { score: 0, name: \"Mana Regeneration (4mp5)\"},\n        1884: { score: 0, name: \"Superior Spirit (+9)\"},\n        1883: { score: 0, name: \"Greater Intellect (+7)\"}\n    },\n    \"9\": {  // Gloves\n        2617: { score: 1, name: \"Healing Power (+30)\" },  // +30 Healing\n        930: { score: 0, name: \"Riding Skill\" },\n        931: { score: 0, name: \"Minor Haste\" }\n    },\n    \"14\": {  // Back\n        2619: { score: 1, name: \"Greater Fire Resistance (+15)\" }, // Greater Fire Resistance\n        2620: { score: 1, name: \"Greater Nature Resistance (+15)\" }, // Greater Nature Resistance\n        1888: { score: 1, name: \"Greater Resistance (+5)\" },  // Greater Resistance\n        2621: { score: 1, name: \"Subtlety (-2% threat)\" },\n        2622: { score: 0, name: \"Dodge (1% dodge)\" },\n        1889: { score: 0, name: \"Superior Defense (+70 armor)\" }\n    },\n    \"15\": {  // Main Hand\n        2505: { score: 1, name: \"Healing Power (+55)\" },  // +55 Healing\n        2504: { score: 0, name: \"Spell Power (+30)\" },\n        2567: { score: 0, name: \"Mighty Spirit (+20)\" } ,\n        2568: { score: 0, name: \"Mighty Intellect (+22)\" } ,\n        1903: { score: 0, name: \"Major Spirit (+9)\" } ,\n        1904: { score: 0, name: \"Major Intellect (+9)\" } \n    },\n    \"16\": {  // Offhand\n        929: { score: 1, name: \"Greater Stamina (+7)\" },   // +7 Stamina\n        1890: { score: 1, name: \"Superior Spirit (+9)\" },\n        926: { score: 1, name: \"Frost Resistance (+8)\" }\n    }\n}\n\nexport const requiredEnchants = {\n    \"Priest\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2590: { score: 1, name: \"Prophetic Aura\" }  // Prophetic Aura\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2590: { score: 1, name: \"Prophetic Aura\" },  // Prophetic Aura\n        })\n    }),\n    \"Shaman\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2587: { score: 1, name: \"Vodouisant's Vigilant Embrace\" }  // Vodouisant's Vigilant Embrace\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2587: { score: 1, name: \"Vodouisant's Vigilant Embrace\" }  // Vodouisant's Vigilant Embrace\n        })\n    }),\n    \"Druid\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2591: { score: 1, name: \"Animist's Caress\" }  // Animist's Caress\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2591: { score: 1, name: \"Animist's Caress\" }  // Animist's Caress\n        })\n    }),\n    \"Paladin\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2584: { score: 1, name: \"Syncretist's Sigil\" }  // Syncretist's Sigil\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2584: { score: 1, name: \"Syncretist's Sigil\" }  // Syncretist's Sigil\n        })\n    })\n}\n\nexport const offhandFrills = {\n    23049: true,    // Sapphiron's Left Eye\n    23048: true,    // Sapphiron's Right Eye\n    23029: true,    // Noth's Frigid Heart\n    22937: true,    // Gem of Nerubis\n    22994: true,    // Digested Hand of Power\n    19366: true,    // Master Dragonslayer's Orb\n    21597: true,    // Royal Scepter of Vek'lor\n    23452: true,    // Grand Marshal's Tome of Power\n    23468: true,    // High Warlord's Tome of Destruction\n    23469: true,    // High Warlord's Tome of Mending\n    23453: true,    // Grand Marshal's Tome of Restoration\n    21666: true,    // Sartura's Might\n    17067: true,    // Ancient Cornerstone Grimoire\n    20582: true,    // Trance Stone\n    19142: true,    // Fire Runed Grimoire\n    21471: true,    // Talon of Furious Concentration\n    19922: true,    // Arlokk's Hoodoo Stick\n    19891: true,    // Jin'do's Bag of Whammies\n    19312: true,    // Lei of the Lifegiver\n    19315: true,    // Therazane's Touch\n    15942: true,    // Master's Rod\n    15989: true,    // Eternal Rod\n    15941: true,    // High Councillor's Scepter\n    15968: true,    // Elunarian Sphere\n    22329: true,    // Scepter of Interminable Focus\n    18523: true,    // Brightly Glowing Stone\n    13353: true,    // Book of the Dead\n    22253: true,    // Tome of the Lost\n    15988: true,    // Resplendent Orb\n    21185: true,    // Earthcalm Orb\n    23156: true,    // Blackwood's Thigh\n    18695: true,    // Spellbound Tome\n    15940: true,    // Elegant Scepter\n    13385: true,    // Tome of Knowledge\n    22319: true,    // Tome of Divine Right\n    15805: true,    // Penelope's Rose,\n    15987: true,    // Astral Orb\n    15931: true,    // Arcane Star\n    15857: true,    // Magebane Scion\n    11928: true    // Thaurissan's Royal Scepter\n}\n\nexport const trackedDamageTakenSpells = [\n    {\n        name: \"Whirlwind\",\n        ids: [1680,15589,26686,26084]\n    },\n    {\n        name: \"Rain of Fire\",\n        ids: [5740,11678,11677,6219,28794]\n    },\n    {\n        name: \"Fire Shield\",\n        ids: [8317,8316,2947,11770,11771]\n    },\n    {\n        name: \"Flames\",\n        ids: [7897,12796,19628,29115,15643]\n    },\n    {\n        name: \"Cleave\",\n        ids: [797,3433,3434,3435,5532,11427,15284,15496,15579,15584,15613,15622,15623,15663,16044,17685,19632,19642,20571,20605,20666,20677,20684,20691,22540,26350,27794,19983]\n    },\n    {\n        name: \"Blizzard\",\n        ids: [26607]\n    },\n    {\n        name: \"Explode\",\n        ids: [26059,25699]\n    },\n    {\n        name: \"Impale\",\n        ids: [26025]\n    },\n    {\n        name: \"Bomb\",\n        ids: [8858,9143,22334]\n    },\n    {\n        name: \"Thunderclap\",\n        ids: [26554,8732]\n    },\n    {\n        name: \"Shadow Storm\",\n        ids: [26546,26555]\n    },\n    {\n        name: \"Dark Glare\",\n        ids: [41936,41937,26029]\n    },\n    {\n        name: \"Falling\",\n        ids: [3]\n    },\n    {\n        name: \"Void Zone\",\n        ids: [28863,28865]\n    },\n    {\n        name: \"Poison Cloud\",\n        ids: [28240,28241]\n    },\n    {\n        name: \"Frost Breath\",\n        ids: [3129,28524]\n    },\n    {\n        name: \"Eruption\",\n        ids: [29371]\n    },\n    {\n        name: \"Brood Power Bronze\",\n        ids: [22311]\n    },\n    {\n        name: \"Void Blast\",\n        ids: [27812]\n    },\n    {\n        name: \"Tail Sweep\",\n        ids: [15847,25653]\n    },\n    {\n        name: \"Positive Charge\",\n        ids: [28062]\n    },\n    {\n        name: \"Negative Charge\",\n        ids: [28085]\n    },\n    {\n        name: \"Disrupting Shout\",\n        ids: [29107]\n    },\n    {\n        name: \"Chill\",\n        ids: [28547]\n    },\n    {\n        name: \"Dark Blast\",\n        ids: [28457]\n    },\n    {\n        name: \"Wail of Souls\",\n        ids: [28459]\n    }\n]\n\nexport const rarity = {\n    Common: \"Common\",\n    Uncommon: \"Uncommon\",\n    Rare: \"Rare\",\n    Epic: \"Epic\",\n}\n\n// Spec list\n// Druid\n// Druid-Restoration\n// Druid-Balance\n// Druid-Guardian\n// Druid-Feral\n// Hunter\n// Hunter-BeastMastery\n// Hunter-Survival\n// Hunter-Marksmanship\n// Mage\n// Mage-Fire\n// Mage-Arcane\n// Mage-Frost\n// Paladin\n// Paladin-Retribution\n// Paladin-Holy\n// Paladin-Protection\n// Priest\n// Priest-Holy\n// Priest-Discipline\n// Priest-Shadow\n// Rogue\n// Rogue-Combat\n// Rogue-Subtlety\n// Rogue-Assassination\n// Shaman\n// Shaman-Restoration\n// Shaman-Enhancement\n// Shaman-Elemental\n// Warlock\n// Warlock-Destruction\n// Warlock-Affliction\n// Warlock-Demonology\n// Warrior\n// Warrior-Arms\n// Warrior-Fury\n// Warrior-Protection\n\nexport const enchants = {\n    3001: {\n        name: \"Glyph of Renewal\",\n        itemId: 29190,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    3003: {\n        name: \"Glyph of Ferocity\",\n        itemId: 29192,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    3002: {\n        name: \"Glyph of Power\",\n        itemId: 29191,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Druid-Balance\": 1,\n            \"Mage-Arcane\": 1,\n            \"Mage-Fire\": 1,\n            \"Mage-Frost\": 1,\n            \"Shaman-Elemental\": 1,\n            \"Priest-Shadow\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    2999: {\n        name: \"Glyph of the Defender\",\n        itemId: 29186,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n            \"Druid-Guardian\": 1,\n        }\n    },\n    2583: {\n        name: \"Presence of Might\",\n        itemId: 19782,\n        score: {\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2979: {\n        name: \"Inscription of Faith\",\n        itemId: 28878,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n        }\n    },\n    2980: {\n        name: \"Greater Inscription of Faith\",\n        itemId: 28887,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2715: {\n        name: \"Resilience of the Scourge\",\n        itemId: 23547,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2604: {\n        name: \"Zandalar Signet of Serenity\",\n        itemId: 20078,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n        }\n    },\n    2992: {\n        name: \"Inscription of the Oracle\",\n        itemId: 28904,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n        }\n    },\n    2993: {\n        name: \"Greater Inscription of the Oracle\",\n        itemId: 28912,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2717: {\n        name: \"Might of the Scourge\",\n        itemId: 23548,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2996: {\n        name: \"Inscription of the Blade\",\n        itemId: 28907,\n        score: {\n            \"Druid-Guardian\": 0.5,\n            \"Druid-Feral\": 0.5,\n            \"Rogue-Combat\": 0.5,\n            \"Rogue-Subtlety\": 0.5,\n            \"Rogue-Assassination\": 0.5,\n            \"Shaman-Enhancement\": 0.5,\n            \"Paladin-Retribution\": 0.5,\n            \"Warrior-Arms\": 0.5,\n            \"Warrior-Fury\": 0.5,\n            \"Hunter-BeastMastery\": 0.5,\n            \"Hunter-Survival\": 0.5,\n            \"Hunter-Marksmanship\": 0.5,\n        }\n    },\n    2997: {\n        name: \"Greater Inscription of the Blade\",\n        itemId: 28910,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2983: {\n        name: \"Inscription of Vengeance\",\n        itemId: 28885,\n        score: {\n            \"Druid-Guardian\": 0.5,\n            \"Druid-Feral\": 0.5,\n            \"Rogue-Combat\": 0.5,\n            \"Rogue-Subtlety\": 0.5,\n            \"Rogue-Assassination\": 0.5,\n            \"Shaman-Enhancement\": 0.5,\n            \"Paladin-Retribution\": 0.5,\n            \"Warrior-Arms\": 0.5,\n            \"Warrior-Fury\": 0.5,\n            \"Hunter-BeastMastery\": 0.5,\n            \"Hunter-Survival\": 0.5,\n            \"Hunter-Marksmanship\": 0.5,\n        }\n    },\n    2716: {\n        name: \"Fortitude of the Scourge\",\n        itemId: 23549,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n            \"Druid-Guardian\": 1,\n        }\n    },\n    2977: {\n        name: \"Inscription of Warding\",\n        itemId: 28882,\n        score: {\n            \"Paladin-Protection\": 0.5,\n            \"Warrior-Protection\": 0.5,\n            \"Druid-Guardian\": 0.5,\n        }\n    },\n    2978: {\n        name: \"Greater Inscription of Warding\",\n        itemId: 28889,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n            \"Druid-Guardian\": 1,\n        }\n    },\n    2990: {\n        name: \"Inscription of the Knight\",\n        itemId: 28908,\n        score: {\n            \"Paladin-Protection\": 0.5,\n            \"Warrior-Protection\": 0.5,\n            \"Druid-Guardian\": 0.5,\n        }\n    },\n    2991: {\n        name: \"Greater Inscription of the Knight\",\n        itemId: 28911,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n            \"Druid-Guardian\": 1,\n        }\n    },\n    2986: {\n        name: \"Greater Inscription of Vengeance\",\n        itemId: 28888,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2981: {\n        name: \"Inscription of Discipline\",\n        itemId: 28881,\n        score: {\n            \"Druid-Balance\": 0.5,\n            \"Mage-Arcane\": 0.5,\n            \"Mage-Fire\": 0.5,\n            \"Mage-Frost\": 0.5,\n            \"Shaman-Elemental\": 0.5,\n            \"Priest-Shadow\": 0.5,\n            \"Warlock-Destruction\": 0.5,\n            \"Warlock-Affliction\": 0.5,\n            \"Warlock-Demonology\": 0.5,\n        }\n    },\n    2982: {\n        name: \"Greater Inscription of Discipline\",\n        itemId: 28886,\n        score: {\n            \"Druid-Balance\": 1,\n            \"Mage-Arcane\": 1,\n            \"Mage-Fire\": 1,\n            \"Mage-Frost\": 1,\n            \"Shaman-Elemental\": 1,\n            \"Priest-Shadow\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    2994: {\n        name: \"Inscription of the Orb\",\n        itemId: 28903,\n        score: {\n            \"Druid-Balance\": 0.5,\n            \"Mage-Arcane\": 0.5,\n            \"Mage-Fire\": 0.5,\n            \"Mage-Frost\": 0.5,\n            \"Shaman-Elemental\": 0.5,\n            \"Priest-Shadow\": 0.5,\n            \"Warlock-Destruction\": 0.5,\n            \"Warlock-Affliction\": 0.5,\n            \"Warlock-Demonology\": 0.5,\n        }\n    },\n    2995: {\n        name: \"Greater Inscription of the Orb\",\n        itemId: 28909,\n        score: {\n            \"Druid-Balance\": 1,\n            \"Mage-Arcane\": 1,\n            \"Mage-Fire\": 1,\n            \"Mage-Frost\": 1,\n            \"Shaman-Elemental\": 1,\n            \"Priest-Shadow\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    2721: {\n        name: \"Power of the Scourge\",\n        itemId: 23545,\n        score: {\n            \"Shaman-Elemental\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    2605: {\n        name: \"Zandalar Signet of Mojo\",\n        itemId: 20076,\n        score: {\n            \"Priest-Shadow\": 1,\n        }\n    },\n    368: {\n        name: \"Enchant Cloak - Greater Agility\",\n        spellId: 46505,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Warrior-Protection\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2622: {\n        name: \"Enchant Cloak - Dodge\",\n        spellId: 25086,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    1441: {\n        name: \"Enchant Cloak - Greater Shadow Resistance\",\n        spellId: 34006,\n        score: {\n            \"Shaman-Restoration\": 1\n        }\n    },\n    2621: {\n        name: \"Enchant Cloak - Subtlety\",\n        spellId: 25084,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Druid-Restoration\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Druid-Balance\": 1,\n            \"Mage-Arcane\": 1,\n            \"Mage-Fire\": 1,\n            \"Mage-Frost\": 1,\n            \"Shaman-Elemental\": 1,\n            \"Priest-Shadow\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    2664: {\n        name: \"Enchant Cloak - Major Resistance\",\n        spellId: 27962,\n        score: {\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n        }\n    },\n    2662: {\n        name: \"Enchant Cloak - Major Armor\",\n        spellId: 27961,\n        score: {\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Priest-Shadow\": 1,\n        }\n    },\n    1889: {\n        name: \"Enchant Cloak - Superior Defense\",\n        spellId: 20015,\n        score: {\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n        }\n    },\n    3150: {\n        name: \"Enchant Chest - Restore Mana Prime\",\n        spellId: 33991,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Paladin-Holy\": 1,\n        }\n    },\n    2661: {\n        name: \"Enchant Chest - Exceptional Stats\",\n        spellId: 27960,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Warrior-Protection\": 1,\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n            \"Druid-Balance\": 1,\n            \"Mage-Arcane\": 1,\n            \"Mage-Fire\": 1,\n            \"Mage-Frost\": 1,\n            \"Shaman-Elemental\": 1,\n            \"Priest-Shadow\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    1144: {\n        name: \"Enchant Chest - Major Spirit\",\n        spellId: 33990,\n        score: {\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Druid-Restoration\": 1,\n            \"Priest-Shadow\": 1,\n        }\n    },\n    2933: {\n        name: \"Enchant Chest - Resilience Rating\",\n        spellId: 33992,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n            \"Druid-Guardian\": 1,\n        }\n    },\n    2659: {\n        name: \"Enchant Chest - Exceptional Health\",\n        spellId: 27957,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    1950: {\n        name: \"Enchant Chest - Defense\",\n        spellId: 46594,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    2617: {\n        name: \"Enchant Bracer - Superior Healing\",\n        spellId: 27911,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2566: {\n        name: \"Enchant Bracer - Healing Power\",\n        spellId: 23802,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n        }\n    },\n    2649: {\n        name: \"Enchant Bracer - Fortitude\",\n        spellId: 27914,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n            \"Priest-Shadow\": 1,\n        }\n    },\n    2648: {\n        name: \"Enchant Bracer - Major Defense\",\n        spellId: 27906,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Druid-Guardian\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2650: {\n        name: \"Enchant Bracer - Spellpower\",\n        spellId: 27917,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Druid-Balance\": 1,\n            \"Mage-Arcane\": 1,\n            \"Mage-Fire\": 1,\n            \"Mage-Frost\": 1,\n            \"Shaman-Elemental\": 1,\n            \"Priest-Shadow\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    2647: {\n        name: \"Enchant Bracer - Brawn\",\n        spellId: 27899,\n        score: {\n            \"Druid-Feral\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n        }\n    },\n    1593: {\n        name: \"Enchant Bracer - Assault\",\n        spellId: 34002,\n        score: {\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2613: {\n        name: \"Enchant Gloves - Threat\",\n        spellId: 25072,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2937: {\n        name: \"Enchant Gloves - Major Spellpower\",\n        spellId: 33997,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Druid-Balance\": 1,\n            \"Mage-Arcane\": 1,\n            \"Mage-Fire\": 1,\n            \"Mage-Frost\": 1,\n            \"Shaman-Elemental\": 1,\n            \"Priest-Shadow\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    2614: {\n        name: \"Enchant Gloves - Shadow Power\",\n        spellId: 25073,\n        score: {\n            \"Priest-Shadow\": 1,\n        }\n    },\n    2564: {\n        name: \"Enchant Gloves - Superior Agility\",\n        spellId: 25080,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2322: {\n        name: \"Enchant Gloves - Major Healing\",\n        spellId: 33999,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2935: {\n        name: \"Enchant Gloves - Spell Strike\",\n        spellId: 33994,\n        score: {\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    1594: {\n        name: \"Enchant Gloves - Assault\",\n        spellId: 33996,\n        score: {\n\n        }\n    },\n    684: {\n        name: \"Enchant Gloves - Major Strength\",\n        spellId: 46515,\n        score: {\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n        }\n    },\n    2746: {\n        name: \"Golden Spellthread\",\n        itemId: 24276,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2745: {\n        name: \"Silver Spellthread\",\n        itemId: 24275,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n        }\n    },\n    2747: {\n        name: \"Mystic Spellthread\",\n        itemId: 24273,\n        score: {\n            \"Paladin-Protection\": 0.5,\n            \"Druid-Balance\": 0.5,\n            \"Mage-Arcane\": 0.5,\n            \"Mage-Fire\": 0.5,\n            \"Mage-Frost\": 0.5,\n            \"Shaman-Elemental\": 0.5,\n            \"Priest-Shadow\": 0.5,\n            \"Warlock-Destruction\": 0.5,\n            \"Warlock-Affliction\": 0.5,\n            \"Warlock-Demonology\": 0.5,\n        }\n    },\n    2748: {\n        name: \"Runic Spellthread\",\n        itemId: 24274,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Druid-Balance\": 1,\n            \"Mage-Arcane\": 1,\n            \"Mage-Fire\": 1,\n            \"Mage-Frost\": 1,\n            \"Shaman-Elemental\": 1,\n            \"Priest-Shadow\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    3011: {\n        name: \"Clefthide Leg Armor\",\n        itemId: 29534,\n        score: {\n            \"Druid-Guardian\": 0.5,\n            \"Paladin-Protection\": 0.5,\n            \"Warrior-Protection\": 0.5,\n        }\n    },\n    3013: {\n        name: \"Nethercleft Leg Armor\",\n        itemId: 29536,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    3010: {\n        name: \"Cobrahide Leg Armor\",\n        itemId: 29533,\n        score: {\n            \"Druid-Feral\": 0.5,\n            \"Rogue-Combat\": 0.5,\n            \"Rogue-Subtlety\": 0.5,\n            \"Rogue-Assassination\": 0.5,\n            \"Shaman-Enhancement\": 0.5,\n            \"Paladin-Retribution\": 0.5,\n            \"Warrior-Arms\": 0.5,\n            \"Warrior-Fury\": 0.5,\n            \"Hunter-BeastMastery\": 0.5,\n            \"Hunter-Survival\": 0.5,\n            \"Hunter-Marksmanship\": 0.5,\n        }\n    },\n    3012: {\n        name: \"Nethercobra Leg Armor\",\n        itemId: 29535,\n        score: {\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2940: {\n        name: \"Enchant Boots - Boar's Speed\",\n        spellId: 34008,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n            \"Druid-Guardian\": 1,\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n            \"Druid-Balance\": 1,\n            \"Mage-Arcane\": 1,\n            \"Mage-Fire\": 1,\n            \"Mage-Frost\": 1,\n            \"Shaman-Elemental\": 1,\n            \"Priest-Shadow\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    911: {\n        name: \"Enchant Boots - Minor Speed\",\n        spellId: 13890,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n            \"Shaman-Enhancement\": 0.5,\n            \"Druid-Balance\": 0.5,\n            \"Mage-Arcane\": 0.5,\n            \"Mage-Fire\": 0.5,\n            \"Mage-Frost\": 0.5,\n            \"Shaman-Elemental\": 0.5,\n            \"Priest-Shadow\": 0.5,\n            \"Warlock-Destruction\": 0.5,\n            \"Warlock-Affliction\": 0.5,\n            \"Warlock-Demonology\": 0.5,\n        }\n    },\n    2657: {\n        name: \"Enchant Boots - Dexterity\",\n        spellId: 27951,\n        score: {\n            \"Paladin-Retribution\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n        }\n    },\n    2658: {\n        name: \"Enchant Boots - Surefooted\",\n        spellId: 27954,\n        score: {\n            \"Paladin-Retribution\": 1,\n        }\n    },\n    2939: {\n        name: \"Enchant Boots - Cat's Swiftness\",\n        spellId: 34007,\n        score: {\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n        }\n    },\n    2656: {\n        name: \"Enchant Boots - Vitality\",\n        spellId: 27948,\n        score: {\n            \"Priest-Shadow\": 1,\n        }\n    },\n    2343: {\n        name: \"Enchant Weapon - Major Healing\",\n        spellId: 34010,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2670: {\n        name: \"Enchant 2H Weapon - Major Agility\",\n        spellId: 27977,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2669: {\n        name: \"Enchant Weapon - Major Spellpower\",\n        spellId: 27975,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Mage-Arcane\": 1,\n            \"Mage-Fire\": 1,\n            \"Mage-Frost\": 1,\n            \"Shaman-Elemental\": 1,\n            \"Priest-Shadow\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n            \"Druid-Balance\": 1,\n        }\n    },\n    2673: {\n        name: \"Enchant Weapon - Mongoose\",\n        spellId: 27984,\n        score: {\n            \"Warrior-Protection\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n        }\n    },\n    2671: {\n        name: \"Enchant Weapon - Sunfire\",\n        spellId: 27981,\n        score: {\n            \"Druid-Balance\": 1,\n            \"Mage-Arcane\": 1,\n            \"Warlock-Destruction\": 1,\n        }\n    },\n    2672: {\n        name: \"Enchant Weapon - Soulfrost\",\n        spellId: 27982,\n        score: {\n            \"Mage-Frost\": 1,\n            \"Priest-Shadow\": 1,\n            \"Warlock-Destruction\": 1,\n            \"Warlock-Affliction\": 1,\n            \"Warlock-Demonology\": 1,\n        }\n    },\n    2654: {\n        name: \"Enchant Shield - Intellect\",\n        spellId: 27945,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Paladin-Holy\": 1,\n            \"Shaman-Elemental\": 1,\n        }\n    },\n    1071: {\n        name: \"Enchant Shield - Major Stamina\",\n        spellId: 34009,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2655: {\n        name: \"Enchant Shield - Shield Block\",\n        spellId: 27946,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    2841: {\n        name: \"Heavy Knothide Armor Kit\",\n        itemId: 34330,\n        score: {\n            \"Paladin-Protection\": 1\n        }\n    },\n    2724: {\n        name: \"Stabilitzed Eternium Scope\",\n        itemId: 23766,\n        score: {\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2723: {\n        name: \"Khorium Scope\",\n        itemId: 23765,\n        score: {\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n        }\n    }\n}\n\nexport const resistanceGems = {\n    22459: {   // Void sphere\n        arcane: 4,\n        fire: 4,\n        frost: 4,\n        nature: 4,\n        shadow: 4,\n    },\n\n    22460: {   // Prismatic sphere\n        arcane: 3,\n        fire: 3,\n        frost: 3,\n        nature: 3,\n        shadow: 3,\n    }\n};\n\nexport const resistanceEnchants = {\n    1441: { // Enchant Cloak - Greater Shadow Resistance\n        shadow: 15\n    },\n    1257: { // Enchant Cloak - Greater Arcane Resistance\n        arcane: 15\n    },\n    2664: { // Enchant Cloak - Major Resistance\n        arcane: 7,\n        fire: 7,\n        frost: 7,\n        nature: 7,\n        shadow: 7\n    },\n    1888: { // Enchant Shield - Resistance (Enchant Cloak - Greater Resistance)\n        arcane: 5,\n        fire: 5,\n        frost: 5,\n        nature: 5,\n        shadow: 5\n    },\n    2620: { // Enchant Cloak - Greater Nature Resistance\n        nature: 15\n    },\n    2619: { // Enchant Cloak - Greater Fire Resistance\n        fire: 15\n    },\n    926: {  // Enchant Shield - Frost Resistance\n        frost: 8\n    },\n    903: {  // Enchant Cloak - Resistance\n        arcane: 3,\n        fire: 3,\n        frost: 3,\n        nature: 3,\n        shadow: 3\n    },\n    2463: { // Enchant Cloak - Fire Resistance\n        fire: 7\n    },\n    804: {  // Enchant Cloak - Lesser Shadow Resistance\n        shadow: 10\n    },\n    256: {  // Enchant Cloak - Lesser Fire Resistance\n        fire: 5\n    },\n    65: {   // Enchant Cloak - Minor Resistance\n        arcane: 1,\n        fire: 1,\n        frost: 1,\n        nature: 1,\n        shadow: 1\n    },\n    2984: { // Shadow Armor Kit\n        shadow: 8\n    },\n    3009: { // Glyph of Shadow Warding\n        shadow: 20\n    },\n    2683: { // Shadow Guard\n        shadow: 10\n    },\n    2998: { // Inscription of Endurance\n        arcane: 7,\n        fire: 7,\n        frost: 7,\n        nature: 7,\n        shadow: 7\n    },\n    2985: { // Flame Armor Kit\n        fire: 8\n    },\n    2487: { // Shadow Mantle of the Dawn\n        shadow: 5\n    },\n    1505: { // Lesser Arcanum of Resilience\n        fire: 20\n    },\n    3007: { // Glyph of Fire Warding\n        fire: 20\n    },\n    2988: { // Nature Armor Kit\n        nature: 8\n    },\n    2987: { // Frost Armor Kit\n        frost: 8\n    },\n    3008: { // Glyph of Frost Warding\n        frost: 20\n    },\n    2488: { // Chromatic Mandle of the Dawn\n        arcane: 5,\n        fire: 5,\n        frost: 5,\n        nature: 5,\n        shadow: 5\n    },\n    2989: { // Arcane Armor Kit\n        arcane: 8\n    },\n    2681: { // Savage Guard\n        nature: 10\n    },\n    3095: { // Glyph of Chromatic Warding\n        arcane: 8,\n        fire: 8,\n        frost: 8,\n        nature: 8,\n        shadow: 8\n    },\n    2483: { // Flame Mantle of the Dawn\n        fire: 5\n    },\n    3006: { // Glyph of Arcane Warding\n        arcane: 20\n    },\n    2485: { // Arcane Mantle of the Dawn\n        arcane: 5\n    },\n    2682: { // Ice Guard\n        frost: 10\n    },\n    2484: { // Frost Guard\n        frost: 5\n    },\n    2486: { // Nature Mantle of the Dawn\n        nature: 5\n    }\n}\n\n/*\nconst slots = {\n    0: { enchantable: true, name: \"Head\" },\n    1: { enchantable: false, name: \"Neck\" },\n    2: { enchantable: true, name: \"Shoulders\" },\n    3: { enchantable: false, name: \"Shirt\" },\n    4: { enchantable: true, name: \"Chest\" },\n    5: { enchantable: false, name: \"Waist\" },\n    6: { enchantable: true, name: \"Legs\" },\n    7: { enchantable: true, name: \"Feet\" },\n    8: { enchantable: true, name: \"Arms\" },\n    9: { enchantable: true, name: \"Hands\" },\n    10: { enchantable: false, name: \"Ring 1\" },\n    11: { enchantable: false, name: \"Ring 2\" },\n    12: { enchantable: false, name: \"Trinket 1\" },\n    13: { enchantable: false, name: \"Trinket 2\" },\n    14: { enchantable: true, name: \"Back\" },\n    15: { enchantable: true, name: \"Main Hand\" },\n    16: { enchantable: true, name: \"Off Hand\" },\n    17: { enchantable: true, name: \"Ranged\" },\n    18: { enchantable: false, name: \"Tabard\" }\n};\n*/\nconst highResist = {\n    120: 37,\n    117: 36,\n    114: 35,\n    111: 34,\n    109: 39,    // rare\n    108: 33,\n    105: 32,\n    102: 31,\n    99: 30,\n    96: 29,\n    93: 28,\n    90: 27,\n    87: 26,\n    84: 25,\n    82: 31,     // rare\n    81: 24,\n};\n\nconst medResist = {\n    120: 27,\n    117: 27,\n    114: 26,\n    111: 25,\n    109: 30,    // rare\n    108: 25,\n    105: 23,\n    102: 23,\n    99: 22,\n    96: 21,\n    93: 21,\n    91: 26,     // rare\n    90: 20,\n    87: 19,\n    84: 19,\n    81: 17,\n};\n\nconst lowResist = {\n    120: 21,\n    117: 20,\n    115: 27,    // epic\n    114: 19,\n    111: 19,\n    108: 18,\n    105: 17,\n    103: 21,    // rare\n    102: 17,\n    99: 17,\n    96: 16,\n    94: 19,     // rare\n    93: 15,\n    90: 15,\n    87: 14,\n    84: 13,\n    81: 13,\n};\n\nexport const resistRandomEnchantBySlot = {\n    0: highResist,\n    1: lowResist,\n    2: medResist,\n    4: highResist,\n    5: medResist,\n    6: highResist,\n    7: medResist,\n    8: lowResist,\n    9: medResist,\n    10: lowResist,\n    11: lowResist,\n    14: lowResist,\n    16: lowResist,\n}\n","export function msToTime(s) {\n    var ms = s % 1000;\n    s = (s - ms) / 1000;\n    var secs = s % 60;\n    s = (s - secs) / 60;\n    var mins = s % 60;\n    s = (s - mins) / 60;\n    var hours = s % 24;\n\n    return (hours > 0 ? hours + \":\" + (mins < 10 ? \"0\" : \"\") : \"\") + mins + ':' + (secs < 10 ? \"0\" : \"\") + secs;\n}\n\nexport function abbreviateNumber(num) {\n    if (num > 1000) {\n        return (num / 1000).toFixed(1) + \"k\";\n    }\n\n    return num;\n}\n\nexport function asPercentage(num, decimals = 1) {\n    return (num*100).toFixed(decimals) + \"%\";\n}\n\nexport function removeDuplicates(array, keyAccessFunction) {\n    if (!keyAccessFunction || typeof(keyAccessFunction) !== 'function') {\n        keyAccessFunction = (obj) => obj;\n    }\n\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(keyAccessFunction(a[i]) === keyAccessFunction(a[j]))\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n};\n\nexport function countNonNull(...params) {\n    return params.reduce((agg, obj) => {\n        if (obj) {\n            agg++\n        }\n\n        return agg;\n    }, 0);\n}\n\nexport function sumNonNull(...params) {\n    return params.reduce((agg, obj) => {\n        if (obj) {\n            agg += obj;\n        }\n\n        return agg;\n    }, 0);\n}\n\nexport function arrayToDictionary(array, key) {\n    return array.reduce((accum, value) => ({...accum, [value[key]]: value}), {});\n}","import druid from './classes/druid.json';\nimport hunter from './classes/hunter.json';\nimport mage from './classes/mage.json';\nimport paladin from './classes/paladin.json';\nimport priest from './classes/priest.json';\nimport rogue from './classes/rogue.json';\nimport shaman from './classes/shaman.json';\nimport warlock from './classes/warlock.json';\nimport warrior from './classes/warrior.json';\nimport racials from './racials.json';\nimport items from './items.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...druid, ...hunter, ...mage, ...paladin, ...priest, ...rogue, ...shaman, ...warlock, ...warrior, ...racials, ...items];","import back from './back.json';\nimport chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...back, ...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import cloth from './cloth';\nimport leather from './leather';\nimport mail from './mail';\nimport plate from './plate';\n\nimport idol from './idol/relic.json';\nimport libram from './libram/relic.json';\nimport totem from './totem/relic.json';\n\nimport rings from './miscellaneous/finger.json';\nimport neck from './miscellaneous/neck.json';\nimport questNeck from '../quest/neck.json';\n\nimport offhandfrills from './miscellaneous/held-in-off-hand.json';\nimport shields from './shield/off-hand.json';\n\nimport trinkets_raw from './miscellaneous/trinket.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...cloth, ...leather, ...mail, ...plate, ...idol, ...libram, ...totem, ...rings, ...neck, ...questNeck, ...offhandfrills, ...shields, ...trinkets_raw];\n\nexport const relics = [...idol, ...libram, ...totem];\nexport const jewellery = [...rings, ...neck, ...questNeck];\nexport const offhand = [...offhandfrills, ...shields];\n\nexport const trinkets = trinkets_raw;","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\nimport twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand, ...twohand];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\nimport twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand, ...twohand];","import twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...twohand];","import twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...twohand];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\nimport twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand, ...twohand];","import thrown from './thrown.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...thrown];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import axes from './axe';\nimport bows from './bow';\nimport crossbows from './crossbow';\nimport daggers from './dagger';\nimport fists from './fist-weapon';\nimport guns from './gun';\nimport maces from './mace';\nimport polearms from './polearm';\nimport staves from './staff';\nimport swords from './sword';\nimport thrown from './thrown'\nimport wands from './wand';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...axes, ...bows, ...crossbows, ...daggers, ...fists, ...guns, ...maces, ...polearms, ...staves, ...swords, ...thrown, ...wands];","import armor from \"./armor\";\nimport weapons from './weapon';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...armor, ...weapons];\n\nexport {relics} from './armor';\nexport {trinkets} from './armor';\n","import { arrayToDictionary } from \"../utils\";\nimport bosses_raw from \"./bosses.json\";\nimport gems_raw from \"./gems.json\";\nimport cooldowns_raw from './cooldowns';\nimport gear_raw from './gear';\n\nexport {default as tempWeaponEnchants} from './buffs/temp-enchant.json';\nexport {default as seasonBuffs} from './buffs/seasonal.json';\nexport {default as flaskBuffs} from './buffs/flask.json';\nexport {default as battleElixirBuffs} from './buffs/elixir-battle.json';\nexport {default as guardianElixirBuffs} from './buffs/elixir-guardian.json';\nexport {default as scrollBuffs} from './buffs/scroll.json';\nexport {default as foodBuffs} from './buffs/food.json';\n\nexport const bosses = arrayToDictionary(bosses_raw, \"id\");\nexport const gemList = arrayToDictionary(gems_raw, \"id\");\nexport const cooldownList = arrayToDictionary(cooldowns_raw, \"id\");\nexport const itemList = arrayToDictionary(gear_raw, \"id\");","import { resistanceEnchants, resistanceGems, resistRandomEnchantBySlot } from \"./data\";\nimport {itemList, gemList} from \"./datastore\";\nimport {removeDuplicates} from \"./utils\";\n\nexport class WarcraftLogLoader {\n    constructor(reportId = null) {\n        this.key = \"e422378c419a25cc1accb41845b259ab\";\n        this.domain = \"https://classic.warcraftlogs.com/v1/\";\n        this.reportId = reportId;\n        this.Results = {};\n        this._loadedStatus = {\n            fights: false,\n            characterSummaries: false,\n            deaths: false,\n            interrupts: false,\n            character: {\n                details: {},\n                casts: {},\n                buffs: {},\n                damageTaken: {},\n                protectionPots: {},\n            }\n        }\n    }\n\n    static Load(reportId) {\n        return new WarcraftLogLoader(reportId);\n    }\n\n    setReport(reportId) {\n        this.reportId = reportId;\n    }\n\n    loadFights() {\n        if (this._loadedStatus.fights) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return fetch(this.domain + \"report/fights/\" + this.reportId + \"?api_key=\" + this.key)\n            .then(res => res.json())\n            .then(res => {\n                this.Results.Fights = res.fights;\n                this.Results.FightType = res.fights.reduce((acc,obj) => {\n                    acc[obj.id] = (obj.boss > 0 ? \"boss\" : \"trash\");\n\n                    return acc;\n                }, {})\n                this.Results.Characters = res.friendlies\n                    .filter(character => character.type !== \"NPC\" && character.type !== \"Pet\" && character.type !== \"Boss\")\n                    .reduce((acc,obj) => {\n                    acc[obj.id] = obj;\n\n                    acc[obj.id].raidStartTime = res.fights[obj.fights[0].id-1].start_time;\n\n                    return acc;\n                }, {});\n                // Add pet information to their owner\n                res.friendlyPets.forEach((pet) => {\n                    if (!this.Results.Characters[pet.petOwner])\n                        return;\n                    \n                    if (!this.Results.Pets) {\n                        this.Results.Pets = {};\n                    }\n\n                    this.Results.Characters[pet.petOwner].pets = [...(this.Results.Characters[pet.petOwner].pets || []),pet];\n                    this.Results.Pets[pet.id] = pet;\n                })\n                this.Results.title = res.title;\n                this.Results.startTimestamp = res.start;\n                this.Results.endTimestamp = res.end;\n                this.Results.startTime = res.fights[0].start_time;\n                this.Results.endTime = res.fights[res.fights.length-1].end_time;\n\n                this._loadedStatus.fights = true;\n\n                return this;\n            });\n    }\n\n    _getPlayerData(data) {\n        let playerData = [];\n\n        if (data.playerDetails?.tanks) {\n            playerData = data.playerDetails.tanks.reduce(this._reducePlayerDetails(\"tank\"), {});\n        }\n\n        if (data.playerDetails?.healers) {\n            playerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), playerData);\n        }\n\n        if (data.playerDetails?.dps) {\n            playerData = data.playerDetails.dps.reduce(this._reducePlayerDetails(\"dps\"), playerData);\n        }\n\n        return playerData;\n    }\n\n    _getCharacterSummaryPromise(fight) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n            + \"?api_key=\" + this.key \n            + \"&start=\" + (fight?.start_time ?? this.Results.startTime)\n            + \"&end=\" + (fight?.end_time ?? this.Results.endTime)\n            + (fight ? \"&fight=\" + fight.id : \"\"))\n            .then(response => response.json())\n            .then(data => {\n                let playerData = this._getPlayerData(data);\n\n                Object.entries(playerData).forEach(([key,value]) => {\n                    let playerInfo = this.Results.Characters[key];\n            \n                    if (fight) {\n                        if (!playerInfo.perFight) {\n                            playerInfo.perFight = {};\n                        }\n\n                        playerInfo.perFight[fight.id] = {};\n                        playerInfo = playerInfo.perFight[fight.id];\n                    }\n                    else {\n                        playerInfo.summary = {};\n                        playerInfo = playerInfo.summary;\n                    }\n\n                    playerInfo.roles = value.roles;\n                    playerInfo.specs = value.specs;\n                    playerInfo.intellect = value.intellect;\n                    playerInfo.armor = value.armor;\n                    playerInfo.stamina = value.stamina;\n                    playerInfo.strength = value.strength;\n                    playerInfo.agility = value.agility;\n                    playerInfo.weaponEnchant = value.weaponEnchant;\n                    playerInfo.offhandEnchant = value.offhandEnchant;\n                    playerInfo.enchants = value.enchants;\n                    playerInfo.gems = value.gems;\n                    playerInfo.resistances = value.resistances;\n                });\n\n                resolve(this);\n            }).catch(reject));\n    }\n\n    loadCharacterSummary() {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.characterSummaries) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        let taskList = [this._getCharacterSummaryPromise(null),\n            ...this.Results.Fights\n                .filter(fight => fight.boss > 0)\n                .map(fight => this._getCharacterSummaryPromise(fight))];\n\n        return Promise.all(taskList).then(_ => {\n            this._loadedStatus.characterSummaries = true;\n            return new Promise((resolve, _reject) => resolve(this));\n        });\n    }\n\n    loadDeaths() {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.deaths) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/deaths/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime)\n        .then(response => response.json())\n        .then(data => {\n            data.entries.forEach((obj) => {\n                let character = this.Results.Characters[obj.id];\n\n                if (!character) {\n                    return;\n                }\n\n                character.deaths = [...(character.deaths || []),obj];\n            })\n\n            this._loadedStatus.deaths = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    loadInterrupts() {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.interrupts) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/interrupts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime)\n        .then(response => response.json())\n        .then(data => {\n            data.events.forEach((obj) => {\n                let character = this.Results.Characters[obj.sourceID];\n\n                if (!character) {\n                    let pet = this.Results.Pets[obj.sourceID];\n                    if (pet) {\n                        character = this.Results.Characters[pet.petOwner];\n                    }\n                }\n\n                if (!character) {\n                    return;\n                }\n\n                character.interrupts = [...(character.interrupts || []),obj];\n            })\n\n            this._loadedStatus.interrupts = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    loadCharacterDetails(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.details[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return Promise.all([\n            this._loadCharacterCasts(playerid),\n            this._loadCharacterBuffs(playerid),\n            this._loadProtectionPots(playerid),\n            this._loadCharacterDamageTaken(playerid),\n        ])\n        .then((_data) => {\n            this._loadedStatus.character.details[playerid] = true;\n\n            return new Promise((resolve, _reject) => resolve(this))\n        })\n    }\n\n    _loadCharacterCasts(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.casts[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            data.events.forEach((obj) => {\n                let character = this.Results.Characters[playerid];\n\n                if (!character) {\n                    let pet = this.Results.Pets[obj.sourceID];\n                    if (pet) {\n                        character = this.Results.Characters[pet.petOwner];\n                    }\n                }\n\n                if (!character) {\n                    return;\n                }\n\n                obj.fightType = this.Results.FightType[obj.fight];\n\n                character.casts = [...(character.casts || []),obj];\n            })\n\n            this._loadedStatus.character.casts[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadCharacterBuffs(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.buffs[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/buffs/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            data.auras.forEach((obj) => {\n                let character = this.Results.Characters[playerid];\n\n                if (!character) {\n                    return;\n                }\n\n                character.buffs = {...character.buffs, [obj.guid]: obj};\n            })\n\n            this._loadedStatus.character.buffs[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadCharacterDamageTaken(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.damageTaken[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/damage-taken/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            data.events.forEach((obj) => {\n                let character = this.Results.Characters[playerid];\n\n                if (!character) {\n                    return;\n                }\n\n                character.damageTaken = {...character.damageTaken, [obj.ability.guid]: [...(!character.damageTaken || !character.damageTaken[obj.ability.guid] ? [] : character.damageTaken[obj.ability.guid]), obj]};\n            })\n\n            this._loadedStatus.character.damageTaken[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadProtectionPots(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.protectionPots[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => response.json())\n        .then(data => {\n            let character = this.Results.Characters[playerid];\n\n            if (!character) {\n                return;\n            }\n\n            if (!character.protectionPotions) {\n                character.protectionPotions = {};\n            }\n\n            data.events.forEach((obj) => {\n                let protPot = character.protectionPotions[obj.ability.guid];\n                if (!protPot) {\n                    character.protectionPotions[obj.ability.guid] = {\n                        amount: 0,\n                        firstAbsorb: {},\n                        events: [],\n                    };\n                    protPot = character.protectionPotions[obj.ability.guid]\n                }\n\n                protPot.amount += obj.amount;\n                protPot.events.push(obj);\n                if (!protPot.firstAbsorb[obj.fight]) {\n                    protPot.firstAbsorb[obj.fight] = obj.timestamp;\n                }\n            });\n\n            this._loadedStatus.character.protectionPots[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _getFightIds(fightId) {\n        let fightIds = [];\n        if (fightId > 0)\n            fightIds.push(fightId);\n        else {\n            this.Results.Fights.forEach(fight => {\n                if (fight.boss !== 0)\n                    return;\n                    \n                fightIds.push(fight.id);\n            });\n        }\n\n        return fightIds;\n    }\n\n    getResults(fightId) {\n        if (fightId == null || fightId === -1) {\n            return this.Results;\n        }\n\n        let fightIds = this._getFightIds(fightId);\n\n        let filteredResults = {\n            Characters: {},\n            Fights: this.Results.Fights,\n            FightType: this.Results.FightType,\n            title: this.Results.title,\n            startTimestamp: this.Results.startTimestamp,\n            endTimestamp: this.Results.endTimestamp,\n            startTime: this.Results.startTime,\n            endTime: this.Results.endTime,\n        };\n\n        Object.values(this.Results.Characters).forEach(character => {\n            let filteredCharacter = this._getFilteredCharacter(character, fightIds);\n            if (filteredCharacter)\n                filteredResults.Characters[character.id] = filteredCharacter;\n        });\n\n        return filteredResults;\n    }\n\n    _getFilteredCharacter(character, fightIds) {\n        let filteredCharacter = null;\n\n        character.fights.forEach(characterFight => {\n            if (fightIds.includes(characterFight.id)) {\n                filteredCharacter = {...character, summary: character.perFight[characterFight.id]};\n            }\n        })\n\n        if (!filteredCharacter)\n            return null;\n\n        let fightBands = [];\n        this.Results.Fights.forEach(aFight => {\n            if (fightIds.includes(aFight.id)) {\n                fightBands.push({start: aFight.start_time, end: aFight.end_time});\n            }\n        })\n        \n\n        // Amend the collections\n        // buffs\n        if (character.buffs) {\n            filteredCharacter.buffs = {};\n            Object.values(character.buffs).forEach(x => {\n                let validBands = x.bands.filter(buffBand => {\n                    return fightBands.some(fightBand => buffBand.endTime > fightBand.start && buffBand.startTime < fightBand.end);\n                });\n\n                if (validBands.length > 0) {\n                    filteredCharacter.buffs[x.guid] = x;\n                }\n            })\n        }\n        // casts\n        if (character.casts) {\n            filteredCharacter.casts = character.casts.filter(x => fightIds.includes(x.fight));\n        }\n        // damageTaken\n        if (character.damageTaken) {\n            filteredCharacter.damageTaken = {};\n            Object.entries(character.damageTaken).forEach(([key,value]) => {\n                let validEvents = value.filter(y => fightIds.includes(y.fight));\n                if (validEvents.length > 0) {\n                    filteredCharacter.damageTaken[key] = validEvents;\n                }\n            });\n        }\n        // deaths\n        if (character.deaths) {\n            filteredCharacter.deaths = character.deaths.filter(x => fightIds.includes(x.fight));\n        }\n        // interrupts\n        if (character.interrupts) {\n            filteredCharacter.interrupts = character.interrupts.filter(x => fightIds.includes(x.fight));\n        }\n        // protectionPotions\n        if (character.protectionPotions) {\n            filteredCharacter.protectionPotions = {};\n            Object.entries(character.protectionPotions).forEach(([key,value]) => {\n                let validEvents = value.events.filter(y => fightIds.includes(y.fight));\n                if (validEvents.length > 0)\n                {\n                    filteredCharacter.protectionPotions[key] = {\n                        events: validEvents,\n                        amount: validEvents.reduce((agg, potEvent) => agg += potEvent.amount, 0),\n                        firstAbsorb: value.firstAbsorb,\n                    };\n                }\n            });\n        }\n\n        return filteredCharacter;\n    }\n\n    getCharacter(characterid, fightId) {\n        if (fightId == null || fightId === -1) {\n            return this.Results.Characters[characterid];\n        }\n\n        let fightIds = this._getFightIds(fightId);\n\n        return this._getFilteredCharacter(this.Results.Characters[characterid], fightIds);\n    }\n\n    getFights() {\n        return fetch(this.domain + \"report/fights/\" + this.reportId + \"?api_key=\" + this.key)\n                .then(res => res.json());\n    }\n\n    getHealEvents(start_time, end_time) {\n        return Promise.all([\n            this.getClassHealEvents(start_time, end_time, \"priest\"),\n            this.getClassHealEvents(start_time, end_time, \"druid\"),\n            this.getClassHealEvents(start_time, end_time, \"shaman\"),\n            this.getClassHealEvents(start_time, end_time, \"paladin\"),\n\n            this.getClassCastEvents(start_time, end_time, \"priest\"),\n            this.getClassCastEvents(start_time, end_time, \"druid\"),\n            this.getClassCastEvents(start_time, end_time, \"shaman\"),\n            this.getClassCastEvents(start_time, end_time, \"paladin\"),\n\n            //this.getManaRegeneration(start_time, end_time),\n\n            this.getProtectionPotionHealingEvents(start_time, end_time),\n            this.getProtectionPotionCastEvents(start_time, end_time),\n        ])\n        //.then(res => Promise.all(res.map(response => response.json())))\n        .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n            accum = [...accum, ...current];\n\n            return accum;\n        }, []))));\n    }\n\n    _reducePlayerDetails(role) {\n        return (acc, obj) => {\n        let playerId = obj[\"id\"];\n\n                const slots = {\n                    0: { enchantable: true, name: \"Head\" },\n                    1: { enchantable: false, name: \"Neck\" },\n                    2: { enchantable: true, name: \"Shoulders\" },\n                    3: { enchantable: false, name: \"Shirt\" },\n                    4: { enchantable: true, name: \"Chest\" },\n                    5: { enchantable: false, name: \"Waist\" },\n                    6: { enchantable: true, name: \"Legs\" },\n                    7: { enchantable: true, name: \"Feet\" },\n                    8: { enchantable: true, name: \"Arms\" },\n                    9: { enchantable: true, name: \"Hands\" },\n                    10: { enchantable: false, name: \"Ring 1\" },\n                    11: { enchantable: false, name: \"Ring 2\" },\n                    12: { enchantable: false, name: \"Trinket 1\" },\n                    13: { enchantable: false, name: \"Trinket 2\" },\n                    14: { enchantable: true, name: \"Back\" },\n                    15: { enchantable: true, name: \"Main Hand\" },\n                    16: { enchantable: true, name: \"Off Hand\" },\n                    17: { enchantable: true, name: \"Ranged\" },\n                    18: { enchantable: false, name: \"Tabard\" }\n                };\n\n                let gearInfo = obj.combatantInfo?.gear?.reduce((accum, gear) => {\n                    let gearItem = itemList[gear.id];\n\n                    if (!gearItem && gear.id > 0 && gear.slot !== 3 && gear.slot !== 18) {\n                        console.log(\"Couldn't find item '\" + gear.name + \"' (\" + gear.id + \")\");\n                    }\n\n                    if (gearItem?.resistances) {\n                        Object.entries(gearItem.resistances).forEach(([key, value]) => {\n                            accum.resistances[key.toLowerCase()] = accum.resistances[key.toLowerCase()] + value;\n                        })\n                    }\n\n                    if (gearItem?.randomEnchantment && resistRandomEnchantBySlot[gear.slot] && resistRandomEnchantBySlot[gear.slot][gear.itemLevel]) {\n                        const resistAmount = resistRandomEnchantBySlot[gear.slot][gear.itemLevel];\n                        accum.resistances.arcane = accum.resistances.arcane + resistAmount;\n                        accum.resistances.fire = accum.resistances.fire + resistAmount;\n                        accum.resistances.frost = accum.resistances.frost + resistAmount;\n                        accum.resistances.nature = accum.resistances.nature + resistAmount;\n                        accum.resistances.shadow = accum.resistances.shadow + resistAmount;\n                        accum.resistances.includesGreens = true;\n                    }\n\n                    if (slots[gear.slot].enchantable && gear.id !== 0 && (!gearItem || !gearItem.notEnchantable))\n                    {\n                        accum.permanentEnchants.push({\n                            slot: gear.slot, \n                            slotname: slots[gear.slot].name, \n                            id: gear.permanentEnchant, \n                            name: gear.permanentEnchantName, \n                            key: gear.id + \"_\" + gear.permanentEnchant,\n                            gearId: gear.id,\n                            gearName: gear.name,\n                        })\n\n                        if (resistanceEnchants[gear.permanentEnchant]) {\n                            accum.resistances.arcane = accum.resistances.arcane + resistanceEnchants[gear.permanentEnchant].arcane ?? 0;\n                            accum.resistances.fire = accum.resistances.fire + resistanceEnchants[gear.permanentEnchant].fire ?? 0;\n                            accum.resistances.frost = accum.resistances.frost + resistanceEnchants[gear.permanentEnchant].frost ?? 0;\n                            accum.resistances.nature = accum.resistances.nature + resistanceEnchants[gear.permanentEnchant].nature ?? 0;\n                            accum.resistances.shadow = accum.resistances.shadow + resistanceEnchants[gear.permanentEnchant].shadow ?? 0;\n                        }\n                    }\n\n                    if (gear.slot === 15) {\n                        accum.weaponEnchant.id = gear.temporaryEnchant;\n                        accum.weaponEnchant.name = gear.temporaryEnchantName;\n                    }\n\n                    if (gear.slot === 16) {\n                        accum.offhandEnchant.id = gear.temporaryEnchant;\n                        accum.offhandEnchant.name = gear.temporaryEnchantName;\n                    }\n\n                    if (gear.gems) {\n                        gear.gems.forEach(gem => {\n                            if (accum.gems[gem.id]) {\n                                accum.gems[gem.id].count++;\n                            }\n                            else {\n                                let gemDetails = gemList[gem.id];\n                                accum.gems[gem.id] = {\n                                    id: gem.id,\n                                    itemLevel: gem.itemLevel,\n                                    icon: gemDetails?.icon || gem.icon,\n                                    rarity: gemDetails?.rarity,\n                                    colour: gemDetails?.colour,\n                                    label: gemDetails?.label,\n                                    description: gemDetails?.description,\n                                    count: 1\n                                };\n                            }\n\n                            if (resistanceGems[gem.id]) {\n                                accum.resistances.arcane = accum.resistances.arcane + resistanceGems[gem.id].arcane ?? 0;\n                                accum.resistances.fire = accum.resistances.fire + resistanceGems[gem.id].fire ?? 0;\n                                accum.resistances.frost = accum.resistances.frost + resistanceGems[gem.id].frost ?? 0;\n                                accum.resistances.nature = accum.resistances.nature + resistanceGems[gem.id].nature ?? 0;\n                                accum.resistances.shadow = accum.resistances.shadow + resistanceGems[gem.id].shadow ?? 0;\n                            }\n                        });\n                    }\n\n                    if (gearItem?.sockets) {\n                        let gemCount = gear.gems?.length ?? 0;\n                        if (gearItem.sockets > gemCount) {\n                            accum.gems[0].count += gearItem.sockets - gemCount;\n                        }\n                    }\n\n                    return accum;\n                }, { \n                    permanentEnchants: [], \n                    weaponEnchant: {}, \n                    offhandEnchant: {}, \n                    gems: { \n                        0: {id: 0, count: 0},\n                    },\n                    resistances: { \n                        arcane: 0,\n                        fire: 0,\n                        frost: 0,\n                        nature: 0,\n                        shadow: 0,\n                        includesGreens: false,\n                    }\n                });\n\n                if (!acc[playerId]) {\n                    acc[playerId] = {\n                        id: playerId,\n                        name: obj.name,\n                        type: obj.type,\n                        roles: [role],\n                        specs: obj.specs ? [...obj.specs] : [],\n                        intellect: obj.combatantInfo?.stats?.Intellect?.max,\n                        armor: obj.combatantInfo?.stats?.Armor?.max,\n                        stamina: obj.combatantInfo?.stats?.Stamina?.max,\n                        strength: obj.combatantInfo?.stats?.Strength?.max,\n                        agility: obj.combatantInfo?.stats?.Agility?.max,\n                        weaponEnchant: gearInfo?.weaponEnchant,\n                        offhandEnchant: gearInfo?.offhandEnchant,\n                        enchants: gearInfo?.permanentEnchants,\n                        gems: gearInfo?.gems,\n                        resistances: gearInfo?.resistances,\n                    };\n                }\n                else {\n                    acc[playerId].roles.push(role);\n                    if (obj.specs) {\n                        acc[playerId].specs = [...acc[playerId].specs, ...obj.specs];\n                    }\n                    if (!acc[playerId].weaponEnchant?.id && gearInfo?.weaponEnchant) {\n                        acc[playerId].weaponEnchant = gearInfo?.weaponEnchant;\n                    }\n                    if (!acc[playerId].offhandEnchant?.id && gearInfo?.offhandEnchant) {\n                        acc[playerId].offhandEnchant = gearInfo?.offhandEnchant;\n                    }\n                    acc[playerId].enchants = removeDuplicates([...(acc[playerId].enchants || []), ...(gearInfo?.permanentEnchants || [])], x => x.key);\n\n                }\n\n                return acc;\n        }\n    }\n\n    getCharacterInfo(start_time, end_time) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let playerData = [];\n            if (!data.playerDetails) {\n                resolve(playerData);\n                return;\n            }\n\n            if (data.playerDetails.tanks) {\n                playerData = data.playerDetails.tanks.reduce(this._reducePlayerDetails(\"tank\"), {});\n            }\n\n            if (data.playerDetails.healers) {\n                playerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), playerData);\n            }\n\n            if (data.playerDetails.dps) {\n                playerData = data.playerDetails.dps.reduce(this._reducePlayerDetails(\"dps\"), playerData);\n            }\n\n            resolve(playerData);\n        }).catch(reject));\n    }\n\n    getHealerInfo(start_time, end_time) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let healerData = [];\n            if (!data.playerDetails.healers) {\n                resolve(healerData);\n                return;\n            }\n\n            healerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), {});\n\n            resolve(healerData);\n        }).catch(reject));\n    }\n\n    getTankInfo(start_time, end_time, context = null) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let tankData = [];\n            if (data.playerDetails.tanks) {\n\n                tankData = data.playerDetails.tanks.reduce((acc, obj) => {\n                    let playerId = obj[\"id\"];\n                    \n                    acc[playerId] = {\n                        id: playerId,\n                        name: obj.name,\n                        type: obj.type,\n                        armor: obj.combatantInfo?.stats?.Armor?.max,\n                        stamina: obj.combatantInfo?.stats?.Stamina?.max,\n                        strength: obj.combatantInfo?.stats?.Strength?.max,\n                        agility: obj.combatantInfo?.stats?.Agility?.max\n                    };\n\n                    return acc;\n                }, {});\n            }\n\n            resolve({context: context, data: tankData});\n        }).catch(reject));\n    }\n\n    /* getManaRegeneration(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/resources/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&abilityid=100\")\n        .then(response =>  {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events.filter(obj => obj.ability.guid === 18194));\n\n                if (data.nextPageTimestamp) {\n                    this.getManaRegeneration(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    } */\n\n    getProtectionPotionHealingEvents(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getProtectionPotionHealingEvents(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getProtectionPotionCastEvents(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getProtectionPotionCastEvents(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getClassHealEvents(start_time, end_time, sourceClass, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceclass=\" + sourceClass)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getClassHealEvents(data.nextPageTimestamp, end_time, sourceClass, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getClassCastEvents(start_time, end_time, sourceClass, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceclass=\" + sourceClass)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getClassCastEvents(data.nextPageTimestamp, end_time, sourceClass, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getCharacterCastTable(start_time, end_time, sourceid, sourcename) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceid=\" + sourceid)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                resolve({ id: sourceid, name: sourcename, entries: data.entries })\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getArmorBuffUptime(start_time, end_time, context = null) {\n        return Promise.all([\n            this.getBuffUptime(start_time, end_time, 15359), // Inspiration (Rank 3)\n            this.getBuffUptime(start_time, end_time, 16237), // Ancestral Fortitude (Rank 3)\n        ])\n        .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n            current.reduce((innerAccum, character) => {\n                if (!innerAccum[character.id]) {\n                    innerAccum[character.id] = character;\n                }\n                else {\n                    // Join together\n                    let existingCharacter = innerAccum[character.id];\n                    existingCharacter.totalUptime += character.totalUptime;\n                    existingCharacter.totalUses += character.totalUses;\n                    existingCharacter.bands = [...existingCharacter.bands, ...character.bands];\n                    existingCharacter.bands = existingCharacter.bands.sort((x, y) => x.startTime - y.startTime);\n                }\n\n                return innerAccum;\n            }, accum)\n\n            return accum;\n        }, {}))))\n        .then(results => new Promise((resolve,_reject) => resolve({context: context, data: results})));\n    }\n\n    getBuffUptime(start_time, end_time, abilityid) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/buffs/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&abilityid=\" + abilityid)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                resolve(data.auras)\n            }).catch(reject);\n        }).catch(reject));\n    }\n}\n\nexport let LogLoader = new WarcraftLogLoader();","import {Component} from \"react\";\n\nexport class ProgressBar extends Component {\n\n    render() {\n        const {summary, maxHeals} = this.props;\n\n        return (\n            <div className=\"bar\" style={{width: (summary.getTotalHeals() / maxHeals * 100).toFixed(2) + \"%\"}}>\n                <div className=\"bar_effective\" style={{width: summary.getEffectivePercent()+'%'}}></div>\n                <div className=\"bar_overheal\" style={{width: (summary.getOverhealPercent() - summary.getWastedPercent())+'%'}}>&nbsp;</div>\n                <div className=\"bar_wasted\" style={{width: summary.getWastedPercent()+'%'}}>&nbsp;</div>\n            </div>\n        )\n    }\n}","import {Component} from \"react\";\nimport {abbreviateNumber} from \"../utils\";\nimport {ProgressBar} from \"../ProgressBar\";\n\nexport class HealerFightSummary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            summary: props.healer.summary,\n            spells: props.healer.spells,\n            name: props.healer.name,\n            manaOil: props.healer.manaOil,\n            enchants: props.healer.enchants,\n            id: props.healer.id,\n            classType: props.healer.classType,\n            isExpanded: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            isExpanded: !this.state.isExpanded\n        })\n    }\n\n    render() {\n        const {id, name, classType, manaOil, summary, spells, isExpanded, enchants} = this.state;\n        const {row, maxHeals} = this.props;\n\n        let maxSpellHeals = spells.reduce((agg,obj) => {\n            if (obj.summary.getTotalHeals() > agg) {\n                agg = obj.summary.getTotalHeals();\n            }\n            return agg;\n        }, 0);\n\n        let enchantScore = enchants.reduce((acc, obj) => {\n            acc.score += obj.score;\n            acc.count++;\n\n            if (acc.score !== acc.count) {\n                acc.colour = \"yellow\";\n            }\n\n            if (acc.score === 0) {\n                acc.colour = \"red\";\n            }\n\n            acc.tooltip += obj.slot + \": \" \n                + (obj.name ? obj.name : \"(none)\") \n                + (obj.score === 1 ? \" <span class='tick'>✔</span>\" : obj.score === 0 ? \" <span class='cross'>✖</span>\" : \" <span class='alternative'>✔</span>\")\n                + \"<br />\";\n\n            return acc;\n        }, { score: 0, count: 0, colour: \"green\", tooltip: \"\"})\n\n        return (\n            <>\n                <tr key={id} className={classType + \" character \" + (row % 2 === 0 ? \"even\" : \"odd\")} onClick={this.toggle}>\n                    <td className=\"healer_name\">{name}</td>\n                    <td className={\"healer_enchants_\" + enchantScore.colour} data-tip={enchantScore.tooltip} data-place='right' data-class='enchant_tooltip' data-html={true}>{enchantScore.score}/{enchantScore.count}</td>\n                    <td className=\"healer_consumes_manapot center\">{summary.manaPots}</td>\n                    <td className=\"healer_consumes_runes center\">{summary.runes}</td>\n                    <td className={\"healer_consumes_manaoil center \" + (manaOil ? \"tick\" : \"cross\")}>{manaOil ? \"✔\" : \"✖\"}</td>\n                    <td className=\"right\">{abbreviateNumber(summary.manaGained)}</td>\n                    <td className=\"healer_cooldowns\">\n                        {summary.cooldowns.map((cooldown, idx) => (\n                            <img key={idx} className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + cooldown.icon} alt={cooldown.name} data-tip={cooldown.name} />\n                        ))}\n                    </td>\n                    <td className=\"healer_casts_started center\">{summary.castsStarted}</td>\n                    <td className=\"healer_casts_completed center\">{summary.castsCompleted}</td>\n                    <td className=\"healer_casts percent right\">{summary.getCastsPercent()}%</td>\n                    <td className=\"healer_amount\">\n                        <ProgressBar summary={summary} maxHeals={maxHeals} />\n                    </td>\n                    <td className={\"healer_effective amount right\" + (summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.effectiveHeals)}</td>\n                    <td className={\"healer_effective percent right\" + (summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{summary.getEffectivePercent()}%</td>\n                    <td className={\"healer_overheal amount right\" + (summary.overHeal === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.overHeal)}</td>\n                    <td className={\"healer_overheal percent right\" + (summary.overHeal === 0 ? \" empty\" : \"\")}>{summary.getOverhealPercent()}%</td>\n                    <td className={\"healer_wasted amount right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.wastedHeals)}</td>\n                    <td className={\"healer_wasted percent right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{summary.getWastedPercent()}%</td>\n                    <td className={\"healer_wasted percent right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.wastedMana)}</td>\n                </tr>\n\n                {isExpanded && spells.sort((x,y) => y.summary.effectiveHeals -x.summary.effectiveHeals)\n                                     .map((spell) => (\n                    <tr key={spell.id} className={spell.type + \" spell \" + (row % 2 === 0 ? \"even\" : \"odd\")}>\n                        <td className=\"healer_name\" colSpan=\"7\"><img className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + spell.icon} alt={spell.name} /> {spell.name}</td>\n                        <td className=\"healer_casts_started center\">{spell.summary.castsStarted}</td>\n                        <td className=\"healer_casts_completed center\">{spell.summary.castsCompleted}</td>\n                        <td className=\"healer_casts percent right\">{spell.summary.getCastsPercent()}%</td>\n                        <td className=\"healer_amount\">\n                            <ProgressBar summary={spell.summary} maxHeals={maxSpellHeals} />\n                        </td>\n                        <td className={\"healer_effective amount right\" + (spell.summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.effectiveHeals)}</td>\n                        <td className={\"healer_effective percent right\" + (spell.summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{spell.summary.getEffectivePercent()}%</td>\n                        <td className={\"healer_overheal amount right\" + (spell.summary.overHeal === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.overHeal)}</td>\n                        <td className={\"healer_overheal percent right\" + (spell.summary.overHeal === 0 ? \" empty\" : \"\")}>{spell.summary.getOverhealPercent()}%</td>\n                        <td className={\"healer_wasted amount right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.wastedHeals)}</td>\n                        <td className={\"healer_wasted percent right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{spell.summary.getWastedPercent()}%</td>\n                        <td className={\"healer_wasted percent right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.wastedMana)}</td>\n                    </tr>\n                ))}\n            </>\n        )\n    }\n}","import {healingSpells} from \"../data\";\nimport {cooldownList} from \"../datastore\";\n\nexport class HealSummary {\n    constructor() {\n        this.manaPots = 0;\n        this.runes = 0;\n        this.manaGained = 0;\n        this.castsStarted = 0;\n        this.castsCompleted = 0;\n        this.effectiveHeals = 0;\n        this.overHeal = 0;\n        this.wastedHeals = 0;\n        this.wastedMana = 0;\n        this.cooldowns = [];\n    }\n\n    getCastsPercent() { return (this.castsStarted > 0 ? this.castsCompleted / this.castsStarted * 100 : 0).toFixed(2); }\n    getTotalHeals() { return this.effectiveHeals + this.overHeal; }\n    getEffectivePercent() { return (this.getTotalHeals() > 0 ? this.effectiveHeals / this.getTotalHeals() * 100 : 0).toFixed(2); }\n    getOverhealPercent() { return (this.getTotalHeals() > 0 ? this.overHeal / this.getTotalHeals() * 100 : 0).toFixed(2); }\n    getWastedPercent() { return (this.getTotalHeals() > 0 ? this.wastedHeals / this.getTotalHeals() * 100 : 0).toFixed(2); }\n}\n\nexport function getHealSummary(collection, event, getOrCreate) {\n    \n    let aggregate = getOrCreate(collection, event);\n\n    if (!aggregate) {\n        return;\n    }\n\n    if (event.ability.guid === 27869 || event.ability.guid === 16666) {\n        aggregate.runes++;\n        aggregate.manaGained += 1500;\n    }\n\n    if (event.ability.guid === 17531) {\n        aggregate.manaPots++;\n        aggregate.manaGained += 2250;\n    }\n\n    let spellInfo = healingSpells[event.ability.guid];\n\n    if (spellInfo)\n    {\n        if (event.type === \"begincast\") {\n            aggregate.castsStarted++;\n        } else if (event.type === \"cast\") {\n            if (spellInfo.castTime === 0) {\n                aggregate.castsStarted++;\n            }\n            aggregate.castsCompleted++;\n        }\n    } else {\n        console.log(\"Not healing spell: \" + event.ability.name + \" (\" + event.ability.guid + \")\");\n    }\n\n    if (event.type === \"heal\" || event.type === \"absorbed\") {\n        if (event.amount) {\n            aggregate.effectiveHeals += event.amount;\n        }\n        if (event.overheal) {\n            aggregate.overHeal += event.overheal;\n            if (event.amount === 0) {\n                aggregate.wastedHeals += event.overheal;\n                if (event.tick && spellInfo && spellInfo.ticks) {\n                    aggregate.wastedMana += Math.round(spellInfo.mana * spellInfo.tickPortion / spellInfo.ticks);\n                } else {\n                    aggregate.wastedMana += spellInfo ? spellInfo.mana : 0;\n                }\n            }\n        }\n    }\n\n    if (event.type === \"cast\" && cooldownList[event.ability.guid]) {\n        aggregate.cooldowns.push(cooldownList[event.ability.guid]);\n    }\n\n}","import \"./FightReport.scss\";\nimport {Component} from \"react\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport {msToTime, abbreviateNumber} from \"../utils\";\nimport { HealerFightSummary } from \"./HealerFightSummary\";\nimport {getHealSummary, HealSummary} from \"./healSummary\";\nimport {healingSpells, protectionPotions, requiredEnchants} from \"../data\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport class FightReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            reportId: props.reportId,\n            fight: props.fight,\n            events: [],\n            healers: [],\n            isLoaded: false,\n            healSummary: null,\n            expanded: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    loadData() {\n        const { reportId, fight, isLoaded } = this.state;\n        const {characters} = this.props;\n        if (!reportId || !fight || isLoaded)\n            return;\n\n        let healerInfo = {};\n\n        LogLoader.getHealerInfo(fight.start_time, fight.end_time)\n        .then(\n            (healers) => {\n                healerInfo = healers;\n            }\n        );\n\n        LogLoader.getHealEvents(fight.start_time, fight.end_time)\n        .then(\n            (result) => {\n                let eventsByCharacter = this.getCharactersFromEvents(result);\n                let characterList = [];\n\n                for (const [key, value] of Object.entries(eventsByCharacter.characters))\n                {\n                    let characterName;\n                    let characterClass;\n                    let characterManaOil = false;\n                    let enchants = [];\n                    if (characters[key]) {\n                        characterName = characters[key].name;\n                        characterClass = characters[key].type;\n                        if (healerInfo[key]) {\n                            characterManaOil = healerInfo[key].weaponEnchant.id === 2629;\n\n                            const bisEnchants = requiredEnchants[characterClass];\n\n                            enchants = healerInfo[key].enchants.map((obj) => {\n                                return {\n                                    slot: obj.slotname,\n                                    score: bisEnchants[obj.slot][obj.id] ? bisEnchants[obj.slot][obj.id].score : 0,\n                                    name: bisEnchants[obj.slot][obj.id] ? bisEnchants[obj.slot][obj.id].name : obj.name\n                                }\n\n                            })\n                        }\n                    }\n\n                    if (key === '9999') {\n                        characterName = \"Protection Potions\";\n                        characterClass = \"Consumable\";\n                    }\n\n                    characterList.push({ \n                        id: key,\n                        name: characterName,\n                        classType: characterClass,\n                        manaOil: characterManaOil,\n                        enchants: enchants,\n                        summary: value.total,\n                        spells: Object.entries(value.spells).map(keyValuePair => keyValuePair[1])\n                    })\n                }\n\n                this.setState({\n                    isLoaded: true,\n                    events: result.events,\n                    healSummary: eventsByCharacter.total,\n                    healers: characterList\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    getCharactersFromEvents(events) {\n        const {pets} = this.props;\n\n        let groupByCharacter = events.reduce((acc, obj) => {\n            getHealSummary(acc, obj, (collection, _event) => collection.total);  // Save to totals\n            getHealSummary(acc, obj, (collection, event) => {\n                let sourceId = event[\"sourceID\"];\n                if (pets[sourceId]) {\n                    sourceId = pets[sourceId].petOwner;\n                }\n\n                let abilityId = event.ability.guid;\n                if (protectionPotions[abilityId]) {\n                    sourceId = 9999;\n                }\n\n                if (!collection.characters[sourceId]) {\n                    collection.characters[sourceId] = { total: new HealSummary(), spells: {} };\n                }\n\n                return collection.characters[sourceId].total;\n            });\n            getHealSummary(acc, obj, (collection, event) => {\n                let sourceId = event.sourceID;\n                if (pets[sourceId]) {\n                    sourceId = pets[sourceId].petOwner;\n                }\n                let spellId = event.ability.guid;\n                if (protectionPotions[spellId]) {\n                    sourceId = 9999;\n                }\n\n                let spell = healingSpells[spellId];\n                if (!spell) {\n                    return null;\n                }\n\n                if (!collection.characters[sourceId].spells[spellId]) {\n                    collection.characters[sourceId].spells[spellId] = { id: spellId, name: spell.name, icon: spell.icon, type: spell.type, summary: new HealSummary() };\n                }\n\n                return collection.characters[sourceId].spells[spellId].summary;\n            })\n\n            return acc;\n        }, { total: new HealSummary(), characters: {}})\n\n        return groupByCharacter;\n    }\n\n    toggle() {\n        this.setState({\n            expanded: !this.state.expanded\n        });\n\n        this.loadData();\n    }\n\n    render() {\n        const { error, isLoaded, fight, healSummary, healers, expanded} = this.state;\n\n        let fightClass = !fight.boss ? \"trash\" : fight.kill ? \"success\" : \"fail\";\n        let details;\n        if (error) {\n            details = <div>Error: {error.message}</div>\n        } else if (!isLoaded) {\n            details = <div>Loading...</div>\n        } else {\n            let maxHeals = healers.reduce((agg,obj) => {\n                if (obj.summary.getTotalHeals() > agg) {\n                    agg = obj.summary.getTotalHeals();\n                }\n                return agg;\n            }, 0);\n            details = (\n            <>\n                <table>\n                    <thead>\n                        <tr>\n                            <td className=\"healer_name\" rowSpan=\"2\">Name</td>\n                            <td className=\"healer_enchants\" rowSpan=\"2\">Enchants</td>\n                            <td className=\"healer_consumes\" colSpan=\"3\">Consumes</td>\n                            <td className=\"healer_consumes_mana\" rowSpan=\"2\">Mana Gained</td>\n                            <td className=\"healer_cooldowns\" rowSpan=\"2\">Cooldowns</td>\n                            <td className=\"healer_casts\" colSpan=\"3\">Casts</td>\n                            <td className=\"healer_amount\" rowSpan=\"2\">Amount</td>\n                            <td className=\"healer_effective center\" colSpan=\"2\">Effective</td>\n                            <td className=\"healer_overheal center\" colSpan=\"2\">Overheal</td>\n                            <td className=\"healer_wasted center\" colSpan=\"3\">Wasted</td>\n                        </tr>\n                        <tr>\n                            <td className=\"healer_consumes_manapot center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_potion_76.jpg\" width=\"24\" height=\"24\" alt=\"Major Mana Potion\" data-tip='Major Mana Potions'/></td>\n                            <td className=\"healer_consumes_runes center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_misc_rune_04.jpg\" width=\"24\" height=\"24\" alt=\"Demonic/Dark Runes\"  data-tip='Demonic/Dark Runes'/></td>\n                            <td className=\"healer_consumes_manaoil center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_potion_100.jpg\" width=\"24\" height=\"24\" alt=\"Brilliant Mana Oil\"  data-tip='Brilliant Mana Oil'/></td>\n                            <td className=\"healer_casts_started center\">Start</td>\n                            <td className=\"healer_casts_completed center\">Finish</td>\n                            <td className=\"healer_casts percent right\">%</td>\n                            <td className=\"healer_effective amount right\">#</td>\n                            <td className=\"healer_effective percent right\">%</td>\n                            <td className=\"healer_overheal amount right\">#</td>\n                            <td className=\"healer_overheal percent right\">%</td>\n                            <td className=\"healer_wasted amount right\">#</td>\n                            <td className=\"healer_wasted percent right\">%</td>\n                            <td className=\"healer_wasted amount right\">Mana</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                {healers.sort((x,y) => y.summary.effectiveHeals - x.summary.effectiveHeals)\n                        .map((x, idx) => (\n                    <HealerFightSummary key={x.id} healer={x} row={idx} maxHeals={maxHeals} />\n                ))}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td className=\"healer_name\">Total</td>\n                            <td className=\"healer_enchants\"></td>\n                            <td className=\"healer_consumes_manapot center\">{healSummary.manaPots}</td>\n                            <td className=\"healer_consumes_runes center\">{healSummary.runes}</td>\n                            <td className=\"healer_consumes_manaoil center\"></td>\n                            <td className=\"right\">{abbreviateNumber(healSummary.manaGained)}</td>\n                            <td className=\"healer_cooldowns\"></td>\n                            <td className=\"healer_casts_started center\">{healSummary.castsStarted}</td>\n                            <td className=\"healer_casts_completed center\">{healSummary.castsCompleted}</td>\n                            <td className=\"healer_casts percent center\">{healSummary.getCastsPercent()}%</td>\n                            <td className=\"healer_amount\">&nbsp;</td>\n                            <td className=\"healer_effective amount right\">{abbreviateNumber(healSummary.effectiveHeal)}</td>\n                            <td className=\"healer_effective percent right\">{healSummary.getEffectivePercent()}%</td>\n                            <td className=\"healer_overheal amount right\">{abbreviateNumber(healSummary.overHeal)}</td>\n                            <td className=\"healer_overheal percent right\">{healSummary.getOverhealPercent()}%</td>\n                            <td className=\"healer_wasted amount right\">{abbreviateNumber(healSummary.wastedHeals)}</td>\n                            <td className=\"healer_wasted percent right\">{healSummary.getWastedPercent()}%</td>\n                            <td className=\"healer_wasted percent right\">{abbreviateNumber(healSummary.wastedMana)}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n                <ReactTooltip />\n            </>\n            )\n        }\n        return (\n            <div className={\"fight \" + fightClass}>\n            <div className=\"heading\" onClick={this.toggle}>{fight.name} {fight.kill ? \"- Kill \" : \"- Wipe \"}({msToTime(fight.end_time - fight.start_time)})</div>\n            {expanded && details}\n            </div>\n        )\n    }\n}","import {Component} from \"react\";\nimport {FightReport} from \"./FightReport\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport { withRouter } from \"react-router-dom\";\n\nclass HealerReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            pets: {},\n            isLoaded: false,\n            //reportId: props.reportId\n        }\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        //const { reportId } = this.state;\n        if (!id)\n            return;\n\n        this.setState({reportId: id});\n\n        LogLoader.setReport(id);\n        LogLoader.getFights()\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    fights: result.fights,\n                    characters: result.friendlies.reduce((acc, obj) => {\n                        let id = obj[\"id\"];\n                        if (!acc[id]) {\n                            acc[id] = obj;\n                        }\n\n                        return acc;\n                    }, {}),\n                    pets: result.friendlyPets.reduce((acc, obj) => {\n                        let id = obj[\"id\"];\n                        if (!acc[id]) {\n                            acc[id] = obj;\n                        }\n\n                        return acc;\n                    })\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    render() {\n        const { error, isLoaded, fights, reportId, characters, pets} = this.state;\n        const {showTrash} = this.props;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                {fights.filter(x => showTrash || x.boss !== 0).map(item => (\n                    <FightReport key={item.id} fight={item} characters={characters} pets={pets} reportId={reportId} />\n                ))}\n                </>\n            )\n        }\n    }\n}\n\nexport const HealerReportWithRouter = withRouter(HealerReport);","import \"./AncestralFortitudeReport.css\";\nimport { Component } from \"react\";\nimport { LogLoader } from \"../warcraftLogLoader\";\nimport { msToTime, asPercentage } from \"../utils\";\n\nexport class AncestralFortitudeReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            tanksPerFight: {},\n            tanks: {},\n            isLoaded: false,\n            reportId: props.reportId\n        }\n    }\n\n    //getArmorBuffUptime\n    _getArmorBuffUptime(fights) {\n        let buffCalls = fights.map(fight => LogLoader.getArmorBuffUptime(fight.start_time, fight.end_time, fight.id))\n        return Promise.all(buffCalls)\n        .then(res => new Promise((resolve, _reject) => {\n            let buffsForFight = res.reduce((accum, current) => {\n                accum[current.context] = current.data;\n\n                return accum;\n            }, {});\n            resolve(buffsForFight);\n        }))\n        .then(allBuffs => {\n            this.setState({\n                buffUptime: allBuffs\n            })\n        });\n    }\n\n    _getTanksForFights(fights) {\n        let tankCalls = fights.map(fight => LogLoader.getTankInfo(fight.start_time, fight.end_time, fight.id));\n        return Promise.all(tankCalls)\n            .then(res => new Promise((resolve, _reject) => {\n                let tanksForFight = res.reduce((accum, current) => {\n                    accum[current.context] = current.data;\n\n                    return accum;\n                }, {});\n                resolve(tanksForFight);\n            }))\n            .then(allTanks => {\n                this.setState({\n                    tanksPerFight: allTanks,\n                    tanks: Object.entries(allTanks).reduce((accum, [_fightkey, current]) => {\n                        Object.entries(current).reduce((innerAccum, [charId, character]) => {\n                            if (!innerAccum[charId]) {\n                                innerAccum[charId] = { name: character.name, class: character.type };\n                            }\n\n                            return innerAccum\n                        }, accum)\n\n                        return accum;\n                    }, {})\n                })\n            });\n    }\n\n    componentDidMount() {\n        const { reportId } = this.state;\n        if (!reportId)\n            return;\n\n        LogLoader.getFights()\n            .then(\n                (result) => {\n                    let fights = result.fights.filter(x => x.boss !== 0);\n                    return Promise.all([\n                        this._getTanksForFights(fights),\n                        this._getArmorBuffUptime(fights)\n                    ])\n                    .then(_results => {\n                        this.setState({\n                            isLoaded: true,\n                            fights: fights\n                        });\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            error: error\n                        })\n                    })\n                    /* let tankCalls = fights.map(fight => LogLoader.getTankInfo(fight.start_time, fight.end_time, fight.id));\n                    return Promise.all(tankCalls)\n                        .then(res => new Promise((resolve, _reject) => {\n                            let tanksForFight = res.reduce((accum, current) => {\n                                accum[current.context] = current.data;\n\n                                return accum;\n                            }, {});\n                            resolve(tanksForFight);\n                        }))\n                        .then(allTanks => {\n                            this.setState({\n                                isLoaded: true,\n                                fights: fights,\n                                tanksPerFight: allTanks,\n                                tanks: Object.entries(allTanks).reduce((accum, [_fightkey, current]) => {\n                                    Object.entries(current).reduce((innerAccum, [charId, character]) => {\n                                        if (!innerAccum[charId]) {\n                                            innerAccum[charId] = { name: character.name, class: character.type };\n                                        }\n\n                                        return innerAccum\n                                    }, accum)\n\n                                    return accum;\n                                }, {})\n                            })\n                        },\n                            (error) => {\n                                this.setState({\n                                    isLoaded: true,\n                                    error: error\n                                })\n                            }) */\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error: error\n                    })\n                });\n    }\n\n    render() {\n        const { error, isLoaded, tanks, fights, tanksPerFight, buffUptime } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h3>Ancestral Fortitude/Inspiration</h3>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>&nbsp;</td>\n                                {Object.entries(tanks).map(([key, value]) => <td key={key} className={\"inspiration_heading \" + value.class + \"Background\"} colspan=\"2\">{value.name}</td>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {fights.map((fight, idx) => {\n                                return (\n                                    <tr key={fight.id} className={(idx % 2 === 0 ? \"even\" : \"odd\")}>\n                                        <td className={!fight.boss ? \"trash\" : fight.kill ? \"success\" : \"fail\"}>{fight.name} {fight.kill ? \"- Kill \" : \"- Wipe \"}({msToTime(fight.end_time - fight.start_time)})</td>\n                                        {Object.entries(tanks).map(([key, value]) => {\n                                            if (tanksPerFight[fight.id][key]) {\n                                                let fightLength = fight.end_time - fight.start_time;\n                                                let tankBuffInfo = buffUptime[fight.id][key];\n                                                let tankBuffUptime = tankBuffInfo ? tankBuffInfo.totalUptime / fightLength : 0;\n                                                let preBuff = tankBuffInfo ? tankBuffInfo.bands[0].startTime === fight.start_time ? true : false : false;\n                                                return (\n                                                    <>\n                                                    <td key={fight.id + \"_\" + key} className={\"center \" + (preBuff ? \"tick\" : \"cross\")}>{preBuff ? \"✔\" : \"✖\"}</td>\n                                                    <td className=\"right\">{asPercentage(tankBuffUptime)}</td>\n                                                    </>\n                                                )\n                                            }\n\n                                            return <td key={fight.id + \"_\" + key} colspan=\"2\">&nbsp;</td>\n                                        })}\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                    <div className=\"note\">The tick or cross indicates that they had the buff on fight start (on pull) and the percentage shows how much of the fight it was up for.</div>\n                </>\n            )\n        }\n    }\n}","import {Component} from \"react\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport {cooldownList} from \"../datastore\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./CooldownReport.css\";\n\nexport class CooldownReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            reportId: props.reportId,\n            startTime: props.startTime,\n            endTime: props.endTime,\n            characters: props.characters,\n            cooldownRows: [],\n            cooldowns: {},\n            //events: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        const { reportId, startTime, endTime, characters } = this.state;\n        if (!reportId)\n            return;\n\n        LogLoader.getBuffUptime(startTime, endTime, 24659)   // Zandalarian Hero Charm\n        .then(zhcResult => {\n\n            let zhcCounts = zhcResult.reduce((accum, current) => {\n                if (current.type === \"Shaman\") {\n                    accum[current.id] = current.bands.length;\n                }\n\n                return accum;\n            }, {})\n\n            return Promise.all(characters.map(character => LogLoader.getCharacterCastTable(startTime, endTime, character.id, character.name)))\n            .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n                let cooldownRow = { id: current.id, name: current.name, total: 0 }\n                for (const entry of current.entries) {\n                    if (!cooldownList[entry.guid])\n                        continue;\n\n                    cooldownRow[entry.guid] = entry.total;\n                    cooldownRow.total += entry.total;\n                }\n                if (zhcCounts[current.id]) {\n                    cooldownRow[\"24659\"] = zhcCounts[current.id];\n                    cooldownRow.total += zhcCounts[current.id];\n                }\n\n                accum = [...accum, cooldownRow];\n\n                return accum;\n            }, []))))\n            .then(\n                (result) => {\n                    this.setState({\n                        //events: result,\n                        cooldownRows: result.sort((x,y) => y.total - x.total),\n                        cooldowns: Object.entries(cooldownList).sort(([xKey,xValue],[yKey,yValue]) => {\n                            let typeCompare = xValue.type.localeCompare(yValue.type);\n\n                            if (typeCompare !== 0)\n                                return typeCompare;\n\n                            return xValue.name.localeCompare(yValue.name);\n                        }).reduce((accum, [key,_value]) => {\n                            let cooldownFound = result.reduce((found, resultRow) => {\n                                if (resultRow[key]) {\n                                    return true;\n                                }\n\n                                return found;\n                            }, false);\n                            if (cooldownFound) {\n                                accum = [...accum, key];\n                            }\n\n                            return accum;\n                        }, []),\n                        isLoaded: true\n                    })\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error: error\n                    })\n                }\n            )\n        })\n        \n    }\n\n    render() {\n        const { error, isLoaded, cooldownRows, cooldowns} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h3>Cooldown Usage</h3>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>&nbsp;</td>\n                                {cooldowns.map(cooldown => \n                                    <td key={cooldown}><img className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + cooldownList[cooldown].icon} alt={cooldownList[cooldown].name} data-tip={cooldownList[cooldown].name} /></td>\n                                )}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {cooldownRows.map((cooldownRow,row) =>\n                                <tr key={cooldownRow.id} className={\"Shaman \" + (row % 2 === 0 ? \"even\" : \"odd\")}>\n                                    <td className=\"shaman_name\">{cooldownRow.name}</td>\n                                    {cooldowns.map(cooldown => \n                                    <td className=\"shaman_cooldown\" key={cooldownRow.id + \"_\" + cooldown}>{cooldownRow[cooldown]}</td>\n                                    )}\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    <ReactTooltip />\n                </>\n            )\n        }\n    }\n}","import {Component} from \"react\";\n\nexport class TotemReport extends Component {\n    render() {\n        return (\n            <>\n                <h3>Totem Usage</h3>\n            </>\n        )\n    }\n}","import {Component} from \"react\";\nimport { withRouter } from \"react-router-dom\";\n//import {FightReport} from \"./FightReport\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport { AncestralFortitudeReport } from \"./AncestralFortitudeReport\";\nimport { CooldownReport } from \"./CooldownReport\";\nimport { TotemReport } from \"./TotemReport\";\n\nclass ShamanReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            pets: {},\n            isLoaded: false,\n            //reportId: props.reportId,\n            startTime: null,\n            endTime: null\n        }\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        //const { reportId } = this.state;\n        if (!id)\n            return;\n\n        this.setState({reportId: id});\n\n        LogLoader.setReport(id);\n        LogLoader.getFights()\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    fights: result.fights,\n                    shamans: result.friendlies.reduce((acc, obj) => {\n                        if (obj.type === \"Shaman\") {\n                            acc.push({name: obj.name, id: obj.id});\n                        }\n\n                        return acc;\n                    }, []),\n                    startTime: result.fights[0].start_time,\n                    endTime: result.fights[result.fights.length-1].end_time\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    render() {\n        const { error, isLoaded, reportId, startTime, endTime, shamans} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h2>Shaman Report</h2>\n                    <TotemReport reportId={reportId} />\n                    <AncestralFortitudeReport reportId={reportId}/>\n                    <CooldownReport reportId={reportId} startTime={startTime} endTime={endTime} characters={shamans} />\n                </>\n            )\n        }\n    }\n}\n\nexport const ShamanReportWithRouter = withRouter(ShamanReport);","//import {createContext} from \"react\";\n\nexport const GroupKeys = {\n    Name: \"Name\",\n    Enchants: \"Enchants\",\n    Gems: \"Gems\",\n    Elixirs: \"Elixirs\",\n    Deaths: \"Deaths\",\n    ProtPotions: \"ProtPotions\",\n    Consumes: \"Consumes\",\n    Abilities: \"Abilities\",\n    Damage: \"Damage\",\n    DispelsInterrupts: \"DispelsInterrupts\",\n    Cooldowns: \"Cooldowns\",\n    Tank: \"Tank\",\n    Healer: \"Healer\",\n    Dps: \"Dps\",\n    Resistance: \"Resistance\",\n}\n\nexport const DataPoints = {\n    Name: \"Name\",\n    Enchants: \"Enchants\",\n    EnchantGood: \"EnchantGood\",\n    EnchantAverage: \"EnchantAverage\",\n    EnchantBad: \"EnchantBad\",\n    EnchantMissing: \"EnchantMissing\",\n    EnchantList: \"EnchantList\",\n    GemsMissing: \"GemsMissing\",\n    GemsCommon: \"GemsCommon\",\n    GemsUncommon: \"GemUncommon\",\n    GemsRare: \"GemsRare\",\n    GemsEpic: \"GemsEpic\",\n    GemsList: \"GemsList\",\n    Elixirs: \"Elixirs\",\n    ElixirsFlasks: \"ElixirsFlasks\",\n    ElixirsGuardian: \"ElixirsGuardian\",\n    ElixirsBattle: \"ElixirsBattle\",\n    ElixirsFood: \"ElixirsFood\",\n    ElixirsSeasonal: \"ElixirsSeasonal\",\n    ElixirsScrolls: \"ElixirsScrolls\",\n    ElixirsWeaponEnchants: \"ElixirsWeaponEnchants\",\n    Deaths: \"Deaths\",\n    ProtectionPotionsTotal: \"ProtectionPotionsTotal\",\n    ProtectionPotionsTotalAbsorbed: \"ProtectionPotionsTotalAbsorbed\",\n    ProtectionPotionsNature: \"ProtectionPotionsNature\",\n    ProtectionPotionsGreaterNature: \"ProtectionPotionsGreaterNature\",\n    ProtectionPotionsMajorNature: \"ProtectionPotionsMajorNature\",\n    ProtectionPotionsNatureAbsorbed: \"ProtectionPotionsNatureAbsorbed\",\n    ProtectionPotionsFire: \"ProtectionPotionsFire\",\n    ProtectionPotionsGreaterFire: \"ProtectionPotionsGreaterFire\",\n    ProtectionPotionsMajorFire: \"ProtectionPotionsMajorFire\",\n    ProtectionPotionsFireAbsorbed: \"ProtectionPotionsFireAbsorbed\",\n    ProtectionPotionsFrost: \"ProtectionPotionsFrost\",\n    ProtectionPotionsGreaterFrost: \"ProtectionPotionsGreaterFrost\",\n    ProtectionPotionsMajorFrost: \"ProtectionPotionsMajorFrost\",\n    ProtectionPotionsFrostAbsorbed: \"ProtectionPotionsFrostAbsorbed\",\n    ProtectionPotionsShadow: \"ProtectionPotionsShadow\",\n    ProtectionPotionsGreaterShadow: \"ProtectionPotionsGreaterShadow\",\n    ProtectionPotionsMajorShadow: \"ProtectionPotionsMajorShadow\",\n    ProtectionPotionsShadowAbsorbed: \"ProtectionPotionsShadowAbsorbed\",\n    ProtectionPotionsGreaterArcane: \"ProtectionPotionsGreaterArcane\",\n    ProtectionPotionsMajorArcane: \"ProtectionPotionsMajorArcane\",\n    ProtectionPotionsArcaneAbsorbed: \"ProtectionPotionsArcaneAbsorbed\",\n    ConsumesPotions: \"ConsumesPotions\",\n    ConsumesDrums: \"ConsumesDrums\",\n    ConsumesGems: \"ConsumesGems\",\n    ConsumesExplosives: \"ConsumesExplosives\",\n    ConsumesBandages: \"ConsumesBandages\",\n    ConsumesManaPots: \"ConsumesManaPots\",\n    ConsumesRunes: \"ConsumesRunes\",\n    ConsumesRejuvPots: \"ConsumesRejuvPots\",\n    ConsumesHealthPots: \"ConsumesHealthPots\",\n    ConsumesHealthStones: \"ConsumesHealthStones\",\n    ConsumesWhipperRootTuber: \"ConsumesWhipperRootTuber\",\n    ConsumesRagePotions: \"ConsumesRagePotions\",\n    ConsumesThistleTea: \"ConsumesThistleTea\",\n    ConsumesRestorationPots: \"ConsumesRestorationPots\",\n    ConsumesFreeActionPotion: \"ConsumesFreeActionPotion\",\n    ConsumesManaGem: \"ConsumesManaGem\",\n    ConsumesNightmareSeed: \"ConsumesNightmareSeed\",\n    ConsumesStoneshield: \"ConsumesStoneshield\",\n    ConsumesHeavyRuneclothBandage: \"ConsumesHeavyRuneclothBandage\",\n    ConsumesAntiVenom: \"ConsumesAntiVenom\",\n    ConsumesHolyWater: \"ConsumesHolyWater\",\n    ConsumesSapperCharge: \"ConsumesSapperCharge\",\n    ConsumesEzThro: \"ConsumesEzThro\",\n    ConsumesDenseDynamite: \"ConsumesDenseDynamite\",\n    ConsumesFelIronBombs: \"ConsumesFelIronBombs\",\n    ConsumesArcaneBombs: \"ConsumesArcaneBombs\",\n    ConsumesDrumsBattle: \"ConsumesDrumsBattle\",\n    ConsumesDrumsRestoration: \"ConsumesDrumsRestoration\",\n    ConsumesDrumsPanic: \"ConsumesDrumsPanic\",\n    ConsumesDrumsWar: \"ConsumesDrumsWar\",\n    ConsumesInsaneStrength: \"ConsumesInsaneStrength\",\n    ConsumesShrouding: \"ConsumesShrouding\",\n    ConsumesFelRegeneration: \"ConsumesFelRegeneration\",\n    ConsumesHeroic: \"ConsumesHeroic\",\n    ConsumesDestruction: \"ConsumesDestruction\",\n    ConsumesHaste: \"ConsumesHaste\",\n    ConsumesFelMana: \"ConsumesFelMana\",\n    ConsumesIronshield: \"ConsumesIronshield\",\n    DispelTotal: \"DispelTotal\",\n    DispelBoss: \"DispelBoss\",\n    DispelTrash: \"DispelTrash\",\n    DispelPoison: \"DispelPoison\",\n    DispelDisease: \"DispelDisease\",\n    DispelCurse: \"DispelCurse\",\n    DispelMagic: \"DispelMagic\",\n    DispelFrenzy: \"DispelFrenzy\",\n    DispelDruidCurePoison: \"DispelDruidCurePoison\",\n    DispelDruidAbolishPoison: \"DispelDruidAbolishPoison\",\n    DispelDruidRemoveCurse: \"DispelDruidRemoveCurse\",\n    DispelHunterTranqShot: \"DispelHunterTranqShot\",\n    DispelMageRemoveLesserCurse: \"DispelMageRemoveLesserCurse\",\n    DispelPaladinPurify: \"DispelPaladinPurify\",\n    DispelPaladinCleanse: \"DispelPaladinCleanse\",\n    DispelPriestDispelMagic: \"DispelPriestDispelMagic\",\n    DispelPriestCureDisease: \"DispelPriestCureDisease\",\n    DispelPriestAbolishDisease: \"DispelPriestAbolishDisease\",\n    DispelShamanPurge: \"DispelShamanPurge\",\n    DispelShamanCurePoison: \"DispelShamanCurePoison\",\n    DispelShamanCureDisease: \"DispelShamanCureDisease\",\n    DispelShamanPoisonCleansingTotem: \"DispelShamanPoisonCleansingTotem\",\n    DispelShamanDiseaseCleansingTotem: \"DispelShamanDiseaseCleansingTotem\",\n    DispelWarlockDevourMagic: \"DispelWarlockDevourMagic\",\n    InterruptTotal: \"InterruptTotal\",\n    InterruptDruidBash: \"InterruptDruidBash\",\n    InterruptDruidFeralCharge: \"InterruptDruidFeralCharge\",\n    InterruptMageCounterspell: \"InterruptMageCounterspell\",\n    InterruptPaladinHammerOfJustice: \"InterruptPaladinHammerOfJustice\",\n    InterruptPriestSilence: \"InterruptPriestSilence\",\n    InterruptRogueKick: \"InterruptRogueKick\",\n    InterruptShamanEarthShock: \"InterruptShamanEarthShock\",\n    InterruptWarriorPummel: \"InterruptWarriorPummel\",\n    InterruptCheapShot: \"InterruptCheapShot\",\n    InterruptWarlockSpellLock: \"InterruptWarlockSpellLock\",\n    InterruptHunterIntimidate: \"InterruptHunterIntimidate\",\n    InterruptWarstomp: \"InterruptWarstomp\",\n    Cooldowns: \"Cooldowns\",\n    CooldownsRacial: \"CooldownsRacial\",\n    CooldownsAbility: \"CooldownsAbility\",\n    CooldownsItems: \"CooldownsItems\",\n    DamageTakenHit: \"DamageTakenHit\",\n    DamageTakenCrit: \"DamageTakenCrit\",\n    DamageTakenCrushed: \"DamageTakenCrushed\",\n    DamageTakenBlocked: \"DamageTakenBlocked\",\n    DamageTakenMiss: \"DamageTakenMiss\",\n    DamageTakenDodge: \"DamageTakenDodge\",\n    DamageTakenParry: \"DamageTakenParry\",\n    ResistanceNature: \"ResistanceNature\",\n    ResistanceFire: \"ResistanceFire\",\n    ResistanceFrost: \"ResistanceFrost\",\n    ResistanceShadow: \"ResistanceShadow\",\n    ResistanceArcane: \"ResistanceArcane\",\n};\n\nexport const emptyData = {\n    [DataPoints.Name]: \" \",\n    [DataPoints.Enchants]: \" \",\n    [DataPoints.EnchantGood]: \" \",\n    [DataPoints.EnchantAverage]: \" \",\n    [DataPoints.EnchantBad]: \" \",\n    [DataPoints.EnchantMissing]: \" \",\n    [DataPoints.EnchantList]: \" \",\n    [DataPoints.GemsMissing]: \" \",\n    [DataPoints.GemsCommon]: \" \",\n    [DataPoints.GemsUncommon]: \" \",\n    [DataPoints.GemsRare]: \" \",\n    [DataPoints.GemsEpic]: \" \",\n    [DataPoints.GemsList]: [],\n    [DataPoints.Elixirs]: \" \",\n    [DataPoints.ElixirsFlasks]: [],\n    [DataPoints.ElixirsGuardian]: [],\n    [DataPoints.ElixirsBattle]: [],\n    [DataPoints.ElixirsFood]: [],\n    [DataPoints.ElixirsSeasonal]: [],\n    [DataPoints.ElixirsScrolls]: [],\n    [DataPoints.ElixirsWeaponEnchants]: [],\n    [DataPoints.Deaths]: \" \",\n    [DataPoints.ProtectionPotionsTotal]: \" \",\n    [DataPoints.ProtectionPotionsTotalAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsNature]: \" \",\n    [DataPoints.ProtectionPotionsGreaterNature]: \" \",\n    [DataPoints.ProtectionPotionsMajorNature]: \" \",\n    [DataPoints.ProtectionPotionsNatureAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsFire]: \" \",\n    [DataPoints.ProtectionPotionsGreaterFire]: \" \",\n    [DataPoints.ProtectionPotionsMajorFire]: \" \",\n    [DataPoints.ProtectionPotionsFireAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsFrost]: \" \",\n    [DataPoints.ProtectionPotionsGreaterFrost]: \" \",\n    [DataPoints.ProtectionPotionsMajorFrost]: \" \",\n    [DataPoints.ProtectionPotionsFrostAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsShadow]: \" \",\n    [DataPoints.ProtectionPotionsGreaterShadow]: \" \",\n    [DataPoints.ProtectionPotionsMajorShadow]: \" \",\n    [DataPoints.ProtectionPotionsShadowAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsGreaterArcane]: \" \",\n    [DataPoints.ProtectionPotionsMajorArcane]: \" \",\n    [DataPoints.ProtectionPotionsArcaneAbsorbed]: \" \",\n    [DataPoints.ConsumesPotions]: \" \",\n    [DataPoints.ConsumesDrums]: \" \",\n    [DataPoints.ConsumesGems]: \" \",\n    [DataPoints.ConsumesExplosives]: \" \",\n    [DataPoints.ConsumesBandages]: \" \",\n    [DataPoints.ConsumesManaPots]: \" \",\n    [DataPoints.ConsumesRunes]: \" \",\n    [DataPoints.ConsumesRejuvPots]: \" \",\n    [DataPoints.ConsumesHealthPots]: \" \",\n    [DataPoints.ConsumesHealthStones]: \" \",\n    [DataPoints.ConsumesRagePotions]: \" \",\n    [DataPoints.ConsumesThistleTea]: \" \",\n    [DataPoints.ConsumesRestorationPots]: \" \",\n    [DataPoints.ConsumesElixirOfPoisonResistance]: \" \",\n    [DataPoints.ConsumesFreeActionPotion]: \" \",\n    [DataPoints.ConsumesManaGem]: \" \",\n    [DataPoints.ConsumesNightmareSeed]: \" \",\n    [DataPoints.ConsumesStoneshield]: \" \",\n    [DataPoints.ConsumesOilOfImmolation]: \" \",\n    [DataPoints.ConsumesHeavyRuneclothBandage]: \" \",\n    [DataPoints.ConsumesAntiVenom]: \" \",\n    [DataPoints.ConsumesHolyWater]: \" \",\n    [DataPoints.ConsumesSapperCharge]: \" \",\n    [DataPoints.ConsumesEzThro]: \" \",\n    [DataPoints.ConsumesFelIronBombs]: \" \",\n    [DataPoints.ConsumesArcaneBombs]: \" \",\n    [DataPoints.ConsumesDenseDynamite]: \" \",\n    [DataPoints.ConsumesDrumsBattle]: \" \",\n    [DataPoints.ConsumesDrumsRestoration]: \" \",\n    [DataPoints.ConsumesDrumsPanic]: \" \",\n    [DataPoints.ConsumesDrumsWar]: \" \",\n    [DataPoints.ConsumesInsaneStrength]: \" \",\n    [DataPoints.ConsumesShrouding]: \" \",\n    [DataPoints.ConsumesFelRegeneration]: \" \",\n    [DataPoints.ConsumesHeroic]: \" \",\n    [DataPoints.ConsumesDestruction]: \" \",\n    [DataPoints.ConsumesHaste]: \" \",\n    [DataPoints.ConsumesFelMana]: \" \",\n    [DataPoints.ConsumesIronshield]: \" \",\n    [DataPoints.DispelTotal]: \" \",\n    [DataPoints.DispelBoss]: \" \",\n    [DataPoints.DispelTrash]: \" \",\n    [DataPoints.DispelPoison]: \" \",\n    [DataPoints.DispelDisease]: \" \",\n    [DataPoints.DispelCurse]: \" \",\n    [DataPoints.DispelMagic]: \" \",\n    [DataPoints.DispelFrenzy]: \" \",\n    [DataPoints.DispelDruidCurePoison]: \" \",\n    [DataPoints.DispelDruidAbolishPoison]: \" \",\n    [DataPoints.DispelDruidRemoveCurse]: \" \",\n    [DataPoints.DispelHunterTranqShot]: \" \",\n    [DataPoints.DispelMageRemoveLesserCurse]: \" \",\n    [DataPoints.DispelPaladinPurify]: \" \",\n    [DataPoints.DispelPaladinCleanse]: \" \",\n    [DataPoints.DispelPriestDispelMagic]: \" \",\n    [DataPoints.DispelPriestCureDisease]: \" \",\n    [DataPoints.DispelPriestAbolishDisease]: \" \",\n    [DataPoints.DispelShamanPurge]: \" \",\n    [DataPoints.DispelShamanCurePoison]: \" \",\n    [DataPoints.DispelShamanCureDisease]: \" \",\n    [DataPoints.DispelShamanPoisonCleansingTotem]: \" \",\n    [DataPoints.DispelShamanDiseaseCleansingTotem]: \" \",\n    [DataPoints.DispelWarlockDevourMagic]: \" \",\n    [DataPoints.InterruptTotal]: \" \",\n    [DataPoints.InterruptDruidBash]: \" \",\n    [DataPoints.InterruptDruidFeralCharge]: \" \",\n    [DataPoints.InterruptMageCounterspell]: \" \",\n    [DataPoints.InterruptPaladinHammerOfJustice]: \" \",\n    [DataPoints.InterruptPriestSilence]: \" \",\n    [DataPoints.InterruptRogueKick]: \" \",\n    [DataPoints.InterruptShamanEarthShock]: \" \",\n    [DataPoints.InterruptWarriorPummel]: \" \",\n    [DataPoints.InterruptCheapShot]: \" \",\n    [DataPoints.InterruptWarlockSpellLock]: \" \",\n    [DataPoints.InterruptHunterIntimidate]: \" \",\n    [DataPoints.InterruptWarstomp]: \" \",\n    [DataPoints.Cooldowns]: [],\n    [DataPoints.CooldownsRacial]: [],\n    [DataPoints.CooldownsAbility]: [],\n    [DataPoints.CooldownsItems]: [],\n    [DataPoints.DamageTakenHit]: \" \",\n    [DataPoints.DamageTakenCrushed]: \" \",\n    [DataPoints.DamageTakenCrit]: \" \",\n    [DataPoints.DamageTakenBlocked]: \" \",\n    [DataPoints.DamageTakenParry]: \" \",\n    [DataPoints.DamageTakenDodge]: \" \",\n    [DataPoints.DamageTakenMiss]: \" \",\n    [DataPoints.ResistanceArcane]: \" \",\n    [DataPoints.ResistanceFire]: \" \",\n    [DataPoints.ResistanceFrost]: \" \",\n    [DataPoints.ResistanceNature]: \" \",\n    [DataPoints.ResistanceShadow]: \" \",\n}\n","import {Component, Children, isValidElement, cloneElement} from \"react\";\nimport {protectionPotionEnum, rarity, enchants} from \"../data\";\nimport {battleElixirBuffs, cooldownList, flaskBuffs, foodBuffs, guardianElixirBuffs, scrollBuffs, seasonBuffs, tempWeaponEnchants} from \"../datastore\";\nimport {DataPoints, emptyData} from \"./GridContexts\";\nimport {sumNonNull} from \"../utils\";\n\nexport class GridRow extends Component {\n    constructor(props) {\n        super(props);\n\n        this._logLoader = props.logLoader;\n        let report = this._logLoader.getResults();\n\n        this.state = {\n            id: props.character.id,\n            classType: props.character.type,\n            raidTime: report.endTime - report.startTime,\n            isLoaded: false,\n            error: null,\n            Data: this._flattenCharacterData(null),\n        }\n    }\n\n    componentDidMount() {\n        \n        this._logLoader.loadCharacterDetails(this.state.id)\n        .then((data) => {\n            let character = data.getCharacter(this.state.id, this.props.fightId);\n\n            this.setState({\n                isLoaded: true,\n                Data: this._flattenCharacterData(character),\n            });\n        })\n        .catch((error) => {\n            this.setState({\n                isLoaded: true,\n                error: error\n            })\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.fightId !== prevProps.fightId) {\n            let character = this._logLoader.getCharacter(this.state.id, this.props.fightId);\n\n            this.setState({\n                isLoaded: true,\n                Data: this._flattenCharacterData(character),\n            });\n        }\n    }\n\n    _flattenCharacterData(character) {\n        let characterData = {...emptyData, Name: this.props.character.name};\n\n        if (!character) {\n            return characterData;\n        }\n\n        characterData[DataPoints.Name] = character.name;\n        characterData[DataPoints.Deaths] = this._getDeathCount(character);\n\n        this._getEnchantInfo(character, characterData);\n\n        characterData[DataPoints.GemsMissing] = this._getMissingGemCount(character);\n        characterData[DataPoints.GemsCommon] = this._getGemCount(character, rarity.Common);\n        characterData[DataPoints.GemsUncommon] = this._getGemCount(character, rarity.Uncommon);\n        characterData[DataPoints.GemsRare] = this._getGemCount(character, rarity.Rare);\n        characterData[DataPoints.GemsEpic] = this._getGemCount(character, rarity.Epic);\n        characterData[DataPoints.GemsList] = this._getGemList(character);\n\n        characterData[DataPoints.ElixirsFood] = this._getBuffs(character, foodBuffs);\n        characterData[DataPoints.ElixirsFlasks] = this._getBuffs(character, flaskBuffs);\n        characterData[DataPoints.ElixirsBattle] = this._getBuffs(character, battleElixirBuffs);\n        characterData[DataPoints.ElixirsGuardian] = this._getBuffs(character, guardianElixirBuffs);\n        characterData[DataPoints.ElixirsSeasonal] = this._getBuffs(character, seasonBuffs);\n        characterData[DataPoints.ElixirsScrolls] = this._getBuffs(character, scrollBuffs);\n        characterData[DataPoints.ElixirsWeaponEnchants] = this._getWeaponImbue(character, tempWeaponEnchants);\n\n        characterData[DataPoints.ProtectionPotionsGreaterArcane] = this._getProtectionPotionCount(character, protectionPotionEnum.GAPP);\n        characterData[DataPoints.ProtectionPotionsMajorArcane] = this._getProtectionPotionCount(character, protectionPotionEnum.MAPP);\n        characterData[DataPoints.ProtectionPotionsArcaneAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GAPP, protectionPotionEnum.MAPP);\n        characterData[DataPoints.ProtectionPotionsFire] = this._getProtectionPotionCount(character, protectionPotionEnum.FPP);\n        characterData[DataPoints.ProtectionPotionsGreaterFire] = this._getProtectionPotionCount(character, protectionPotionEnum.GFPP);\n        characterData[DataPoints.ProtectionPotionsMajorFire] = this._getProtectionPotionCount(character, protectionPotionEnum.MFPP);\n        characterData[DataPoints.ProtectionPotionsFireAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GFPP, protectionPotionEnum.FPP, protectionPotionEnum.MFPP);\n        characterData[DataPoints.ProtectionPotionsFrost] = this._getProtectionPotionCount(character, protectionPotionEnum.FrPP);\n        characterData[DataPoints.ProtectionPotionsGreaterFrost] = this._getProtectionPotionCount(character, protectionPotionEnum.GFrPP);\n        characterData[DataPoints.ProtectionPotionsMajorFrost] = this._getProtectionPotionCount(character, protectionPotionEnum.MFrPP);\n        characterData[DataPoints.ProtectionPotionsFrostAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GFrPP, protectionPotionEnum.FrPP, protectionPotionEnum.MFrPP);\n        characterData[DataPoints.ProtectionPotionsNature] = this._getProtectionPotionCount(character, protectionPotionEnum.NPP);\n        characterData[DataPoints.ProtectionPotionsGreaterNature] = this._getProtectionPotionCount(character, protectionPotionEnum.GNPP);\n        characterData[DataPoints.ProtectionPotionsMajorNature] = this._getProtectionPotionCount(character, protectionPotionEnum.MNPP);\n        characterData[DataPoints.ProtectionPotionsNatureAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GNPP, protectionPotionEnum.NPP, protectionPotionEnum.MNPP);\n        characterData[DataPoints.ProtectionPotionsShadow] = this._getProtectionPotionCount(character, protectionPotionEnum.SPP);\n        characterData[DataPoints.ProtectionPotionsGreaterShadow] = this._getProtectionPotionCount(character, protectionPotionEnum.GSPP);\n        characterData[DataPoints.ProtectionPotionsMajorShadow] = this._getProtectionPotionCount(character, protectionPotionEnum.MSPP);\n        characterData[DataPoints.ProtectionPotionsShadowAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GSPP, protectionPotionEnum.SPP, protectionPotionEnum.MSPP);\n\n        characterData[DataPoints.ProtectionPotionsTotal] = sumNonNull(characterData[DataPoints.ProtectionPotionsGreaterArcane],\n            characterData[DataPoints.ProtectionPotionsMajorArcane],\n            characterData[DataPoints.ProtectionPotionsFire],\n            characterData[DataPoints.ProtectionPotionsGreaterFire],\n            characterData[DataPoints.ProtectionPotionsMajorFire],\n            characterData[DataPoints.ProtectionPotionsFrost],\n            characterData[DataPoints.ProtectionPotionsGreaterFrost],\n            characterData[DataPoints.ProtectionPotionsMajorFrost],\n            characterData[DataPoints.ProtectionPotionsNature],\n            characterData[DataPoints.ProtectionPotionsGreaterNature],\n            characterData[DataPoints.ProtectionPotionsMajorNature],\n            characterData[DataPoints.ProtectionPotionsShadow],\n            characterData[DataPoints.ProtectionPotionsGreaterShadow],\n            characterData[DataPoints.ProtectionPotionsMajorShadow]);\n\n        characterData[DataPoints.ProtectionPotionsTotalAbsorbed] = sumNonNull(characterData[DataPoints.ProtectionPotionsArcaneAbsorbed],\n            characterData[DataPoints.ProtectionPotionsFireAbsorbed],\n            characterData[DataPoints.ProtectionPotionsFrostAbsorbed],\n            characterData[DataPoints.ProtectionPotionsNatureAbsorbed],\n            characterData[DataPoints.ProtectionPotionsShadowAbsorbed]);\n\n        characterData[DataPoints.ConsumesManaPots] = this._getCastCount(character, 17531, 28499, 41618, 41617);\n        characterData[DataPoints.ConsumesRejuvPots] = this._getCastCount(character, 22729, 28517, 45051);\n        characterData[DataPoints.ConsumesHealthPots] = this._getCastCount(character, 17534, 28495, 41620, 41619);\n        characterData[DataPoints.ConsumesFreeActionPotion] = this._getCastCount(character, 6615, 24364);\n        characterData[DataPoints.ConsumesRestorationPots] = this._getCastCount(character, 11359, 17550);\n        characterData[DataPoints.ConsumesRagePotions] = this._getCastCount(character, 6613, 17528);\n        characterData[DataPoints.ConsumesStoneshield] = this._getCastCount(character, 17540);\n        characterData[DataPoints.ConsumesInsaneStrength] = this._getCastCount(character, 28494);\n        characterData[DataPoints.ConsumesShrouding] = this._getCastCount(character, 28548);\n        characterData[DataPoints.ConsumesFelRegeneration] = this._getCastCount(character, 38908);\n        characterData[DataPoints.ConsumesHeroic] = this._getCastCount(character, 28506);\n        characterData[DataPoints.ConsumesDestruction] = this._getCastCount(character, 28508); // Check for buff on combat start\n        characterData[DataPoints.ConsumesHaste] = this._getCastCount(character, 28507); // Check for buff on combat start\n        characterData[DataPoints.ConsumesFelMana] = this._getCastCount(character, 38929);\n        characterData[DataPoints.ConsumesIronshield] = this._getCastCount(character, 17540, 28515);\n\n        characterData[DataPoints.ConsumesRunes] = this._getCastCount(character, 16666, 27869);\n        characterData[DataPoints.ConsumesHealthStones] = this._getCastCount(character, 27235, 27236, 27237);\n        characterData[DataPoints.ConsumesWhipperRootTuber] = this._getCastCount(character, 15700);\n        characterData[DataPoints.ConsumesThistleTea] = this._getCastCount(character, 9512);\n        characterData[DataPoints.ConsumesManaGem] = this._getCastCount(character, 10058, 10057, 10052, 5405, 27103);\n        characterData[DataPoints.ConsumesNightmareSeed] = this._getCastCount(character, 28726);\n\n        characterData[DataPoints.ConsumesDrumsBattle] = this._getCastCount(character, 35476, 351355);\n        characterData[DataPoints.ConsumesDrumsWar] = this._getCastCount(character, 35475, 351360);\n        characterData[DataPoints.ConsumesDrumsRestoration] = this._getCastCount(character, 35478, 351358);\n        characterData[DataPoints.ConsumesDrumsPanic] = this._getCastCount(character, 35474, 351357);\n\n        characterData[DataPoints.ConsumesHolyWater] = this._getCastCount(character, 17291);\n        characterData[DataPoints.ConsumesSapperCharge] = this._getCastCount(character, 13241, 30486);\n        characterData[DataPoints.ConsumesDenseDynamite] = this._getCastCount(character, 23063);\n        characterData[DataPoints.ConsumesEzThro] = this._getCastCount(character, 23000);\n        characterData[DataPoints.ConsumesFelIronBombs] = this._getCastCount(character, 30216);\n        characterData[DataPoints.ConsumesArcaneBombs] = this._getCastCount(character, 19821);\n\n        characterData[DataPoints.ConsumesHeavyRuneclothBandage] = this._getCastCount(character, 18610, 27030, 27031);\n        characterData[DataPoints.ConsumesAntiVenom] = this._getCastCount(character, 23786);\n\n        characterData[DataPoints.ConsumesPotions] = sumNonNull(characterData[DataPoints.ConsumesManaPots],\n            characterData[DataPoints.ConsumesRejuvPots],\n            characterData[DataPoints.ConsumesHealthPots],\n            characterData[DataPoints.ConsumesFreeActionPotion],\n            characterData[DataPoints.ConsumesRestorationPots],\n            characterData[DataPoints.ConsumesRagePotions],\n            characterData[DataPoints.ConsumesInsaneStrength],\n            characterData[DataPoints.ConsumesShrouding],\n            characterData[DataPoints.ConsumesFelRegeneration],\n            characterData[DataPoints.ConsumesHeroic],\n            characterData[DataPoints.ConsumesDestruction],\n            characterData[DataPoints.ConsumesHaste],\n            characterData[DataPoints.ConsumesFelMana],\n            characterData[DataPoints.ConsumesIronshield]);\n\n        characterData[DataPoints.ConsumesGems] = sumNonNull(characterData[DataPoints.ConsumesRunes],\n            characterData[DataPoints.ConsumesHealthStones],\n            characterData[DataPoints.ConsumesWhipperRootTuber],\n            characterData[DataPoints.ConsumesThistleTea],\n            characterData[DataPoints.ConsumesManaGem],\n            characterData[DataPoints.ConsumesNightmareSeed]);\n\n        characterData[DataPoints.ConsumesDrums] = sumNonNull(characterData[DataPoints.ConsumesDrumsBattle],\n            characterData[DataPoints.ConsumesDrumsWar],\n            characterData[DataPoints.ConsumesDrumsRestoration],\n            characterData[DataPoints.ConsumesDrumsPanic]);\n\n        characterData[DataPoints.ConsumesExplosives] = sumNonNull(characterData[DataPoints.ConsumesHolyWater],\n            characterData[DataPoints.ConsumesSapperCharge],\n            characterData[DataPoints.ConsumesDenseDynamite],\n            characterData[DataPoints.ConsumesFelIronBombs],\n            characterData[DataPoints.ConsumesEzThro],\n            characterData[DataPoints.ConsumesArcaneBombs]);\n\n        characterData[DataPoints.ConsumesBandages] = sumNonNull(characterData[DataPoints.ConsumesHeavyRuneclothBandage],\n            characterData[DataPoints.ConsumesAntiVenom]);\n\n        characterData[DataPoints.DispelDruidCurePoison] = this._getCastCount(character, 8946);\n        characterData[DataPoints.DispelDruidAbolishPoison] = this._getCastCount(character, 2893);\n        characterData[DataPoints.DispelDruidRemoveCurse] = this._getCastCount(character, 2782);\n        characterData[DataPoints.DispelHunterTranqShot] = this._getCastCount(character, 19801);\n        characterData[DataPoints.DispelMageRemoveLesserCurse] = this._getCastCount(character, 475);\n        characterData[DataPoints.DispelPaladinPurify] = this._getCastCount(character, 1152);\n        characterData[DataPoints.DispelPaladinCleanse] = this._getCastCount(character, 4987);\n        characterData[DataPoints.DispelPriestDispelMagic] = this._getCastCount(character, 988, 527);\n        characterData[DataPoints.DispelPriestCureDisease] = this._getCastCount(character, 528);\n        characterData[DataPoints.DispelPriestAbolishDisease] = this._getCastCount(character, 552);\n        characterData[DataPoints.DispelShamanPurge] = this._getCastCount(character, 8012, 370);\n        characterData[DataPoints.DispelShamanCurePoison] = this._getCastCount(character, 526);\n        characterData[DataPoints.DispelShamanCureDisease] = this._getCastCount(character, 2870);\n        characterData[DataPoints.DispelShamanPoisonCleansingTotem] = this._getCastCount(character, 8166);\n        characterData[DataPoints.DispelShamanDiseaseCleansingTotem] = this._getCastCount(character, 8170);\n        characterData[DataPoints.DispelWarlockDevourMagic] = this._getCastCount(character, 19505, 19731, 19734, 19736, 27276, 27277);\n\n        characterData[DataPoints.DispelPoison] = sumNonNull(characterData[DataPoints.DispelDruidCurePoison],\n            characterData[DataPoints.DispelDruidAbolishPoison],\n            characterData[DataPoints.DispelShamanCurePoison],\n            characterData[DataPoints.DispelShamanPoisonCleansingTotem]);\n\n        characterData[DataPoints.DispelDisease] = sumNonNull(characterData[DataPoints.DispelPriestCureDisease],\n            characterData[DataPoints.DispelPriestAbolishDisease],\n            characterData[DataPoints.DispelShamanCureDisease],\n            characterData[DataPoints.DispelShamanDiseaseCleansingTotem]);\n\n        characterData[DataPoints.DispelCurse] = sumNonNull(characterData[DataPoints.DispelDruidRemoveCurse],\n            characterData[DataPoints.DispelMageRemoveLesserCurse]);\n\n        characterData[DataPoints.DispelMagic] = sumNonNull(characterData[DataPoints.DispelPriestDispelMagic],\n            characterData[DataPoints.DispelShamanPurge],\n            characterData[DataPoints.DispelPaladinCleanse],\n            characterData[DataPoints.DispelWarlockDevourMagic]);\n\n        characterData[DataPoints.DispelFrenzy] = sumNonNull(characterData[DataPoints.DispelHunterTranqShot]);\n\n        characterData[DataPoints.DispelBoss] = this._getBossCastCount(character, 8946, 2893, 2782, 19801, 475, 1152, 4987, 988, 527, 528, 552, 8012, 370, 526, 2870, 8166, 8170, 19505, 19731, 19734, 19736, 27276, 27277);\n        characterData[DataPoints.DispelTrash] = this._getTrashCastCount(character, 8946, 2893, 2782, 19801, 475, 1152, 4987, 988, 527, 528, 552, 8012, 370, 526, 2870, 8166, 8170, 19505, 19731, 19734, 19736, 27276, 27277);\n\n        characterData[DataPoints.DispelTotal] = sumNonNull(characterData[DataPoints.DispelPoison],\n            characterData[DataPoints.DispelDisease],\n            characterData[DataPoints.DispelCurse],\n            characterData[DataPoints.DispelMagic],\n            characterData[DataPoints.DispelFrenzy]);\n\n        characterData[DataPoints.InterruptDruidBash] = this._getInterruptCount(character, 8983);\n        characterData[DataPoints.InterruptDruidFeralCharge] = this._getInterruptCount(character, 19675);\n        characterData[DataPoints.InterruptMageCounterspell] = this._getInterruptCount(character, 2139);\n        characterData[DataPoints.InterruptPaladinHammerOfJustice] = this._getInterruptCount(character, 10308);\n        characterData[DataPoints.InterruptPriestSilence] = this._getInterruptCount(character, 15487);\n        characterData[DataPoints.InterruptRogueKick] = this._getInterruptCount(character, 1769, 1768, 1767, 1766, 38768);\n        characterData[DataPoints.InterruptCheapShot] = this._getInterruptCount(character, 1833);\n        characterData[DataPoints.InterruptShamanEarthShock] = this._getInterruptCount(character, 10414, 8042, 8044, 8045, 8046, 10412, 10413, 25454);\n        characterData[DataPoints.InterruptWarriorPummel] = this._getInterruptCount(character, 6552, 6554);\n        characterData[DataPoints.InterruptWarlockSpellLock] = this._getInterruptCount(character, 19647);\n        characterData[DataPoints.InterruptHunterIntimidate] = this._getInterruptCount(character, 24394);\n        characterData[DataPoints.InterruptWarstomp] = this._getInterruptCount(character, 20549);\n\n        characterData[DataPoints.InterruptTotal] = sumNonNull(characterData[DataPoints.InterruptDruidBash],\n            characterData[DataPoints.InterruptDruidFeralCharge],\n            characterData[DataPoints.InterruptMageCounterspell],\n            characterData[DataPoints.InterruptPaladinHammerOfJustice],\n            characterData[DataPoints.InterruptPriestSilence],\n            characterData[DataPoints.InterruptRogueKick],\n            characterData[DataPoints.InterruptCheapShot],\n            characterData[DataPoints.InterruptShamanEarthShock],\n            characterData[DataPoints.InterruptWarlockSpellLock],\n            characterData[DataPoints.InterruptHunterIntimidate],\n            characterData[DataPoints.InterruptWarstomp],\n            characterData[DataPoints.InterruptWarriorPummel]);\n\n        characterData[DataPoints.Cooldowns] = this._getCooldownList(character);\n        characterData[DataPoints.CooldownsRacial] = this._getCooldownList(character, \"Racial\");\n        characterData[DataPoints.CooldownsAbility] = this._getCooldownList(character, \"Ability\");\n        characterData[DataPoints.CooldownsItems] = this._getCooldownList(character, \"Trinket\");\n\n        characterData[DataPoints.ResistanceArcane] = this._cleanResistanceValue(character.summary.resistances?.arcane, character.summary.resistances?.includesGreens);\n        characterData[DataPoints.ResistanceFire] = this._cleanResistanceValue(character.summary.resistances?.fire, character.summary.resistances?.includesGreens);\n        characterData[DataPoints.ResistanceFrost] = this._cleanResistanceValue(character.summary.resistances?.frost, character.summary.resistances?.includesGreens);\n        characterData[DataPoints.ResistanceNature] = this._cleanResistanceValue(character.summary.resistances?.nature, character.summary.resistances?.includesGreens);\n        characterData[DataPoints.ResistanceShadow] = this._cleanResistanceValue(character.summary.resistances?.shadow, character.summary.resistances?.includesGreens);\n\n        this._getTankStats(character, characterData);\n        \n        this.props.onDataUpdate(characterData);\n\n        return characterData;\n    }\n\n    _cleanResistanceValue(value, includesGreens) {\n        return value ? value + (includesGreens ? \"*\" : \"\") : 0\n    }\n\n    _getBuffs(character, options) {\n        const {buffs} = character;\n\n        if (!buffs) {\n            return [];\n        }\n\n        let activeBuffs = [];\n        for (let i = 0; i < options.length; ++i) {\n            if (buffs[options[i].id]) {\n                activeBuffs.push(options[i]);\n            }\n        }\n\n        return activeBuffs;\n    }\n\n    _getWeaponImbue(character, options) {\n        const {weaponEnchant, offhandEnchant} = character.summary;\n\n        if (!weaponEnchant) {\n            return [];\n        }\n\n        let activeBuffs = [];\n        for (let i = 0; i < options.length; ++i) {\n            if (weaponEnchant.id === options[i].id) {\n                activeBuffs.push(options[i]);\n            }\n            if (offhandEnchant.id === options[i].id) {\n                activeBuffs.push({...options[i], name: options[i].name + ' (OH)'});\n            }\n            \n        }\n\n        return activeBuffs;\n    }\n\n    _getMissingGemCount(character) {\n        const {gems} = character.summary;\n\n        if (!gems) {\n            return null;\n        }\n\n        return gems[0].count;\n    }\n\n    _getGemCount(character, rarity) {\n        const {gems} = character.summary;\n\n        if (!gems) {\n            return null;\n        }\n\n        let gemList = Object.values(gems);\n\n        return gemList.reduce((gemCount, gem) => {\n\n            if (gem.rarity === rarity) {\n                gemCount += gem.count;\n            }\n\n            return gemCount;\n        }, 0)\n\n    }\n\n    _getGemList(character) {\n        const {gems} = character.summary;\n\n        if (!gems) {\n            return [];\n        }\n\n        let gemList = Object.values(gems).filter(x => x.id !== 0);\n\n        return gemList.reduce((gemIcons, gem) => {\n\n            gemIcons.push({\n                id: gem.id,\n                itemId: gem.id,\n                name: gem.count + \" x \" + gem.label + \" (\" + gem.description + \")\",\n                icon: gem.icon,\n                count: gem.count,\n            })\n\n            return gemIcons;\n        }, []);\n    }\n\n    _getCooldownList(character, type = null) {\n        const {casts} = character;\n\n        if (!casts) {\n            return [];\n        }\n\n        let cooldowns = casts.reduce((cds, cast) => {\n            let cooldownInfo = cooldownList[cast.ability.guid];\n            if (cooldownInfo && (type == null || type === cooldownInfo.type)) {\n                if (cds[cast.ability.guid]) {\n                    cds[cast.ability.guid].count++;\n                }\n                else {\n                    cds[cast.ability.guid] = {\n                        id: cast.ability.guid,\n                        itemId: cooldownInfo.itemId,\n                        spellId: cast.ability.guid,\n                        name: cooldownInfo.name,\n                        icon: cooldownInfo.icon,\n                        count: 1\n                    }\n                }\n            }\n\n            return cds;\n        }, {});\n\n        return Object.values(cooldowns);\n    }\n\n    _getProtectionPotionCount(character, spellId) {\n        const {casts, protectionPotions, fights} = character;\n\n        let count = 0;\n        let countByFight = {};\n\n        if (casts) {\n            for (let i = 0; i < casts.length; ++i) {\n                let cast = casts[i];\n                if (cast.ability.guid === spellId) {\n                    if (!countByFight[cast.fight]) {\n                        countByFight[cast.fight] = {\n                            count: 1,\n                            firstCast: cast.timestamp,\n                        };\n                    }\n                    else {\n                        countByFight[cast.fight].count++;\n                    }\n                }\n            }\n        }\n\n        if (fights) {\n            for (let i = 0; i < fights.length; ++i) {\n                let fight = fights[i];\n                let protectionPotion = protectionPotions[spellId] || null;\n\n                if (countByFight[fight.id]) {\n                    count += countByFight[fight.id].count;\n\n                    if (protectionPotion !== null && protectionPotion.firstAbsorb[fight.id]) {\n                        if (protectionPotion.firstAbsorb[fight.id] < countByFight[fight.id].firstCast) {\n                            count++;\n                        }\n                    }\n                }\n                else {\n                    if (protectionPotion !== null && protectionPotion.firstAbsorb[fight.id]) {\n                        count++;\n                    }\n                }\n            }\n        }\n\n        return count;\n    }\n\n    _getProtectionPotionAbsorb(character, spellId1, spellId2) {\n        const {protectionPotions} = character;\n\n        let absorbed = 0;\n\n        absorbed += (protectionPotions[spellId1]?.amount || 0);\n        absorbed += (protectionPotions[spellId2]?.amount || 0);\n\n        return absorbed;\n    }\n\n    _getDeathCount(character) {\n        const {deaths} = character;\n\n        return deaths?.length;\n    }\n\n    _getBossCastCount(character, ...spellIds) {\n        return this._getRestrictedCastCount(character, \"boss\", spellIds);\n    }\n\n    _getTrashCastCount(character, ...spellIds) {\n        return this._getRestrictedCastCount(character, \"trash\", spellIds);\n    }\n\n    _getInterruptCount(character, ...spellIds) {\n        const {interrupts} = character;\n\n        if (!interrupts) {\n            return 0;\n        }\n\n        let castCount = 0;\n        for (let i = 0; i < interrupts.length; ++i) {\n            let cast = interrupts[i];\n            if (spellIds.includes(cast.ability.guid)) {\n                castCount++;\n            }\n        }\n\n        return castCount;\n    }\n\n    _getRestrictedCastCount(character, fightType, spellIds) {\n        const {casts} = character;\n\n        if (!casts) {\n            return 0;\n        }\n\n        let castCount = 0;\n        for (let i = 0; i < casts.length; ++i) {\n            let cast = casts[i];\n            if ((fightType == null || cast.fightType === fightType) && cast.type === \"cast\" && spellIds.includes(cast.ability.guid)) {\n                castCount++;\n            }\n        }\n\n        return castCount;\n    }\n\n    _getCastCount(character, ...spellIds) {\n        return this._getRestrictedCastCount(character, null, spellIds);\n    }\n\n    _getDamageDone(character, ...spellIds) {\n        const {damageTaken} = character;\n\n        let damageTakenArray = Object.values(damageTaken);\n\n        let damageAmount = 0;\n        for (let i = 0; i < damageTakenArray.length; ++i) {\n            let damage = damageTakenArray[i];\n            if (spellIds.includes(damage.guid)) {\n                damageAmount += damage.total;\n            }\n        }\n\n        return damageAmount;\n    }\n\n    _addIfNotNull(characterData, properyName, propertyLabel, table) {\n        if (characterData[properyName]) {\n            table.push({name: propertyLabel, value: characterData[properyName]});\n        }\n    }\n    _getDamageTakenTable(characterData) {\n        let damageTakenTable = [];\n\n        this._addIfNotNull(characterData, DataPoints.DamageWhirlwind, \"Whirlwind\", damageTakenTable);\n\n        this._addIfNotNull(characterData, DataPoints.DamageRainOfFire, \"Rain of Fire\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFireShield, \"Fire Shield\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFlames, \"Flames\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageCleave, \"Cleave\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageBlizzard, \"Blizzard\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageExplode, \"Explode\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageImpale, \"Impale\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageBomb, \"Bomb\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageThunderclap, \"Thunderclap\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageShadowStorm, \"Shadow Storm\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageDarkGlare, \"Dark Glare\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFalling, \"Falling\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageVoidZone, \"Void Zone\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamagePoisonCloud, \"Poison Cloud\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFrostBreath, \"Frost Breath\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageEruption, \"Eruption\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageBroodPowerBronze, \"Brood Power Bronze\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageVoidBlast, \"Void Blast\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageTailSweep, \"Tail Sweep\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamagePositiveCharge, \"Positive Charge\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageNegativeCharge, \"Negative Charge\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageDisruptingShout, \"Disrupting Shout\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageChill, \"Chill\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageDarkBlast, \"Dark Blast\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageWailOfSouls, \"wail of Souls\", damageTakenTable);\n\n        return damageTakenTable;\n    }\n\n    _getTankStats(character, characterData) {\n        let meleeDamage = [];\n        Object.values(character.damageTaken).forEach(value => {\n            if (value.length > 0 && value[0].ability.type === 1) {\n                meleeDamage = [...meleeDamage,...value];\n            }\n        });\n        if (meleeDamage.length === 0)\n            return;\n\n        let totalHits = meleeDamage.length;\n        const hitMap = {\n            \"0\": DataPoints.DamageTakenMiss,\n            \"1\": DataPoints.DamageTakenHit,\n            \"2\": DataPoints.DamageTakenCrit,\n            \"4\": DataPoints.DamageTakenBlocked,\n            \"7\": DataPoints.DamageTakenDodge,\n            \"8\": DataPoints.DamageTakenParry,\n            \"15\": DataPoints.DamageTakenCrushed,\n        };\n\n        let breakdown = meleeDamage.reduce((accum, obj) => {\n            let hitType = obj.hitType.toString();\n            if (!accum[hitType]) {\n                accum[hitType] = {\n                    type: hitType,\n                    count: 1,\n                }\n            }\n            else {\n                accum[hitType].count += 1;\n            }\n\n            return accum;\n        }, {})\n\n        Object.values(breakdown).forEach(hit => {\n            let hitType = hitMap[hit.type];\n            if (!hitType)\n                return;\n\n            characterData[hitType] = hit.count / totalHits;\n        });\n    }\n\n    _getEnchantInfo(character, characterData) {\n        let enchantList = [];\n\n        const slotToIconMapping = {\n            0: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_head.jpg\",\n            1: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_neck.jpg\",\n            2: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_shoulder.jpg\",\n            3: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_shirt.jpg\",\n            4: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_chest.jpg\",\n            5: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_waist.jpg\",\n            6: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_legs.jpg\",\n            7: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_feet.jpg\",\n            8: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_wrists.jpg\",\n            9: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_hands.jpg\",\n            10: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_finger.jpg\",\n            11: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_finger.jpg\",\n            12: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_trinket.jpg\",\n            13: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_trinket.jpg\",\n            14: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_chest.jpg\",\n            15: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_mainhand.jpg\",\n            16: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_offhand.jpg\",\n            17: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_ranged.jpg\",\n            19: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_tabard.jpg\",\n        }\n\n        let enchantScore = character.summary.enchants.reduce((accum, enchant) => {\n            let enchantIcon = {\n                id: enchant.gearId,\n                name: enchant.name,\n                icon_url: slotToIconMapping[enchant.slot],\n            }\n\n            if (enchant.id) {\n                let enchantInfo = enchants[enchant.id];\n                let score = 0;\n                if (enchantInfo) {\n                    character.summary.specs.forEach(spec => {\n                        let specScore = enchantInfo.score[character.type + \"-\" + spec] ?? 0;\n                        if (specScore > score) {\n                            score = specScore;\n                        }\n                    });\n                    //accum += score;\n\n                    if (enchantInfo.itemId) {\n                        enchantIcon.itemId = enchantInfo.itemId;\n                    }\n\n                    if (enchantInfo.spellId) {\n                        enchantIcon.spellId = enchantInfo.spellId;\n                    }\n                }else {\n                    enchantIcon.itemId = enchant.gearId;\n                }\n\n                if (score === 1) {\n                    accum.good += 1;\n                    enchantIcon.highlight = \"good\";\n                } else if (score > 0) {\n                    accum.average += 1;\n                    enchantIcon.highlight = \"average\";\n                } else {\n                    accum.bad += 1;\n                    enchantIcon.highlight = \"bad\";\n                }\n            } else {\n                accum.missing += 1;\n                enchantIcon.itemId = enchant.gearId;\n                enchantIcon.highlight = \"missing\";\n            }\n\n            enchantList.push(enchantIcon);\n\n            return accum;\n        }, { good: 0, bad: 0, average: 0, missing: 0});\n\n        characterData[DataPoints.Enchants] = (enchantScore.good + (0.5 * enchantScore.average)) + '/' + character.summary.enchants.length;\n        characterData[DataPoints.EnchantGood] = enchantScore.good;\n        characterData[DataPoints.EnchantAverage] = enchantScore.average;\n        characterData[DataPoints.EnchantBad] = enchantScore.bad;\n        characterData[DataPoints.EnchantMissing] = enchantScore.missing;\n        characterData[DataPoints.EnchantList] = enchantList;\n    }\n\n    render() {\n        const {Data, isLoaded, error, classType} = this.state;\n        const {children, row, context} = this.props;\n\n        return (\n            <tr className={classType + \" character \" + (row % 2 === 0 ? \"even\" : \"odd\") + (!isLoaded ? \" loading\": \"\") + (error ? \" error\" : \"\")}>\n                {Children.map(children, child => {\n                    // checking isValidElement is the safe way and avoids a typescript error too\n                    if (isValidElement(child)) {\n                        return cloneElement(child, { data: Data, context: context, render: (x) => x.renderCell(), renderType: \"cell\" });\n                    }\n                    return child;\n                })}\n            </tr>\n        );\n    }\n}","import {Component, Children, isValidElement, cloneElement} from \"react\";\nimport {DataPoints, emptyData, GroupKeys} from \"./GridContexts\";\nimport {GridRow} from \"./GridRow\";\n\nexport class Grid extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: {\n                [GroupKeys.Gems]: true,\n                [GroupKeys.Enchants]: true,\n                [GroupKeys.ProtPotions]: true,\n                [GroupKeys.Consumes]: true,\n                [GroupKeys.DispelsInterrupts]: true,\n            },\n            summaryRow: {...emptyData, [DataPoints.Name]: \"Totals\"},\n        }\n\n        this._logLoader = props.logLoader;\n\n        this.handleColGroupToggle = this.handleColGroupToggle.bind(this);\n        this.handleDataUpdate = this.handleDataUpdate.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.data !== nextProps.data) {\n            return true;\n        }\n\n        if (this.props.classFilter !== nextProps.classFilter) {\n            return true;\n        }\n\n        if (this.props.roleFilter !== nextProps.roleFilter) {\n            return true;\n        }\n\n        if (this.props.fightId !== nextProps.fightId) {\n            return true;\n        }\n\n        if (this.state.collapsed !== nextState.collapsed) {\n            return true;\n        }\n\n        if (this.state.summaryRow !== nextState.summaryRow) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleColGroupToggle(colGroup) {\n        this.setState((state) => ({\n            collapsed: {...state.collapsed, [colGroup]: (state.collapsed[colGroup] ? !state.collapsed[colGroup] : true)}\n        }));\n    }\n\n    handleDataUpdate(character) {\n        const {children} = this.props;\n        let {summaryRow} = this.state;\n\n        Children.forEach(children, colGroup => {\n            if (!isValidElement(colGroup)) {\n                return;\n            }\n\n            Children.forEach(colGroup.props.children, column => {\n                if (!isValidElement(column)) {\n                    return;\n                }\n\n                if (column.props.aggregate === true && column.props.field) {\n                    const field = column.props.field;\n                    summaryRow[field] = (summaryRow[field] === ' ' ? 0 : summaryRow[field]) + character[field];\n                }\n            });\n        });\n\n        this.setState({summaryRow: {...summaryRow}});\n    }\n\n    render() {\n        const {data, children, fightId, classFilter, roleFilter, boss} = this.props;\n        const {collapsed, summaryRow} = this.state;\n\n        let ctx = {collapsed: collapsed, classFilter: classFilter, roleFilter: roleFilter, boss: boss};\n\n        return (\n        <table className=\"grid_table\">\n            <thead>\n                <tr className=\"grid_header\">\n                    {Children.map(children, child => {\n                        // checking isValidElement is the safe way and avoids a typescript error too\n                        if (isValidElement(child)) {\n                            return cloneElement(child, { render: (x) => x.renderHeader(), renderType: \"header\", context: ctx, onColGroupToggle: this.handleColGroupToggle });\n                        }\n                        return child;\n                    })}\n                </tr>\n                <tr className=\"grid_subheader\">\n                {Children.map(children, child => {\n                        // checking isValidElement is the safe way and avoids a typescript error too\n                        if (isValidElement(child)) {\n                            return cloneElement(child, { render: (x) => x.renderSubHeader(), renderType: \"sub-header\", context: ctx });\n                        }\n                        return child;\n                    })}\n                </tr>\n            </thead>\n            <tbody>\n                {data.map((obj, idx) => (\n                <GridRow key={obj.id} character={obj} row={idx} logLoader={this._logLoader} context={ctx} fightId={fightId} onDataUpdate={this.handleDataUpdate}>\n                    {children}\n                </GridRow>\n                ))}\n    \n            </tbody>\n            <tfoot>\n                <tr className=\"Summary\">\n                    {Children.map(children, child => {\n                        if (isValidElement(child)) {\n                            return cloneElement(child, { render: (x) => x.renderCell(), renderType: \"cell\", data: summaryRow, context: ctx })\n                        }\n                    })}\n                </tr>\n            </tfoot>\n        </table>\n        );\n    }\n}","export function ExpandCollapseButton(props) {\n    function handleToggle() {\n        props.onToggle();\n    }\n\n    return (\n        <span className=\"expand_toggle\" onClick={handleToggle}>{props.expanded ? \" ‹‹\" : \" ››\"}</span>\n    )\n}","import {Component, Children, cloneElement, isValidElement} from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { ExpandCollapseButton } from \"./ExpandCollapseButton\";\n\nexport class GridColumnGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            collapsed: props.context?.collapsed[props.id] || false,\n/*             classFilter: props.context?.classFilter,\n            roleFilter: props.context?.roleFilter, */\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        // If data changed and we render cells\n        if (this.props.renderType === \"cell\" && nextProps.data !== this.props.data) {\n            return true;\n        }\n\n        // If class filter or role filter changed\n        if (this.props.context?.classFilter !== nextProps.context?.classFilter ||\n            this.props.context?.roleFilter !== nextProps.context?.roleFilter) {\n                return true;\n            }\n\n        // If collapsed changed for us\n        if (this.props.context?.collapsed[this.props.id] !== nextProps.context?.collapsed[this.props.id]) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.context?.collapsed[this.props.id] !== prevProps.context?.collapsed[this.props.id]\n            /* || this.props.context?.classFilter !== prevProps.context?.classFilter\n            || this.props.context?.roleFilter !== prevProps.context?.roleFilter*/)  {\n          this.setState({\n              collapsed: this.props.context?.collapsed[this.props.id] || false,\n              /* classFilter: this.props.context?.classFilter,\n              roleFilter: this.props.context?.roleFilter, */\n          })\n        }\n\n        ReactTooltip.rebuild();\n    }\n\n    componentDidMount() {\n        ReactTooltip.rebuild();\n    }\n\n    _getVisibleChildCount() {\n        const {children} = this.props;\n        let ctx =  this._getContext();\n\n        let visibleCount = 0;\n        Children.forEach(children, (child) => {\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(ctx);\n                    if (isVisible) {\n                        visibleCount++;\n                    }\n                }\n                else {\n                    visibleCount++;\n                }\n            }\n        })\n\n        return visibleCount;\n    }\n\n    _getChildCount() {\n        const {children} = this.props;\n\n        let visibleCount = 0;\n        Children.forEach(children, (child) => {\n            if (isValidElement(child)) {\n                visibleCount++;\n            }\n        })\n\n        return visibleCount;\n    }\n\n    _canExpand() {\n        return this._getChildCount() > 1;\n    }\n\n    _getContext() {\n        const {id, context} = this.props;\n\n        return {\n            collapsed: context?.collapsed[id] || false,\n            classFilter: context?.classFilter,\n            roleFilter: context?.roleFilter,\n            boss: context?.boss,\n        };\n    }\n\n    renderHeader() {\n        const {id, label, onColGroupToggle, cssClass} = this.props;\n        const {collapsed} = this.state;\n\n        let visibleChildren = this._getVisibleChildCount();\n\n        if (visibleChildren === 0) {\n            return null;\n        }\n\n        return <th className={cssClass + ' ' + id} colSpan={visibleChildren}>{label}{this._canExpand() && <ExpandCollapseButton expanded={!collapsed} onToggle={() => onColGroupToggle(id)} />}</th>;\n    }\n\n    renderSubHeader() {\n        const {children, cssClass} = this.props;\n        let ctx =  this._getContext();\n\n        return Children.map(children, child => {\n            // checking isValidElement is the safe way and avoids a typescript error too\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(ctx);\n                    if (!isVisible) {\n                        return null;\n                    }\n                }\n                return cloneElement(child, { context: ctx, render: (x) => x.renderSubHeader(), renderType: \"sub-header\", cssClass: child.props.cssClass + ' ' + cssClass});\n            }\n            return child;\n        })\n    }\n\n    renderCell() {\n        const {children, data} = this.props;\n        let ctx =  this._getContext();\n\n        return Children.map(children, child => {\n            // checking isValidElement is the safe way and avoids a typescript error too\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(ctx);\n                    if (!isVisible) {\n                        return null;\n                    }\n                }\n                return cloneElement(child, { data: data, context: ctx, render: (x) => x.renderCell(), renderType: \"cell\" });\n            }\n            return child;\n        })\n    }\n\n    render() {\n\n        return this.props.render(this);\n    }\n}","import {Component} from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { asPercentage } from \"../utils\";\n\nexport class GridColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        }\n    }\n\n    _cleanupValue(value) {\n        const {format} = this.props;\n\n        if (!value) {\n            return ' ';\n        }\n\n        if (isNaN(value)) {\n            return value;\n        }\n\n        if (value === 0) {\n            return ' ';\n        }\n\n        if (format === \"%\") {\n            return asPercentage(value, 0);\n        }\n\n        return value;\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <th className={cssClass}>{label}</th>;\n    }\n\n    renderCell() {\n        const {data, field, tooltipField, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        if (tooltipField == null) {\n            return <td className={cssClass}>{this._cleanupValue(data[field])}</td>;\n        }\n\n        //let tooltip = data[tooltipField];\n\n        return (\n        <td className={cssClass}>\n            <div data-tip>{this._cleanupValue(data[field])}</div>\n            {tooltipField && <ReactTooltip>\n                    <table>\n                    </table>\n                </ReactTooltip>}\n        </td>)\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import {Component} from \"react\";\nimport {asPercentage} from \"../utils\";\n\nexport class GridIconColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        };\n    }\n\n    _cleanupValue(value) {\n        const {format} = this.props;\n\n        if (!value) {\n            return ' ';\n        }\n\n        if (isNaN(value)) {\n            return value;\n        }\n\n        if (value === 0) {\n            return ' ';\n        }\n\n        if (format === \"%\") {\n            return asPercentage(value, 0);\n        }\n\n        return value;\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass, icon_name, icon_url, item_id, spell_id} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        let icon = icon_url;\n        if (icon == null) {\n            icon = \"https://assets.rpglogs.com/img/warcraft/abilities/\" + icon_name;\n        }\n\n        let cellContent = <img className=\"spell_icon\" src={icon} alt={label} data-tip={item_id || spell_id ? null : label} />\n        if (item_id) {\n            cellContent = <a href={\"https://tbc.wowhead.com/item=\" + item_id} target=\"_blank\" rel=\"noreferrer\">{cellContent}</a>\n        }\n\n        if (spell_id) {\n            cellContent = <a href={\"https://tbc.wowhead.com/spell=\" + spell_id} target=\"_blank\" rel=\"noreferrer\">{cellContent}</a>\n        }\n\n        return (\n        <th className={cssClass}>\n            {cellContent}\n        </th>);\n    }\n\n    renderCell() {\n        const {data, field, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <td className={cssClass}>{this._cleanupValue(data[field])}</td>\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import {Component, Children, isValidElement, cloneElement} from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport class GridBarColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        }\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <th className={cssClass}>{label}</th>;\n    }\n\n    renderCell() {\n        const {children, data, width} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        let childObjects = Children.map(children, child => {\n            // checking isValidElement is the safe way and avoids a typescript error too\n            if (isValidElement(child)) {\n                return cloneElement(child, { data: data, context: this.state });\n            }\n            return child;\n        })\n\n        return (\n            <td width={width}>\n                <div className=\"grid-bar-column\">\n                { childObjects }\n                </div>\n                <ReactTooltip />\n            </td>\n        )\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}\n\nexport class GridBarColumnSection extends Component {\n    render() {\n        const {data, field, cssClass, label} = this.props;\n\n        if (data[field] === \" \")\n            return null;\n\n        return <div style={{width: (data[field] * 100) + \"%\"}} className={cssClass} data-tip={label}>&nbsp;</div>\n    }\n}","import {Component} from \"react\";\n\nexport class GridIconListColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        };\n    }\n\n    _cleanupValue(value) {\n        if (!value) {\n            return ' ';\n        }\n\n        if (!Array.isArray(value)) {\n            return ' ';\n        }\n\n        return (\n            <>\n            { value.map(x => {\n                if (x.count)\n                    return <a href={\"https://tbc.wowhead.com/\" + (x.itemId ? \"item=\" + x.itemId : (x.spellId ? \"spell=\" + x.spellId : \"\"))} target=\"_blank\" rel=\"noreferrer\"><span key={x.name} className=\"icon_count\" data-count={x.count}><img className=\"spell_icon\" src={x.icon_url ? x.icon_url : \"https://assets.rpglogs.com/img/warcraft/abilities/\" + x.icon} alt={x.name} /></span></a>\n                \n                if (x.highlight)\n                    return <a href={\"https://tbc.wowhead.com/\" + (x.itemId ? \"item=\" + x.itemId : (x.spellId ? \"spell=\" + x.spellId : \"\"))} target=\"_blank\" rel=\"noreferrer\"><span key={x.name} className={\"icon_highlight \" + x.highlight}><img className=\"spell_icon\" src={x.icon_url ? x.icon_url : \"https://assets.rpglogs.com/img/warcraft/abilities/\" + x.icon} alt={x.name} /></span></a>\n                \n                return <a href={\"https://tbc.wowhead.com/\" + (x.itemId ? \"item=\" + x.itemId : (x.spellId ? \"spell=\" + x.spellId : \"\"))} target=\"_blank\" rel=\"noreferrer\"><img className=\"spell_icon\" src={x.icon_url ? x.icon_url : \"https://assets.rpglogs.com/img/warcraft/abilities/\" + x.icon} alt={x.name} /></a>\n            })}\n            </>\n        );\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass, icon_name, icon_url} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        let icon = icon_url;\n        if (icon == null && icon_name) {\n            icon = \"https://assets.rpglogs.com/img/warcraft/abilities/\" + icon_name;\n        }\n\n        let header = label;\n\n        if (icon) {\n            header = (<img className=\"spell_icon\" src={icon} alt={label} data-tip={label} />);\n        }\n\n        return (\n        <th className={cssClass}>{header}</th>);\n    }\n\n    renderCell() {\n        const {data, field, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <td className={cssClass}>{this._cleanupValue(data[field])}</td>\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import { useParams } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport { bosses } from \"../datastore\"\nimport {msToTime} from \"../utils\"\n\nfunction getPercentageBar(fight) {\n    if (fight.kill) {\n        return <div className={\"boss_percentage kill\"}></div>\n    }\n    \n    return <div className={\"boss_percentage wipe\"} style={{ width: (fight.fightPercentage/100).toString() + \"%\"}}></div>\n}\n\nexport function BossNavItem (props) {\n    let {boss, onMouseOver, onMouseOut} = props;\n    let {id, filter} = useParams();\n    let bossInfo = bosses[boss.id];\n    if (!bossInfo) {\n        bossInfo = {\n            name: boss.fights[boss.fights.length -1]?.name ?? \"Unknown\",\n            logo: \"https://assets.rpglogs.com/img/warcraft/icons/Boss.jpg\",\n        }\n    }\n\n    let lastFight = boss.fights[boss.fights.length - 1];\n\n    let lastFightTile = getPercentageBar(lastFight);\n    const filterSuffix = filter ? \"/\" + filter : \"\";\n\n    let otherFights = [];\n    for (let i = boss.fights.length - 2; i >= 0; --i) {\n        otherFights.push(boss.fights[i]);\n    }\n\n    return (\n        <>\n        <div className=\"boss_tile\">\n            <NavLink to={\"/\" + id + \"/\" + lastFight.id + filterSuffix} activeClassName=\"selected\">\n                <div className=\"boss_fight\" onMouseOver={(e) => onMouseOver(lastFight.id)} onMouseOut={(e) => onMouseOut(lastFight.id)}>\n                    <img src={bossInfo.logo} alt={bossInfo.name} />\n                    <div className=\"boss_name\">{bossInfo.name}</div>\n                    {lastFightTile}\n                </div>\n            </NavLink>\n            {otherFights.map(fight => (\n                <NavLink key={fight.id} to={\"/\" + id + \"/\" + fight.id + filterSuffix} activeClassName=\"selected\">\n                    <div className=\"boss_fight\" onMouseOver={(e) => onMouseOver(fight.id)} onMouseOut={(e) => onMouseOut(fight.id)}>\n                        {msToTime(fight.end_time - fight.start_time)}\n                        {getPercentageBar(fight)}\n                    </div>\n                </NavLink>\n            ))}\n        </div>\n        </>\n    )\n}","import \"./FightChart.scss\";\nimport { createRef } from 'react';\nimport { Tooltip } from 'react-svg-tooltip';\nimport { asPercentage, msToTime } from \"../utils\";\n\nexport function FightChart(props) {\n    const {fights, raidStart,  raidTime, fightIds} = props;\n\n    const maxWidth = 1000;\n\n    let timeToPixel = (time) => {\n        return (time / raidTime) * maxWidth;\n    };\n\n    let getClassName = (fight) => {\n        if (fight.boss === 0) {\n            return \"trash\";\n        }\n\n        if (fight.kill) {\n            return \"boss-kill\";\n        }\n\n        return \"boss-wipe\";\n    };\n\n    let fightBands = [];\n\n    fights.forEach((fight, index, array) => {\n        if (index !== 0) {\n            fightBands.push({ \n                start: timeToPixel(array[index-1].end_time - raidStart), \n                end: timeToPixel(fight.start_time - raidStart), \n                cssClass: \"idle\", \n                id: 10000 + index, \n                duration: msToTime(fight.start_time - array[index-1].end_time),\n                name: null\n            });\n        }\n\n        fightBands.push({\n            start: timeToPixel(fight.start_time - raidStart), \n            end: timeToPixel(fight.end_time - raidStart), \n            cssClass: getClassName(fight), id: fight.id, \n            duration: msToTime(fight.end_time - fight.start_time),\n            name: fight.name,\n        });\n    })\n\n    let fightSummary = fights.reduce((agg, fight) => {\n        if (fight.boss === 0) {\n            agg.trash += (fight.end_time - fight.start_time);\n            return agg;\n        }\n\n        if (fight.kill) {\n            agg.bossKill += (fight.end_time - fight.start_time);\n            return agg;\n        }\n\n        agg.bossWipe += (fight.end_time - fight.start_time);\n\n        return agg;\n\n    }, { trash: 0, bossKill: 0, bossWipe: 0});\n    fightSummary.idle = raidTime - fightSummary.trash - fightSummary.bossKill - fightSummary.bossWipe;\n\n    return (\n        <div className=\"fightChart\">\n            <div className=\"fightSummary\">\n                <table>\n                    <tbody>\n                        <tr className=\"boss-kill\">\n                            <th className=\"name\">Boss Kills</th>\n                            <td className=\"time\">{msToTime(fightSummary.bossKill)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.bossKill / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"boss-wipe\">\n                            <th className=\"name\">Boss Wipes</th>\n                            <td className=\"time\">{msToTime(fightSummary.bossWipe)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.bossWipe / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"trash\">\n                            <th className=\"name\">Trash</th>\n                            <td className=\"time\">{msToTime(fightSummary.trash)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.trash / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"idle\">\n                            <th className=\"name\">Idle</th>\n                            <td className=\"time\">{msToTime(fightSummary.idle)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.idle / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"total\">\n                            <th>&nbsp;</th>\n                            <td className=\"time\">{msToTime(raidTime)}</td>\n                            <td className=\"percentage\">100.0%</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <svg width={maxWidth} height=\"110\">\n                <g>\n                    {fightBands.map(band => {\n                        const bandRef = createRef();\n                        return (<>\n                                <rect key={band.id} ref={bandRef} x={band.start} y={fightIds.includes(band.id) ? \"0\" : \"10\"} height=\"65\" width={band.end - band.start} className={band.cssClass} />\n                                <Tooltip triggerRef={bandRef}>\n                                    <rect x={5} y={15} width={50} height={25} rx={5} ry={5} fill={'black'} fill-opacity={0.7} />\n                                    <text x={45} y={32} fontSize={14} text-anchor=\"end\" className={band.cssClass}>{band.duration}</text>\n                                </Tooltip>\n                            </>)\n                    })}\n                </g>\n                <g>\n                    { fightSummary.bossKill > 0 && (\n                        <>\n                        <rect x=\"0\" y=\"85\" height=\"25\" width={timeToPixel(fightSummary.bossKill)} className=\"boss-kill\" />\n                        </>\n                    )}\n                    { fightSummary.bossWipe > 0 && (\n                        <>\n                        <rect x={timeToPixel(fightSummary.bossKill)} y=\"85\" height=\"25\" width={timeToPixel(fightSummary.bossWipe)} className=\"boss-wipe\" />\n                        </>\n                    )}\n                    { fightSummary.trash > 0 && (\n                        <>\n                        <rect x={timeToPixel(fightSummary.bossKill + fightSummary.bossWipe)} y=\"85\" height=\"25\" width={timeToPixel(fightSummary.trash)} className=\"trash\" />\n                        </>\n                    )}\n                    { fightSummary.idle > 0 && (\n                        <>\n                        <rect x={timeToPixel(fightSummary.bossKill + fightSummary.bossWipe + fightSummary.trash)} y=\"85\" height=\"25\" width={timeToPixel(fightSummary.idle)} className=\"idle\" />\n                        </>\n                    )}\n                    \n                </g>\n            </svg>\n        </div>\n    )\n}","export function WoWAnalyzerLink(props) {\n    const {reportId, fightId} = props;\n\n    let link = `https://wowanalyzer.com/report/${reportId}`;\n    if (fightId > 0) {\n        link += `/${fightId}`;\n    }\n    return (\n        <div><a href={link} className=\"external\" target=\"_blank\" rel=\"noreferrer\"><img src=\"https://www.wowanalyzer.com/favicon-16x16.png\" alt=\"WoWAnalyzer\"></img>Open in WoWAnalyzer</a></div>\n    );\n}","export function ThreatReportLink(props) {\n    const { reportId, fightId } = props;\n\n    let link = `https://voomlz.github.io/threat/?id=${reportId}&fight=${fightId}&enemy=&target=`;\n    return (\n        <div><a href={link} className=\"external\" target=\"_blank\" rel=\"noreferrer\"><img src=\"/line-chart-5754.png\" alt=\"Threat Graph icon\" />Open threat graph</a></div>\n    );\n}","export function WarcraftLogsLink(props) {\n    const { reportId, fightId } = props;\n\n    let link = `https://classic.warcraftlogs.com/reports/${reportId}`;\n    if (fightId > 0) {\n        link += `#fight=${fightId}`;\n    }\n    return (\n        <div><a href={link} className=\"external\" target=\"_blank\" rel=\"noreferrer\"><img src=\"https://assets.rpglogs.com/img/warcraft/favicon.png\" alt=\"Threat Graph icon\" />Open in Warcraft Logs</a></div>\n    );\n}","import \"./SummaryReport.scss\";\nimport {Component} from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {WarcraftLogLoader} from \"../warcraftLogLoader\";\nimport {GroupKeys, DataPoints} from \"./GridContexts\";\nimport {Grid} from \"./Grid\";\nimport {GridColumnGroup} from \"./GridColumnGroup\";\nimport {GridColumn} from \"./GridColumn\";\nimport {GridIconColumn} from \"./GridIconColumn\";\nimport { GridBarColumn, GridBarColumnSection } from \"./GridBarColumn\";\nimport { GridIconListColumn } from \"./GridIconListColumn\";\nimport { BossNavItem } from \"./BossNavItem\";\nimport ReactTooltip from \"react-tooltip\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { format, intervalToDuration} from \"date-fns\";\nimport { FightChart } from \"./FightChart\";\nimport { WoWAnalyzerLink } from \"./WoWAnalyzerLink\";\nimport { ThreatReportLink } from \"./ThreatReportLink\";\nimport { WarcraftLogsLink } from \"./WarcraftLogsLink\";\n\nconst roles = {\n    'tank': {\n        slug: 'tank',\n        name: 'Tank',\n        icon: 'https://wow.zamimg.com/images/wow/icons/tiny/role_tank.gif',\n    },\n    'dps': {\n        slug: 'dps',\n        name: 'DPS',\n        icon: 'https://wow.zamimg.com/images/wow/icons/tiny/role_dps.gif',\n    },\n    'healer': {\n        slug: 'healer',\n        name: 'Healer',\n        icon: 'https://wow.zamimg.com/images/wow/icons/tiny/role_healer.gif',\n    }\n};\n\nconst classes = {\n    'warrior': {\n        slug: 'warrior',\n        name: 'Warrior',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/inv_sword_27.jpg',\n    },\n    'rogue': {\n        slug: 'rogue',\n        name: 'Rogue',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_ThrowingKnife_04.jpg',\n    },\n    'hunter': {\n        slug: 'hunter',\n        name: 'Hunter',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_Weapon_Bow_07.jpg',\n    },\n    'mage': {\n        slug: 'mage',\n        name: 'Mage',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_Staff_13.jpg',\n    },\n    'warlock': {\n        slug: 'warlock',\n        name: 'Warlock',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/Spell_Nature_Drowsy.jpg',\n    },\n    'priest': {\n        slug: 'priest',\n        name: 'Priest',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_Staff_30.jpg',\n    },\n    'paladin': {\n        slug: 'paladin',\n        name: 'Paladin',\n        icon: 'https://wow.zamimg.com/images/wow/icons/medium/class_paladin.jpg',\n    },\n    'shaman': {\n        slug: 'shaman',\n        name: 'Shaman',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/inv_jewelry_talisman_04.jpg',\n    },\n    'druid': {\n        slug: 'druid',\n        name: 'Druid',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/Ability_Druid_Maul.jpg',\n    },\n}\n\nclass SummaryReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            isLoaded: false,\n            reportDetails: {},\n            context: {},\n            selectedFight: -1,\n            data: [],\n            classFilter: null,\n            roleFilter: null,\n        }\n        this._logLoader = null;\n\n        this.handleFightMouseOut = this.handleFightMouseOut.bind(this);\n        this.handleFightMouseOver = this.handleFightMouseOver.bind(this);\n    }\n\n    _getResults(selectedFight) {\n        let report = this._logLoader.getResults(selectedFight);\n        this.setState({\n            isLoaded: true,\n            characters: report.Characters,\n            fights: report.Fights,\n            raidStart: report.startTime,\n            raidTime: report.endTime - report.startTime,\n            reportDetails: {\n                title: report.title,\n                startTime: new Date(report.startTimestamp),\n                endTime: new Date(report.endTimestamp)\n            }\n        });\n\n        return report;\n    }\n\n    componentDidMount() {\n        const { id, fightId } = this.props.match.params;\n        if (!id)\n            return;\n\n        let selectedFight = fightId == null || isNaN(parseInt(fightId)) ? -1 : parseInt(fightId);\n\n        this.setState({reportId: id, selectedFight: selectedFight});\n\n        this._logLoader = WarcraftLogLoader.Load(id);\n        this._logLoader.loadFights()\n            .then(x => x.loadCharacterSummary())\n            .then(x => x.loadDeaths())\n            .then(x => x.loadInterrupts())\n            .then(x => {\n                let report = this._getResults();\n                this._generateFilteredData(report.Characters);\n            })\n            .catch((error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match !== prevProps.match) {\n            const { fightId } = this.props.match.params;\n            let selectedFight = fightId == null || isNaN(parseInt(fightId)) ? -1 : parseInt(fightId);\n\n            let report = this._getResults(selectedFight);\n            this._generateFilteredData(report.Characters);\n        }\n    }\n\n    _getFightIds(fightId) {\n        const { fights, hoverFight} = this.state;\n        let fightIds = [];\n        if (fightId === -1 && hoverFight == null)\n            return [];\n            \n        if (fightId > 0)\n            fightIds.push(fightId);\n\n        if (hoverFight > 0)\n            fightIds.push(hoverFight);\n\n        if (fightId === 0 || hoverFight === 0) {\n            fights.forEach(fight => {\n                if (fight.boss !== 0)\n                    return;\n                    \n                fightIds.push(fight.id);\n            });\n        }\n\n        return fightIds;\n    }\n\n    handleFightMouseOver(fightId) {\n        const {hoverFight} = this.state;\n\n        if (hoverFight !== fightId) {\n            console.log(\"OnMouseOver: \" + fightId);\n            this.setState({hoverFight: fightId});\n        }\n    }\n\n    handleFightMouseOut(fightId) {\n        const {hoverFight} = this.state;\n\n        if (hoverFight === fightId) {\n            console.log(\"OnMouseOut: \" + fightId);\n            this.setState({hoverFight: null});\n        }\n    }\n\n    _generateFilteredData(characters) {\n        const {filter} = this.props.match.params;\n\n        const classSortOrder = { Warrior: 0, Rogue: 1, Hunter: 2, Mage: 3, Warlock: 4, Priest: 5, Shaman: 6, Paladin: 7, Druid: 8 };\n\n        let roleFilter = null;\n        let classFilter = null;\n\n        if (roles[filter]) {\n            classFilter = null;\n            roleFilter = filter;\n        }\n\n        if (classes[filter]) {\n            classFilter = classes[filter].name;\n            roleFilter = null;\n        }\n\n        let data = [...Object.values(characters)\n        .filter((character) => character.type !== \"NPC\" && character.type !== \"Pet\" && character.type !== \"Boss\")\n        .filter((character) => classFilter == null || character.type === classFilter)\n        .filter((character) => roleFilter == null || character.summary.roles.includes(roleFilter))\n        .sort((aValue, bValue) => {\n             let classCompare = classSortOrder[aValue.type] - classSortOrder[bValue.type];\n\n             if (classCompare !== 0)\n                 return classCompare;\n\n             return aValue.name.localeCompare(bValue.name);\n            })];\n\n        this.setState({data: data, classFilter: classFilter, roleFilter: roleFilter});\n    }\n\n    render() {\n        const { error, isLoaded, data, reportId, reportDetails, fights, raidStart, raidTime, classFilter, roleFilter} = this.state;\n        const { fightId, filter } = this.props.match.params;\n\n        let selectedFight = fightId == null || isNaN(parseInt(fightId)) ? -1 : parseInt(fightId);\n        let boss = null;\n\n        let fightIds = this._getFightIds(selectedFight);\n\n        const filterSuffix = filter ? \"/\" + filter : \"\";\n        \n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            let duration = intervalToDuration({start: reportDetails.startTime, end: reportDetails.endTime});\n            return (\n                <>\n                    <h3 className=\"report_title\">{reportDetails.title}</h3>\n                    <div><strong>Report ID:</strong> {reportId} (<Link to=\"/\">Load a different report</Link>)</div>\n                    <div>{format(reportDetails.startTime, \"EEE do MMM HH:mm:ss\")} - {format(reportDetails.endTime, \"HH:mm:ss\")} ({duration.hours}:{duration.minutes.toString().padStart(2, \"0\")}:{duration.seconds.toString().padStart(2, \"0\")})</div>\n                    <WoWAnalyzerLink reportId={reportId} fightId={selectedFight} />\n                    <ThreatReportLink reportId={reportId} fightId={selectedFight} />\n                    <WarcraftLogsLink reportId={reportId} fightId={selectedFight} />\n                    <div className=\"boss_nav\">\n                    <div className=\"boss_tile\">\n                        <NavLink to={\"/\" + reportId + (filterSuffix ? \"/-1\" + filterSuffix : \"\")}>\n                            <div className=\"boss_fight\">\n                                <img src=\"https://wow.zamimg.com/images/wow/journal/ui-ej-boss-default.png\" alt=\"Summary\" />\n                                <div className=\"boss_name\">Summary</div>\n                            </div>\n                        </NavLink>\n                    </div>\n                    <div className=\"boss_tile\">\n                        <NavLink to={\"/\" + reportId + \"/0\" + filterSuffix} activeClassName=\"selected\">\n                            <div className=\"boss_fight\" onMouseOver={(e) => this.handleFightMouseOver(0)} onMouseOut={(e) => this.handleFightMouseOut(0)}>\n                                <img src=\"https://wow.zamimg.com/images/wow/journal/ui-ej-boss-timmy-the-cruel.png\" alt=\"Trash\" />\n                                <div className=\"boss_name\">Trash</div>\n                            </div>\n                        </NavLink>\n                    </div>\n                        {fights.filter(fight => fight.boss > 0)\n                               .reduce((accum, fight) => {\n                                    let found = false;\n                                    for (let i = 0; i < accum.length; ++i) {\n                                        if (accum[i].id === fight.boss) {\n                                            accum[i].fights.push(fight);\n                                            found = true;\n                                        }\n                                    }\n\n                                    if (!found) {\n                                        accum.push({ id: fight.boss, fights: [fight] });\n                                    }\n\n                                    if (fight.id === selectedFight) {\n                                        boss = fight.boss;\n                                    }\n\n                                    return accum;\n                               },[])\n                               .map(boss => (\n                            <BossNavItem key={boss.id} boss={boss} onMouseOver={this.handleFightMouseOver} onMouseOut={this.handleFightMouseOut} />\n                        ))}\n                    </div>\n                    <FightChart fights={fights} raidStart={raidStart} raidTime={raidTime} fightIds={fightIds} />\n                    <div className=\"nav_bar\">\n                        <NavLink to={\"/\" + reportId + \"/\" + selectedFight} activeClassName=\"selected\"><div className={\"class_nav All\"}><img className=\"spell_icon\" src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_misc_questionmark.jpg\" alt=\"All\" />All</div></NavLink>\n                        <div className=\"separator\"></div>\n                        {Object.values(roles).map(role => <NavLink key={role.slug} to={\"/\" + reportId + \"/\" + selectedFight + \"/\" + role.slug} activeClassName=\"selected\"><div className={\"class_nav \" + role.name}><img className=\"spell_icon\" src={role.icon} alt={role.name} />{role.name}</div></NavLink>)}\n                        <div className=\"separator\"></div>\n                        {Object.values(classes).map(role => <NavLink key={role.slug} to={\"/\" + reportId + \"/\" + selectedFight + \"/\" + role.slug} activeClassName=\"selected\"><div className={\"class_nav \" + role.name}><img className=\"spell_icon\" src={role.icon} alt={role.name} />{role.name}</div></NavLink>)}\n                    </div>\n\n                    <Grid data={data} logLoader={this._logLoader} classFilter={classFilter} roleFilter={roleFilter} fightId={selectedFight} boss={boss}>\n                        <GridColumnGroup id={GroupKeys.Name} label=\"Name\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.Name} \n                                        cssClass=\"name\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Enchants} label=\"Enchants\" cssClass=\"even-colgroup\">\n                            <GridColumn field={DataPoints.EnchantMissing}\n                                        label=\"&#9033;\"\n                                        cssClass=\"enchants missing\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.EnchantBad}\n                                        label=\"&#128078;\"\n                                        cssClass=\"enchants bad\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.EnchantAverage}\n                                        label=\"&#128074;\"\n                                        cssClass=\"enchants average\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.EnchantGood}\n                                        label=\"&#128077;\"\n                                        cssClass=\"enchants good\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconListColumn field={DataPoints.EnchantList}\n                                        label=\" \"\n                                        visibility={(ctx) => ctx.collapsed === false} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Gems} label=\"Gems\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.GemsMissing} label=\"Nil\"\n                                        cssClass=\"gems empty\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsCommon} label=\"Co\"\n                                        cssClass=\"gems common\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsUncommon} label=\"Un\"\n                                        cssClass=\"gems uncommon\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsRare} label=\"Ra\"\n                                        cssClass=\"gems rare\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsEpic} label=\"Ep\"\n                                        cssClass=\"gems epic\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconListColumn field={DataPoints.GemsList}\n                                        icon_name=\"inv_misc_gem_diamond_01.jpg\"\n                                        cssClass=\"gems\"\n                                        visibility={(ctx) => ctx.collapsed === false} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Elixirs} label=\"Self Buffs\" cssClass=\"even-colgroup\">\n                            <GridIconListColumn field={DataPoints.ElixirsFlasks}\n                                        label=\"Flask\"\n                                        icon_name=\"inv_potion_90.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsGuardian}\n                                        label=\"Guardian Elixirs\"\n                                        icon_name=\"ability_shaman_watershield.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsBattle}\n                                        label=\"Battle Elixirs\"\n                                        icon_name=\"ability_dualwield.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsFood}\n                                        label=\"Food Buffs\"\n                                        icon_name=\"spell_misc_food.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsScrolls}\n                                        label=\"Scrolls\"\n                                        icon_name=\"inv_scroll_07.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsWeaponEnchants}\n                                        label=\"Weapon Imbues\"\n                                        icon_name=\"ability_meleedamage.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsSeasonal}\n                                        label=\"Seasonal Buffs\"\n                                        icon_name=\"inv_misc_branch_01.jpg\"\n                                        cssClass=\"center\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Deaths} label=\"Deaths\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.Deaths} \n                                        cssClass=\"deaths\" aggregate={true} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.ProtPotions} label=\"Prot Potions\" cssClass=\"even-colgroup\">\n                            <GridColumn field={DataPoints.ProtectionPotionsTotal} \n                                        label=\"Uses\" \n                                        cssClass=\"center\" \n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.ProtectionPotionsTotalAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"center\" \n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsNature} \n                                        label=\"Nature Protection Potion\" \n                                        icon_name=\"inv_potion_06.jpg\" \n                                        item_id={6052}\n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterNature} \n                                        label=\"Greater Nature Protection Potion\" \n                                        icon_name=\"inv_potion_22.jpg\" \n                                        item_id={13458}\n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorNature} \n                                        label=\"Major Nature Protection Potion\" \n                                        icon_name=\"inv_potion_127.jpg\" \n                                        item_id={22844}\n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsNatureAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsFire} \n                                        label=\"Fire Protection Potion\" \n                                        icon_name=\"inv_potion_16.jpg\" \n                                        item_id={6049}\n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterFire} \n                                        label=\"Greater Fire Protection Potion\" \n                                        icon_name=\"inv_potion_24.jpg\" \n                                        item_id={13457}\n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorFire} \n                                        label=\"Major Fire Protection Potion\" \n                                        icon_name=\"inv_potion_124.jpg\" \n                                        item_id={22841}\n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsFireAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsFrost} \n                                            label=\"Frost Protection Potion\" \n                                            icon_name=\"inv_potion_13.jpg\" \n                                            item_id={6050}\n                                            cssClass=\"protection_potion frost\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterFrost} \n                                            label=\"Greater Frost Protection Potion\" \n                                            icon_name=\"inv_potion_20.jpg\" \n                                            item_id={13456}\n                                            cssClass=\"protection_potion frost\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorFrost} \n                                            label=\"Major Frost Protection Potion\" \n                                            icon_name=\"inv_potion_126.jpg\" \n                                            item_id={22842}\n                                            cssClass=\"protection_potion frost\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsFrostAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion frost\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsShadow} \n                                            label=\"Shadow Protection Potion\" \n                                            icon_name=\"inv_potion_44.jpg\" \n                                            item_id={6048}\n                                            cssClass=\"protection_potion shadow\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterShadow} \n                                            label=\"Greater Shadow Protection Potion\" \n                                            icon_name=\"inv_potion_23.jpg\" \n                                            item_id={13459}\n                                            cssClass=\"protection_potion shadow\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorShadow} \n                                            label=\"Major Shadow Protection Potion\" \n                                            icon_name=\"inv_potion_123.jpg\" \n                                            item_id={22846}\n                                            cssClass=\"protection_potion shadow\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsShadowAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion shadow\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterArcane} \n                                            label=\"Greater Arcane Protection Potion\" \n                                            icon_name=\"inv_potion_83.jpg\" \n                                            item_id={13461}\n                                            cssClass=\"protection_potion arcane\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorArcane} \n                                            label=\"Major Arcane Protection Potion\" \n                                            icon_name=\"inv_potion_128.jpg\" \n                                            item_id={22845}\n                                            cssClass=\"protection_potion arcane\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsArcaneAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion arcane\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Consumes} label=\"Consumes\" cssClass=\"odd-colgroup\">\n                            <GridIconColumn field={DataPoints.ConsumesPotions} \n                                            label=\"Potions\" \n                                            icon_name=\"inv_drink_06.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesManaPots} \n                                            label=\"Mana Potions\" \n                                            icon_name=\"inv_potion_137.jpg\" \n                                            item_id={22832}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.classFilter !== \"Warrior\" && ctx.classFilter !== \"Rogue\" && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRejuvPots} \n                                            label=\"Rejuvenation Potions\" \n                                            icon_name=\"inv_potion_134.jpg\" \n                                            item_id={22850}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHealthPots} \n                                            label=\"Healing Potion\" \n                                            icon_name=\"inv_potion_131.jpg\" \n                                            item_id={22829}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFreeActionPotion} \n                                            label=\"Free/Living Action Potion\" \n                                            icon_name=\"inv_potion_04.jpg\" \n                                            item_id={5634}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRestorationPots} \n                                            label=\"Restorative Potion\" \n                                            icon_name=\"inv_potion_01.jpg\" \n                                            item_id={9030}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRagePotions} \n                                            label=\"Rage Potions\" \n                                            icon_name=\"inv_potion_41.jpg\" \n                                            item_id={13442}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\") || (ctx.classFilter === \"Warrior\")}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesIronshield} \n                                            label=\"Ironshield Potions\" \n                                            icon_name=\"inv_potion_133.jpg\" \n                                            item_id={22849}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\") || (ctx.roleFilter === \"tank\")}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesInsaneStrength} \n                                            label=\"Insane Strength Potion\" \n                                            icon_name=\"inv_potion_109.jpg\" \n                                            item_id={22828}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesShrouding} \n                                            label=\"Shrouding Potion\" \n                                            icon_name=\"inv_potion_144.jpg\" \n                                            item_id={22871}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFelRegeneration} \n                                            label=\"Fel Regeneration Potion\" \n                                            icon_name=\"inv_potion_140.jpg\" \n                                            item_id={31676}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHeroic} \n                                            label=\"Heroic Potion\" \n                                            icon_name=\"inv_potion_106.jpg\" \n                                            item_id={22837}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDestruction} \n                                            label=\"Destruction Potion\" \n                                            icon_name=\"inv_potion_107.jpg\" \n                                            item_id={22839}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHaste} \n                                            label=\"Haste Potion\" \n                                            icon_name=\"inv_potion_108.jpg\" \n                                            item_id={22838}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFelMana} \n                                            label=\"Fel Mana Potion\" \n                                            icon_name=\"inv_potion_138.jpg\" \n                                            item_id={31677}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesGems} \n                                            label=\"Gems/Runes/Stones\" \n                                            icon_name=\"inv_misc_gem_variety_01.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRunes} \n                                            label=\"Dark/Demonic Runes\" \n                                            icon_name=\"inv_misc_rune_04.jpg\" \n                                            item_id={12662}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.classFilter !== \"Warrior\" && ctx.classFilter !== \"Rogue\" && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHealthStones} \n                                            label=\"Major Health Stone\" \n                                            icon_name=\"inv_stone_04.jpg\" \n                                            item_id={22105}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesNightmareSeed} \n                                            label=\"Nightmare Seed\" \n                                            item_id={22797}\n                                            icon_name=\"inv_misc_herb_nightmareseed.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesWhipperRootTuber} \n                                            label=\"Whipper Root Tuber\" \n                                            icon_name=\"inv_misc_food_55.jpg\" \n                                            item_id={11951}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesThistleTea} \n                                            label=\"Thistle Tea\" \n                                            icon_name=\"inv_drink_milk_05.jpg\" \n                                            item_id={7676}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\" && ctx.roleFilter !== \"tank\") || (ctx.classFilter === \"Rogue\")}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesManaGem} \n                                            label=\"Mana Gem\" \n                                            icon_name=\"inv_misc_gem_stone_01.jpg\" \n                                            item_id={22044}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\" && ctx.roleFilter !== \"tank\") || (ctx.classFilter === \"Mage\")}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesDrums} \n                                            label=\"Drums\" \n                                            icon_name=\"inv_misc_drum_02.jpg\" \n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsBattle} \n                                            label=\"Drums of Battle\" \n                                            icon_name=\"inv_misc_drum_02.jpg\" \n                                            item_id={29529}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsWar} \n                                            label=\"Drums of War\" \n                                            icon_name=\"inv_misc_drum_03.jpg\" \n                                            item_id={29528}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsRestoration} \n                                            label=\"Drums of Restoration\" \n                                            icon_name=\"inv_misc_drum_07.jpg\" \n                                            item_id={29531}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsPanic} \n                                            label=\"Drums of Panic\" \n                                            icon_name=\"inv_misc_drum_06.jpg\" \n                                            item_id={29532}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesExplosives} \n                                            label=\"Bombs and Explosives\" \n                                            icon_name=\"inv_misc_bomb_06.jpg\" \n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHolyWater} \n                                            label=\"Stratholme Holy Water\" \n                                            icon_name=\"inv_potion_75.jpg\" \n                                            item_id={13180}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesSapperCharge} \n                                            label=\"Sapper Charge\" \n                                            icon_name=\"inv_gizmo_supersappercharge.jpg\" \n                                            item_id={23827}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesEzThro} \n                                            label=\"Ez-Thro Dynamite II\" \n                                            icon_name=\"inv_misc_bomb_03.jpg\" \n                                            item_id={18588}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDenseDynamite} \n                                            label=\"Dense Dynamite\" \n                                            icon_name=\"inv_misc_bomb_06.jpg\" \n                                            item_id={18641}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFelIronBombs} \n                                            label=\"Fel Iron Bomb\" \n                                            icon_name=\"spell_shadow_mindbomb.jpg\" \n                                            item_id={23736}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesArcaneBombs} \n                                            label=\"Arcane Bomb\" \n                                            icon_name=\"spell_fire_selfdestruct.jpg\" \n                                            item_id={16040}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesBandages} \n                                            label=\"First Aid\" \n                                            icon_name=\"spell_holy_sealofsacrifice.jpg\" \n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHeavyRuneclothBandage} \n                                            label=\"Bandages\" \n                                            icon_name=\"inv_misc_bandage_netherweave_heavy.jpg\" \n                                            item_id={21991}\n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesAntiVenom} \n                                            label=\"Powerful Anti-Venom\" \n                                            icon_name=\"inv_drink_14.jpg\" \n                                            item_id={19440}\n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                        </GridColumnGroup>\n\n                        <GridColumnGroup id={GroupKeys.DispelsInterrupts} label=\"Dispels\" cssClass=\"even-colgroup\">\n                            <GridIconColumn field={DataPoints.DispelBoss}\n                                        label=\"Boss\" \n                                        cssClass=\"center\"\n                                        icon_url=\"https://image.flaticon.com/icons/png/128/3325/3325105.png\"\n                                        visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === true}\n                                        aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelTrash}\n                                        label=\"Trash\" \n                                        cssClass=\"center\"\n                                        icon_url=\"https://image.flaticon.com/icons/png/128/3022/3022156.png\"\n                                        visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === true}\n                                        aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelPoison} \n                                            label=\"Poison\" \n                                            icon_name=\"spell_nature_nullifypoison.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelDruidCurePoison} \n                                            label=\"Cure Poison\" \n                                            icon_name=\"spell_nature_nullifypoison.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8946}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelDruidAbolishPoison} \n                                            label=\"Abolish Poison\" \n                                            icon_name=\"spell_nature_nullifypoison_02.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2893}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanCurePoison} \n                                            label=\"Cure Poison\" \n                                            icon_name=\"spell_nature_nullifypoison.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={526}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanPoisonCleansingTotem} \n                                            label=\"Poison Cleansing Totem\" \n                                            icon_name=\"spell_nature_poisoncleansingtotem.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8166}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelDisease} \n                                            label=\"Disease\" \n                                            icon_name=\"spell_holy_nullifydisease.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelPriestCureDisease} \n                                            label=\"Cure Disease\" \n                                            icon_name=\"spell_holy_nullifydisease.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={528}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelPriestAbolishDisease} \n                                            label=\"Abolish Disease\" \n                                            icon_name=\"spell_nature_nullifydisease.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={552}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanCureDisease} \n                                            label=\"Cure Disease\" \n                                            icon_name=\"spell_nature_removedisease.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2870}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanDiseaseCleansingTotem} \n                                            label=\"Disease Cleansing Totem\" \n                                            icon_name=\"spell_nature_diseasecleansingtotem.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8170}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelCurse} \n                                            label=\"Curse\" \n                                            icon_name=\"spell_nature_removecurse.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelDruidRemoveCurse} \n                                            label=\"Remove Curse\" \n                                            icon_name=\"spell_holy_removecurse.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2782}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelMageRemoveLesserCurse} \n                                            label=\"Remove Lesser Curse\" \n                                            icon_name=\"spell_nature_removecurse.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={475}\n                                            visibility={(ctx) => ctx.classFilter === \"Mage\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelMagic} \n                                            label=\"Magic\" \n                                            icon_name=\"spell_holy_dispelmagic.jpg\" \n                                            cssClass=\"center \"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelPriestDispelMagic} \n                                            label=\"Dispel Magic\" \n                                            icon_name=\"spell_holy_dispelmagic.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={988}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanPurge} \n                                            label=\"Purge\" \n                                            icon_name=\"spell_nature_purge.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8012}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelWarlockDevourMagic} \n                                            label=\"Devour Magic\" \n                                            icon_name=\"spell_nature_purge.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={27277}\n                                            visibility={(ctx) => ctx.classFilter === \"Warlock\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelFrenzy} \n                                            label=\"Frenzy\" \n                                            icon_name=\"ability_druid_challangingroar.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelHunterTranqShot} \n                                            label=\"Tranquilizing Shot\" \n                                            icon_name=\"spell_nature_drowsy.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={19801}\n                                            visibility={(ctx) => ctx.classFilter === \"Hunter\"}\n                                            aggregate={true} />\n                            \n                            <GridColumn field={DataPoints.InterruptTotal}\n                                        label=\"Interrupts\" \n                                        cssClass=\"center\"\n                                        visibility={(ctx) => ctx.classFilter == null}\n                                        aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptDruidBash} \n                                            label=\"Bash\" \n                                            icon_name=\"ability_druid_bash.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8983}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptDruidFeralCharge} \n                                            label=\"Feral Charge\" \n                                            icon_name=\"ability_hunter_pet_bear.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={16979}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptMageCounterspell} \n                                            label=\"Counterspell\" \n                                            icon_name=\"spell_frost_iceshock.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2139}\n                                            visibility={(ctx) => ctx.classFilter === \"Mage\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptPriestSilence} \n                                            label=\"Silence\" \n                                            icon_name=\"spell_shadow_impphaseshift.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={15487}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptShamanEarthShock} \n                                            label=\"Earth Shock\" \n                                            icon_name=\"spell_nature_earthshock.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={25454}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptRogueKick} \n                                            label=\"Kick\" \n                                            icon_name=\"ability_kick.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={38768}\n                                            visibility={(ctx) => ctx.classFilter === \"Rogue\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptCheapShot} \n                                            label=\"Cheap Shot\" \n                                            icon_name=\"ability_cheapshot.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={1833}\n                                            visibility={(ctx) => ctx.classFilter === \"Rogue\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptWarlockSpellLock} \n                                            label=\"Spell Lock\" \n                                            icon_name=\"spell_shadow_mindrot.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={19647}\n                                            visibility={(ctx) => ctx.classFilter === \"Warlock\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptHunterIntimidate} \n                                            label=\"Intimidation\" \n                                            icon_name=\"ability_devour.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={19577}\n                                            visibility={(ctx) => ctx.classFilter === \"Hunter\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptWarstomp} \n                                            label=\"War Stomp\" \n                                            icon_name=\"ability_warstomp.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={20549}\n                                            visibility={(ctx) => ctx.classFilter === \"Hunter\" || ctx.classFilter === \"Druid\" || ctx.classFilter === \"Shaman\" || ctx.classFilter === \"Warrior\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptWarriorPummel} \n                                            label=\"Pummel\" \n                                            icon_name=\"inv_gauntlets_04.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={6554}\n                                            visibility={(ctx) => ctx.classFilter === \"Warrior\"}\n                                            aggregate={true} />\n                            \n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Cooldowns} label=\"Cooldowns\" cssClass=\"odd-colgroup\">\n{/*                             <GridIconListColumn field={DataPoints.Cooldowns}\n                                        label=\" \"\n                                        cssClass=\"center\" /> */}\n                            <GridIconListColumn field={DataPoints.CooldownsRacial}\n                                        label=\" \"\n                                        cssClass=\"cooldowns center\" />\n                            <GridIconListColumn field={DataPoints.CooldownsAbility}\n                                        label=\" \"\n                                        cssClass=\"cooldowns center\" />\n                            <GridIconListColumn field={DataPoints.CooldownsItems}\n                                        label=\" \"\n                                        cssClass=\"cooldowns center\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Resistance} label=\"Resistance\" cssClass=\"even-colgroup\">\n                            <GridColumn field={DataPoints.ResistanceArcane} label=\"A\"\n                                        cssClass=\"protection_potion arcane\" />\n                            <GridColumn field={DataPoints.ResistanceFire} label=\"F\"\n                                        cssClass=\"protection_potion fire\" />\n                            <GridColumn field={DataPoints.ResistanceFrost} label=\"Fr\"\n                                        cssClass=\"protection_potion frost\" />\n                            <GridColumn field={DataPoints.ResistanceNature} label=\"N\"\n                                        cssClass=\"protection_potion nature\" />\n                            <GridColumn field={DataPoints.ResistanceShadow} label=\"S\"\n                                        cssClass=\"protection_potion shadow\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Tank} label=\"Tank Stats\" cssClass=\"even-colgroup\">\n                            <GridBarColumn label=\"Damage Taken\" width=\"270\" visibility={(ctx) => ctx.roleFilter === \"tank\"}>\n                                <GridBarColumnSection field={DataPoints.DamageTakenHit} label=\"Hit\" cssClass=\"class-colour1\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenCrushed} label=\"Crushing Blow\" cssClass=\"bad2\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenCrit} label=\"Crit\" cssClass=\"bad1\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenBlocked} label=\"Blocked\" cssClass=\"class-colour3\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenParry} label=\"Parry\" cssClass=\"good2\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenDodge} label=\"Dodge\" cssClass=\"good1\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenMiss} label=\"Miss\" cssClass=\"class-colour4\" />\n                            </GridBarColumn>\n                            <GridColumn label=\"Hit\" field={DataPoints.DamageTakenHit} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"} />\n                            <GridColumn label=\"Crush\" field={DataPoints.DamageTakenCrushed} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Crit\" field={DataPoints.DamageTakenCrit} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Block\" field={DataPoints.DamageTakenBlocked} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Parry\" field={DataPoints.DamageTakenParry} format=\"%\" cssClass=\"right percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Dodge\" field={DataPoints.DamageTakenDodge} format=\"%\" cssClass=\"right percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Miss\" field={DataPoints.DamageTakenMiss} format=\"%\" cssClass=\"right percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                        </GridColumnGroup>\n                    </Grid>\n                    <ReactTooltip />\n                    <p>* Resistance calculations include \"random enchantment\" items that can may or may not be \"of [School] Protection\"</p>\n                </>\n            )\n        }\n    }\n}\n\nexport const SummaryReportWithRouter = withRouter(SummaryReport);","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function ReportLoad() {\n    let history = useHistory();\n    let [reportId, setReportId] = useState();\n\n    let handleChange = (event) => {\n        setReportId(event.target.value);\n    }\n\n    let handleSubmit = () => {\n        history.push(\"/\" + reportId);\n    }\n\n    return (\n        <div className=\"App\">\n            <form onSubmit={handleSubmit} >\n            Enter your Classic Warcraft Logs ID: <input type=\"text\" onChange={handleChange} /> <input type=\"submit\" value=\"Go\" />\n            </form>\n        </div>\n    )\n}","import './App.css';\nimport {Component} from \"react\";\nimport {HealerReportWithRouter as HealerReport} from \"./HealerReport/HealerReport\";\nimport {ShamanReportWithRouter as ShamanReport} from \"./ShamanReport/ShamanReport\";\nimport {SummaryReportWithRouter as SummaryReport} from \"./SummaryReport/SummaryReport\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { ReportLoad } from './ReportLoad';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n      <div className=\"nav-bar\">\n        <div className=\"bug-report\">\n          <a href=\"https://github.com/arbixal/wow-classic-heal-analyser/issues/new\" target=\"_blank\" rel=\"noreferrer\"><img alt=\"Github Logo\" src=\"GitHub-Mark-Light-32px.png\"></img> Report a Bug</a>\n        </div>\n        <h1>WoW Classic Log Analyser</h1>\n      </div>\n      <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <ReportLoad />\n            </Route>\n            <Route path=\"/:id/archived/shaman\">\n              <ShamanReport />\n            </Route>\n            <Route path=\"/:id/archived/healer\" >\n              <HealerReport />\n            </Route>\n            <Route path=\"/:id/:fightId?/:filter?\">\n              <SummaryReport />\n            </Route>\n          </Switch>\n      </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}