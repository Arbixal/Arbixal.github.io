{"version":3,"sources":["utils.js","datastore/cooldowns/index.js","datastore/gear/armor/cloth/index.js","datastore/gear/armor/leather/index.js","datastore/gear/armor/mail/index.js","datastore/gear/armor/plate/index.js","datastore/gear/armor/index.js","datastore/gear/weapon/axe/index.js","datastore/gear/weapon/bow/index.js","datastore/gear/weapon/crossbow/index.js","datastore/gear/weapon/dagger/index.js","datastore/gear/weapon/fist-weapon/index.js","datastore/gear/weapon/gun/index.js","datastore/gear/weapon/mace/index.js","datastore/gear/weapon/polearm/index.js","datastore/gear/weapon/staff/index.js","datastore/gear/weapon/sword/index.js","datastore/gear/weapon/thrown/index.js","datastore/gear/weapon/wand/index.js","datastore/gear/weapon/index.js","datastore/gear/index.js","datastore/index.js","warcraftLogLoader.js","ProgressBar.jsx","HealerReport/HealerFightSummary.jsx","data.js","HealerReport/healSummary.js","HealerReport/FightReport.jsx","HealerReport/HealerReport.jsx","ShamanReport/AncestralFortitudeReport.jsx","ShamanReport/CooldownReport.jsx","ShamanReport/TotemReport.jsx","ShamanReport/ShamanReport.jsx","SummaryReport/GridContexts.js","SummaryReport/GridRow.jsx","SummaryReport/Grid.jsx","SummaryReport/ExpandCollapseButton.jsx","SummaryReport/GridColumnGroup.jsx","SummaryReport/GridColumn.jsx","SummaryReport/GridIconColumn.jsx","SummaryReport/GridBarColumn.jsx","SummaryReport/GridIconListColumn.jsx","SummaryReport/BossNavItem.jsx","SummaryReport/FightChart.jsx","SummaryReport/WoWAnalyzerLink.jsx","SummaryReport/ThreatReportLink.jsx","SummaryReport/WarcraftLogsLink.jsx","SummaryReport/SummaryReport.jsx","ReportLoad.jsx","App.js","reportWebVitals.js","index.js"],"names":["msToTime","s","secs","mins","hours","abbreviateNumber","num","toFixed","asPercentage","decimals","sumNonNull","params","reduce","agg","obj","arrayToDictionary","array","key","accum","value","druid","hunter","mage","paladin","priest","rogue","shaman","warlock","warrior","racials","items","back","chest","feet","hands","head","legs","shoulders","waist","wrist","cloth","leather","mail","plate","idol","libram","totem","rings","neck","offhandfrills","shields","mainhand","offhand","onehand","twohand","ranged","thrown","axes","bows","crossbows","daggers","fists","guns","maces","polearms","staves","swords","wands","armor","weapons","bosses","bosses_raw","gemList","gems_raw","cooldownList","cooldowns_raw","itemList","gear_raw","WarcraftLogLoader","reportId","this","domain","Results","_loadedStatus","fights","characterSummaries","deaths","interrupts","character","details","casts","buffs","damageTaken","protectionPots","Promise","resolve","fetch","then","res","json","Fights","FightType","acc","id","boss","Characters","friendlies","raidStartTime","start_time","friendlyPets","forEach","pet","petOwner","Pets","pets","title","startTimestamp","start","endTimestamp","end","startTime","endTime","length","end_time","reject","response","data","playerData","playerDetails","tanks","_reducePlayerDetails","healers","dps","Object","entries","playerInfo","roles","specs","intellect","stamina","strength","agility","weaponEnchant","offhandEnchant","enchants","gems","catch","_resolve","events","sourceID","playerid","all","_loadCharacterCasts","_loadCharacterBuffs","_loadProtectionPots","_loadCharacterDamageTaken","_data","_reject","fightType","fight","auras","guid","ability","protectionPotions","protPot","amount","firstAbsorb","push","timestamp","fightId","fightIds","_getFightIds","filteredResults","values","filteredCharacter","_getFilteredCharacter","characterFight","includes","fightBands","aFight","x","bands","filter","buffBand","some","fightBand","validEvents","y","potEvent","characterid","getClassHealEvents","getClassCastEvents","getProtectionPotionHealingEvents","getProtectionPotionCastEvents","current","role","playerId","slots","0","enchantable","name","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","gearInfo","combatantInfo","gear","gearItem","slot","notEnchantable","permanentEnchants","slotname","permanentEnchant","permanentEnchantName","gearId","gearName","temporaryEnchant","temporaryEnchantName","gem","count","gemDetails","itemLevel","icon","rarity","colour","label","description","sockets","gemCount","keyAccessFunction","a","concat","i","j","splice","removeDuplicates","type","stats","Intellect","max","Armor","Stamina","Strength","Agility","healerData","context","tankData","status","Error","statusText","nextPageTimestamp","sourceClass","sourceid","sourcename","getBuffUptime","innerAccum","existingCharacter","totalUptime","totalUses","sort","results","abilityid","LogLoader","ProgressBar","props","summary","maxHeals","className","style","width","getTotalHeals","getEffectivePercent","getOverhealPercent","getWastedPercent","Component","HealerFightSummary","state","healer","spells","manaOil","classType","isExpanded","toggle","bind","setState","row","maxSpellHeals","enchantScore","score","tooltip","onClick","data-tip","data-place","data-class","data-html","manaPots","runes","manaGained","cooldowns","map","cooldown","idx","src","alt","castsStarted","castsCompleted","getCastsPercent","effectiveHeals","overHeal","wastedHeals","wastedMana","spell","colSpan","healingSpells","mana","castTime","ticks","tickPortion","protectionPotionEnum","rank","sharedHealingEnchants","2544","2543","2545","1503","1505","1483","1504","1506","1507","1508","1509","1510","2604","1891","1893","928","1892","911","1887","851","929","2566","1886","1885","2565","1884","1883","2617","930","931","2619","2620","1888","2621","2622","1889","2505","2504","2567","2568","1903","1904","1890","926","requiredEnchants","assign","2590","2587","2591","2584","3001","itemId","3003","3002","2999","2583","2979","2980","2715","2992","2993","2717","2996","2997","2983","2716","2977","2978","2990","2991","2986","2981","2982","2994","2995","2605","368","spellId","1441","2664","2662","3150","2661","1144","2933","2659","1950","2649","2648","2650","2647","1593","2613","2937","2564","2322","2935","1594","684","2746","2745","2747","2748","3011","3013","3010","3012","2940","2657","2658","2939","2343","2670","2669","2673","2654","1071","2655","2841","2724","2723","HealSummary","getHealSummary","collection","event","getOrCreate","aggregate","spellInfo","console","log","overheal","tick","Math","round","FightReport","error","isLoaded","healSummary","expanded","characters","healerInfo","getHealerInfo","getHealEvents","result","eventsByCharacter","getCharactersFromEvents","characterList","characterName","characterClass","characterManaOil","bisEnchants","total","keyValuePair","_event","sourceId","abilityId","loadData","fightClass","kill","message","rowSpan","height","effectiveHeal","HealerReport","match","setReport","getFights","showTrash","item","HealerReportWithRouter","withRouter","AncestralFortitudeReport","tanksPerFight","buffCalls","getArmorBuffUptime","allBuffs","buffUptime","tankCalls","getTankInfo","allTanks","charId","class","_getTanksForFights","_getArmorBuffUptime","_results","colspan","fightLength","tankBuffInfo","tankBuffUptime","preBuff","CooldownReport","cooldownRows","zhcResult","zhcCounts","getCharacterCastTable","cooldownRow","entry","xValue","yValue","typeCompare","localeCompare","found","resultRow","TotemReport","ShamanReport","shamans","ShamanReportWithRouter","GroupKeys","DataPoints","Name","Enchants","EnchantList","GemsMissing","GemsCommon","GemsUncommon","GemsRare","GemsEpic","GemsList","Elixirs","ElixirsFlasks","ElixirsGuardian","ElixirsBattle","ElixirsFood","ElixirsSeasonal","ElixirsScrolls","ElixirsWeaponEnchants","Deaths","ProtectionPotionsTotal","ProtectionPotionsTotalAbsorbed","ProtectionPotionsNature","ProtectionPotionsGreaterNature","ProtectionPotionsMajorNature","ProtectionPotionsNatureAbsorbed","ProtectionPotionsFire","ProtectionPotionsGreaterFire","ProtectionPotionsMajorFire","ProtectionPotionsFireAbsorbed","ProtectionPotionsFrost","ProtectionPotionsGreaterFrost","ProtectionPotionsMajorFrost","ProtectionPotionsFrostAbsorbed","ProtectionPotionsShadow","ProtectionPotionsGreaterShadow","ProtectionPotionsMajorShadow","ProtectionPotionsShadowAbsorbed","ProtectionPotionsGreaterArcane","ProtectionPotionsMajorArcane","ProtectionPotionsArcaneAbsorbed","ConsumesPotions","ConsumesDrums","ConsumesGems","ConsumesExplosives","ConsumesBandages","ConsumesManaPots","ConsumesRunes","ConsumesRejuvPots","ConsumesHealthPots","ConsumesHealthStones","ConsumesWhipperRootTuber","ConsumesRagePotions","ConsumesThistleTea","ConsumesRestorationPots","ConsumesFreeActionPotion","ConsumesManaGem","ConsumesNightmareSeed","ConsumesStoneshield","ConsumesHeavyRuneclothBandage","ConsumesAntiVenom","ConsumesHolyWater","ConsumesSapperCharge","ConsumesEzThro","ConsumesDenseDynamite","ConsumesFelIronBombs","ConsumesDrumsBattle","ConsumesDrumsRestoration","ConsumesDrumsPanic","ConsumesDrumsWar","ConsumesInsaneStrength","ConsumesShrouding","ConsumesFelRegeneration","ConsumesHeroic","ConsumesDestruction","ConsumesHaste","ConsumesFelMana","ConsumesIronshield","DispelTotal","DispelBoss","DispelTrash","DispelPoison","DispelDisease","DispelCurse","DispelMagic","DispelFrenzy","DispelDruidCurePoison","DispelDruidAbolishPoison","DispelDruidRemoveCurse","DispelHunterTranqShot","DispelMageRemoveLesserCurse","DispelPaladinPurify","DispelPaladinCleanse","DispelPriestDispelMagic","DispelPriestCureDisease","DispelPriestAbolishDisease","DispelShamanPurge","DispelShamanCurePoison","DispelShamanCureDisease","DispelShamanPoisonCleansingTotem","DispelShamanDiseaseCleansingTotem","DispelWarlockDevourMagic","InterruptTotal","InterruptDruidBash","InterruptDruidFeralCharge","InterruptMageCounterspell","InterruptPaladinHammerOfJustice","InterruptPriestSilence","InterruptRogueKick","InterruptShamanEarthShock","InterruptWarriorPummel","InterruptCheapShot","InterruptWarlockSpellLock","InterruptHunterIntimidate","InterruptWarstomp","Cooldowns","CooldownsRacial","CooldownsAbility","CooldownsItems","DamageTakenHit","DamageTakenCrit","DamageTakenCrushed","DamageTakenBlocked","DamageTakenMiss","DamageTakenDodge","DamageTakenParry","emptyData","ConsumesElixirOfPoisonResistance","ConsumesOilOfImmolation","GridRow","_logLoader","logLoader","report","getResults","raidTime","Data","_flattenCharacterData","loadCharacterDetails","getCharacter","prevProps","characterData","_getDeathCount","_getEnchantInfo","_getMissingGemCount","_getGemCount","_getGemList","_getBuffs","foodBuffs","flaskBuffs","battleElixirBuffs","guardianElixirBuffs","seasonBuffs","scrollBuffs","_getWeaponImbue","tempWeaponEnchants","_getProtectionPotionCount","_getProtectionPotionAbsorb","_getCastCount","_getBossCastCount","_getTrashCastCount","_getInterruptCount","_getCooldownList","_getTankStats","onDataUpdate","options","activeBuffs","gemIcons","cds","cast","cooldownInfo","countByFight","firstCast","protectionPotion","spellId1","spellId2","absorbed","spellIds","_getRestrictedCastCount","castCount","damageTakenArray","damageAmount","damage","properyName","propertyLabel","table","damageTakenTable","_addIfNotNull","DamageWhirlwind","DamageRainOfFire","DamageFireShield","DamageFlames","DamageCleave","DamageBlizzard","DamageExplode","DamageImpale","DamageBomb","DamageThunderclap","DamageShadowStorm","DamageDarkGlare","DamageFalling","DamageVoidZone","DamagePoisonCloud","DamageFrostBreath","DamageEruption","DamageBroodPowerBronze","DamageVoidBlast","DamageTailSweep","DamagePositiveCharge","DamageNegativeCharge","DamageDisruptingShout","DamageChill","DamageDarkBlast","DamageWailOfSouls","meleeDamage","totalHits","hitMap","breakdown","hitType","toString","hit","enchantList","slotToIconMapping","19","enchant","enchantIcon","icon_url","enchantInfo","spec","specScore","highlight","children","Children","child","isValidElement","cloneElement","render","renderCell","renderType","Grid","collapsed","summaryRow","handleColGroupToggle","handleDataUpdate","nextProps","nextState","classFilter","roleFilter","colGroup","column","field","ctx","renderHeader","onColGroupToggle","renderSubHeader","ExpandCollapseButton","onToggle","GridColumnGroup","ReactTooltip","rebuild","_getContext","visibleCount","visibility","_getChildCount","cssClass","visibleChildren","_getVisibleChildCount","_canExpand","GridColumn","isVisible","format","isNaN","tooltipField","_cleanupValue","GridIconColumn","icon_name","item_id","spell_id","cellContent","href","target","rel","GridBarColumn","childObjects","GridBarColumnSection","GridIconListColumn","Array","isArray","data-count","header","getPercentageBar","fightPercentage","BossNavItem","onMouseOver","onMouseOut","useParams","bossInfo","logo","lastFight","lastFightTile","filterSuffix","otherFights","to","activeClassName","e","FightChart","raidStart","timeToPixel","time","getClassName","index","duration","fightSummary","trash","bossKill","bossWipe","idle","band","bandRef","createRef","ref","triggerRef","rx","ry","fill","fill-opacity","fontSize","text-anchor","WoWAnalyzerLink","link","ThreatReportLink","WarcraftLogsLink","slug","classes","SummaryReport","reportDetails","selectedFight","handleFightMouseOut","handleFightMouseOver","Date","parseInt","Load","loadFights","loadCharacterSummary","loadDeaths","loadInterrupts","_getResults","_generateFilteredData","hoverFight","classSortOrder","Warrior","Rogue","Hunter","Mage","Warlock","Priest","Shaman","Paladin","Druid","aValue","bValue","classCompare","intervalToDuration","minutes","padStart","seconds","SummaryReportWithRouter","ReportLoad","history","useHistory","useState","setReportId","onSubmit","onChange","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b2c3d26.chunk.js","sourcesContent":["export function msToTime(s) {\n    var ms = s % 1000;\n    s = (s - ms) / 1000;\n    var secs = s % 60;\n    s = (s - secs) / 60;\n    var mins = s % 60;\n    s = (s - mins) / 60;\n    var hours = s % 24;\n\n    return (hours > 0 ? hours + \":\" + (mins < 10 ? \"0\" : \"\") : \"\") + mins + ':' + (secs < 10 ? \"0\" : \"\") + secs;\n}\n\nexport function abbreviateNumber(num) {\n    if (num > 1000) {\n        return (num / 1000).toFixed(1) + \"k\";\n    }\n\n    return num;\n}\n\nexport function asPercentage(num, decimals = 1) {\n    return (num*100).toFixed(decimals) + \"%\";\n}\n\nexport function removeDuplicates(array, keyAccessFunction) {\n    if (!keyAccessFunction || typeof(keyAccessFunction) !== 'function') {\n        keyAccessFunction = (obj) => obj;\n    }\n\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(keyAccessFunction(a[i]) === keyAccessFunction(a[j]))\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n};\n\nexport function countNonNull(...params) {\n    return params.reduce((agg, obj) => {\n        if (obj) {\n            agg++\n        }\n\n        return agg;\n    }, 0);\n}\n\nexport function sumNonNull(...params) {\n    return params.reduce((agg, obj) => {\n        if (obj) {\n            agg += obj;\n        }\n\n        return agg;\n    }, 0);\n}\n\nexport function arrayToDictionary(array, key) {\n    return array.reduce((accum, value) => ({...accum, [value[key]]: value}), {});\n}","import druid from './classes/druid.json';\nimport hunter from './classes/hunter.json';\nimport mage from './classes/mage.json';\nimport paladin from './classes/paladin.json';\nimport priest from './classes/priest.json';\nimport rogue from './classes/rogue.json';\nimport shaman from './classes/shaman.json';\nimport warlock from './classes/warlock.json';\nimport warrior from './classes/warrior.json';\nimport racials from './racials.json';\nimport items from './items.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...druid, ...hunter, ...mage, ...paladin, ...priest, ...rogue, ...shaman, ...warlock, ...warrior, ...racials, ...items];","import back from './back.json';\nimport chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...back, ...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import chest from './chest.json';\nimport feet from './feet.json';\nimport hands from './hands.json';\nimport head from './head.json';\nimport legs from './legs.json';\nimport shoulders from './shoulder.json';\nimport waist from './waist.json';\nimport wrist from './wrist.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...chest, ...feet, ...hands, ...head, ...legs, ...shoulders, ...waist, ...wrist];","import cloth from './cloth';\nimport leather from './leather';\nimport mail from './mail';\nimport plate from './plate';\n\nimport idol from './idol/relic.json';\nimport libram from './libram/relic.json';\nimport totem from './totem/relic.json';\n\nimport rings from './miscellaneous/finger.json';\nimport neck from './miscellaneous/neck.json';\n\nimport offhandfrills from './miscellaneous/held-in-off-hand.json';\nimport shields from './shield/off-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...cloth, ...leather, ...mail, ...plate, ...idol, ...libram, ...totem, ...rings, ...neck, ...offhandfrills, ...shields];\n\nexport const relics = [...idol, ...libram, ...totem];\nexport const jewellery = [...rings, ...neck];\nexport const offhand = [...offhandfrills, ...shields];\n\nexport {default as trinkets} from './miscellaneous/trinket.json';","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\nimport twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand, ...twohand];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\nimport twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand, ...twohand];","import twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...twohand];","import twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...twohand];","import mainhand from './main-hand.json';\nimport offhand from './off-hand.json';\nimport onehand from './one-hand.json';\nimport twohand from './two-hand.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...mainhand, ...offhand, ...onehand, ...twohand];","import thrown from './thrown.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...thrown];","import ranged from './ranged.json';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...ranged];","import axes from './axe';\nimport bows from './bow';\nimport crossbows from './crossbow';\nimport daggers from './dagger';\nimport fists from './fist-weapon';\nimport guns from './gun';\nimport maces from './mace';\nimport polearms from './polearm';\nimport staves from './staff';\nimport swords from './sword';\nimport thrown from './thrown'\nimport wands from './wand';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...axes, ...bows, ...crossbows, ...daggers, ...fists, ...guns, ...maces, ...polearms, ...staves, ...swords, ...thrown, ...wands];","import armor from \"./armor\";\nimport weapons from './weapon';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [...armor, ...weapons];\n\nexport {relics} from './armor';\nexport {trinkets} from './armor';\n","import { arrayToDictionary } from \"../utils\";\nimport bosses_raw from \"./bosses.json\";\nimport gems_raw from \"./gems.json\";\nimport cooldowns_raw from './cooldowns';\nimport gear_raw from './gear';\n\nexport {default as tempWeaponEnchants} from './buffs/temp-enchant.json';\nexport {default as seasonBuffs} from './buffs/seasonal.json';\nexport {default as flaskBuffs} from './buffs/flask.json';\nexport {default as battleElixirBuffs} from './buffs/elixir-battle.json';\nexport {default as guardianElixirBuffs} from './buffs/elixir-guardian.json';\nexport {default as scrollBuffs} from './buffs/scroll.json';\nexport {default as foodBuffs} from './buffs/food.json';\n\nexport const bosses = arrayToDictionary(bosses_raw, \"id\");\nexport const gemList = arrayToDictionary(gems_raw, \"id\");\nexport const cooldownList = arrayToDictionary(cooldowns_raw, \"id\");\nexport const itemList = arrayToDictionary(gear_raw, \"id\");","import {itemList, gemList} from \"./datastore\";\nimport {removeDuplicates} from \"./utils\";\n\nexport class WarcraftLogLoader {\n    constructor(reportId = null) {\n        this.key = \"e422378c419a25cc1accb41845b259ab\";\n        this.domain = \"https://classic.warcraftlogs.com/v1/\";\n        this.reportId = reportId;\n        this.Results = {};\n        this._loadedStatus = {\n            fights: false,\n            characterSummaries: false,\n            deaths: false,\n            interrupts: false,\n            character: {\n                details: {},\n                casts: {},\n                buffs: {},\n                damageTaken: {},\n                protectionPots: {},\n            }\n        }\n    }\n\n    static Load(reportId) {\n        return new WarcraftLogLoader(reportId);\n    }\n\n    setReport(reportId) {\n        this.reportId = reportId;\n    }\n\n    loadFights() {\n        if (this._loadedStatus.fights) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return fetch(this.domain + \"report/fights/\" + this.reportId + \"?api_key=\" + this.key)\n            .then(res => res.json())\n            .then(res => {\n                this.Results.Fights = res.fights;\n                this.Results.FightType = res.fights.reduce((acc,obj) => {\n                    acc[obj.id] = (obj.boss > 0 ? \"boss\" : \"trash\");\n\n                    return acc;\n                }, {})\n                this.Results.Characters = res.friendlies.reduce((acc,obj) => {\n                    acc[obj.id] = obj;\n\n                    acc[obj.id].raidStartTime = res.fights[obj.fights[0].id-1].start_time;\n\n                    return acc;\n                }, {});\n                // Add pet information to their owner\n                res.friendlyPets.forEach((pet) => {\n                    if (!this.Results.Characters[pet.petOwner])\n                        return;\n                    \n                    if (!this.Results.Pets) {\n                        this.Results.Pets = {};\n                    }\n\n                    this.Results.Characters[pet.petOwner].pets = [...(this.Results.Characters[pet.petOwner].pets || []),pet];\n                    this.Results.Pets[pet.id] = pet;\n                })\n                this.Results.title = res.title;\n                this.Results.startTimestamp = res.start;\n                this.Results.endTimestamp = res.end;\n                this.Results.startTime = res.fights[0].start_time;\n                this.Results.endTime = res.fights[res.fights.length-1].end_time;\n\n                this._loadedStatus.fights = true;\n\n                return this;\n            });\n    }\n\n    loadCharacterSummary() {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.characterSummaries) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime)\n        .then(response => response.json())\n        .then(data => {\n            let playerData = [];\n\n            if (data.playerDetails?.tanks) {\n                playerData = data.playerDetails.tanks.reduce(this._reducePlayerDetails(\"tank\"), {});\n            }\n\n            if (data.playerDetails?.healers) {\n                playerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), playerData);\n            }\n\n            if (data.playerDetails?.dps) {\n                playerData = data.playerDetails.dps.reduce(this._reducePlayerDetails(\"dps\"), playerData);\n            }\n\n            for (const [key,value] of Object.entries(playerData)) {\n                let playerInfo = this.Results.Characters[key];\n\n                playerInfo.roles = value.roles;\n                playerInfo.specs = value.specs;\n                playerInfo.intellect = value.intellect;\n                playerInfo.armor = value.armor;\n                playerInfo.stamina = value.stamina;\n                playerInfo.strength = value.strength;\n                playerInfo.agility = value.agility;\n                playerInfo.weaponEnchant = value.weaponEnchant;\n                playerInfo.offhandEnchant = value.offhandEnchant;\n                playerInfo.enchants = value.enchants;\n                playerInfo.gems = value.gems;\n            }\n\n            this._loadedStatus.characterSummaries = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    loadDeaths() {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.deaths) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/deaths/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime)\n        .then(response => response.json())\n        .then(data => {\n            data.entries.forEach((obj) => {\n                let character = this.Results.Characters[obj.id];\n\n                if (!character) {\n                    return;\n                }\n\n                character.deaths = [...(character.deaths || []),obj];\n            })\n\n            this._loadedStatus.deaths = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    loadInterrupts() {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.interrupts) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/interrupts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime)\n        .then(response => response.json())\n        .then(data => {\n            data.events.forEach((obj) => {\n                let character = this.Results.Characters[obj.sourceID];\n\n                if (!character) {\n                    let pet = this.Results.Pets[obj.sourceID];\n                    if (pet) {\n                        character = this.Results.Characters[pet.petOwner];\n                    }\n                }\n\n                if (!character) {\n                    return;\n                }\n\n                character.interrupts = [...(character.interrupts || []),obj];\n            })\n\n            this._loadedStatus.interrupts = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    loadCharacterDetails(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.details[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return Promise.all([\n            this._loadCharacterCasts(playerid),\n            this._loadCharacterBuffs(playerid),\n            this._loadProtectionPots(playerid),\n            this._loadCharacterDamageTaken(playerid),\n        ])\n        .then((_data) => {\n            this._loadedStatus.character.details[playerid] = true;\n\n            return new Promise((resolve, _reject) => resolve(this))\n        })\n    }\n\n    _loadCharacterCasts(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.casts[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            data.events.forEach((obj) => {\n                let character = this.Results.Characters[playerid];\n\n                if (!character) {\n                    let pet = this.Results.Pets[obj.sourceID];\n                    if (pet) {\n                        character = this.Results.Characters[pet.petOwner];\n                    }\n                }\n\n                if (!character) {\n                    return;\n                }\n\n                obj.fightType = this.Results.FightType[obj.fight];\n\n                character.casts = [...(character.casts || []),obj];\n            })\n\n            this._loadedStatus.character.casts[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadCharacterBuffs(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.buffs[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/buffs/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            data.auras.forEach((obj) => {\n                let character = this.Results.Characters[playerid];\n\n                if (!character) {\n                    return;\n                }\n\n                character.buffs = {...character.buffs, [obj.guid]: obj};\n            })\n\n            this._loadedStatus.character.buffs[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadCharacterDamageTaken(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.damageTaken[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/damage-taken/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid)\n        .then(response => response.json())\n        .then(data => {\n            data.events.forEach((obj) => {\n                let character = this.Results.Characters[playerid];\n\n                if (!character) {\n                    return;\n                }\n\n                character.damageTaken = {...character.damageTaken, [obj.ability.guid]: [...(!character.damageTaken || !character.damageTaken[obj.ability.guid] ? [] : character.damageTaken[obj.ability.guid]), obj]};\n            })\n\n            this._loadedStatus.character.damageTaken[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _loadProtectionPots(playerid) {\n        if (!this._loadedStatus.fights) {\n            return new Promise((_resolve, reject) => reject(\"Fights have not yet been loaded.\"));\n        }\n\n        if (this._loadedStatus.character.protectionPots[playerid]) {\n            return new Promise(resolve => resolve(this));\n        }\n\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + this.Results.startTime\n        + \"&end=\" + this.Results.endTime\n        + \"&sourceid=\" + playerid\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => response.json())\n        .then(data => {\n            let character = this.Results.Characters[playerid];\n\n            if (!character) {\n                return;\n            }\n\n            if (!character.protectionPotions) {\n                character.protectionPotions = {};\n            }\n\n            data.events.forEach((obj) => {\n                let protPot = character.protectionPotions[obj.ability.guid];\n                if (!protPot) {\n                    character.protectionPotions[obj.ability.guid] = {\n                        amount: 0,\n                        firstAbsorb: {},\n                        events: [],\n                    };\n                    protPot = character.protectionPotions[obj.ability.guid]\n                }\n\n                protPot.amount += obj.amount;\n                protPot.events.push(obj);\n                if (!protPot.firstAbsorb[obj.fight]) {\n                    protPot.firstAbsorb[obj.fight] = obj.timestamp;\n                }\n            });\n\n            this._loadedStatus.character.protectionPots[playerid] = true;\n\n            resolve(this);\n        }).catch(reject));\n    }\n\n    _getFightIds(fightId) {\n        let fightIds = [];\n        if (fightId > 0)\n            fightIds.push(fightId);\n        else {\n            this.Results.Fights.forEach(fight => {\n                if (fight.boss !== 0)\n                    return;\n                    \n                fightIds.push(fight.id);\n            });\n        }\n\n        return fightIds;\n    }\n\n    getResults(fightId) {\n        if (fightId == null || fightId === -1) {\n            return this.Results;\n        }\n\n        let fightIds = this._getFightIds(fightId);\n\n        let filteredResults = {\n            Characters: {},\n            Fights: this.Results.Fights,\n            FightType: this.Results.FightType,\n            title: this.Results.title,\n            startTimestamp: this.Results.startTimestamp,\n            endTimestamp: this.Results.endTimestamp,\n            startTime: this.Results.startTime,\n            endTime: this.Results.endTime,\n        };\n\n        Object.values(this.Results.Characters).forEach(character => {\n            let filteredCharacter = this._getFilteredCharacter(character, fightIds);\n            if (filteredCharacter)\n                filteredResults.Characters[character.id] = filteredCharacter;\n        });\n\n        return filteredResults;\n    }\n\n    _getFilteredCharacter(character, fightIds) {\n        let filteredCharacter = null;\n\n        character.fights.forEach(characterFight => {\n            if (fightIds.includes(characterFight.id)) {\n                filteredCharacter = {...character};\n            }\n        })\n\n        if (!filteredCharacter)\n            return null;\n\n        let fightBands = [];\n        this.Results.Fights.forEach(aFight => {\n            if (fightIds.includes(aFight.id)) {\n                fightBands.push({start: aFight.start_time, end: aFight.end_time});\n            }\n        })\n        \n\n        // Amend the collections\n        // buffs\n        if (character.buffs) {\n            filteredCharacter.buffs = {};\n            Object.values(character.buffs).forEach(x => {\n                let validBands = x.bands.filter(buffBand => {\n                    return fightBands.some(fightBand => buffBand.endTime > fightBand.start && buffBand.startTime < fightBand.end);\n                });\n\n                if (validBands.length > 0) {\n                    filteredCharacter.buffs[x.guid] = x;\n                }\n            })\n        }\n        // casts\n        if (character.casts) {\n            filteredCharacter.casts = character.casts.filter(x => fightIds.includes(x.fight));\n        }\n        // damageTaken\n        if (character.damageTaken) {\n            filteredCharacter.damageTaken = {};\n            Object.entries(character.damageTaken).forEach(([key,value]) => {\n                let validEvents = value.filter(y => fightIds.includes(y.fight));\n                if (validEvents.length > 0) {\n                    filteredCharacter.damageTaken[key] = validEvents;\n                }\n            });\n        }\n        // deaths\n        if (character.deaths) {\n            filteredCharacter.deaths = character.deaths.filter(x => fightIds.includes(x.fight));\n        }\n        // interrupts\n        if (character.interrupts) {\n            filteredCharacter.interrupts = character.interrupts.filter(x => fightIds.includes(x.fight));\n        }\n        // protectionPotions\n        if (character.protectionPotions) {\n            filteredCharacter.protectionPotions = {};\n            Object.entries(character.protectionPotions).forEach(([key,value]) => {\n                let validEvents = value.events.filter(y => fightIds.includes(y.fight));\n                if (validEvents.length > 0)\n                {\n                    filteredCharacter.protectionPotions[key] = {\n                        events: validEvents,\n                        amount: validEvents.reduce((agg, potEvent) => agg += potEvent.amount, 0),\n                        firstAbsorb: value.firstAbsorb,\n                    };\n                }\n            });\n        }\n\n        return filteredCharacter;\n    }\n\n    getCharacter(characterid, fightId) {\n        if (fightId == null || fightId === -1) {\n            return this.Results.Characters[characterid];\n        }\n\n        let fightIds = this._getFightIds(fightId);\n\n        return this._getFilteredCharacter(this.Results.Characters[characterid], fightIds);\n    }\n\n    getFights() {\n        return fetch(this.domain + \"report/fights/\" + this.reportId + \"?api_key=\" + this.key)\n                .then(res => res.json());\n    }\n\n    getHealEvents(start_time, end_time) {\n        return Promise.all([\n            this.getClassHealEvents(start_time, end_time, \"priest\"),\n            this.getClassHealEvents(start_time, end_time, \"druid\"),\n            this.getClassHealEvents(start_time, end_time, \"shaman\"),\n            this.getClassHealEvents(start_time, end_time, \"paladin\"),\n\n            this.getClassCastEvents(start_time, end_time, \"priest\"),\n            this.getClassCastEvents(start_time, end_time, \"druid\"),\n            this.getClassCastEvents(start_time, end_time, \"shaman\"),\n            this.getClassCastEvents(start_time, end_time, \"paladin\"),\n\n            //this.getManaRegeneration(start_time, end_time),\n\n            this.getProtectionPotionHealingEvents(start_time, end_time),\n            this.getProtectionPotionCastEvents(start_time, end_time),\n        ])\n        //.then(res => Promise.all(res.map(response => response.json())))\n        .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n            accum = [...accum, ...current];\n\n            return accum;\n        }, []))));\n    }\n\n    _reducePlayerDetails(role) {\n        return (acc, obj) => {\n        let playerId = obj[\"id\"];\n\n                const slots = {\n                    0: { enchantable: true, name: \"Head\" },\n                    1: { enchantable: false, name: \"Neck\" },\n                    2: { enchantable: true, name: \"Shoulders\" },\n                    3: { enchantable: false, name: \"Shirt\" },\n                    4: { enchantable: true, name: \"Chest\" },\n                    5: { enchantable: false, name: \"Waist\" },\n                    6: { enchantable: true, name: \"Legs\" },\n                    7: { enchantable: true, name: \"Feet\" },\n                    8: { enchantable: true, name: \"Arms\" },\n                    9: { enchantable: true, name: \"Hands\" },\n                    10: { enchantable: false, name: \"Ring 1\" },\n                    11: { enchantable: false, name: \"Ring 2\" },\n                    12: { enchantable: false, name: \"Trinket 1\" },\n                    13: { enchantable: false, name: \"Trinket 2\" },\n                    14: { enchantable: true, name: \"Back\" },\n                    15: { enchantable: true, name: \"Main Hand\" },\n                    16: { enchantable: true, name: \"Off Hand\" },\n                    17: { enchantable: true, name: \"Ranged\" },\n                    18: { enchantable: false, name: \"Tabard\" }\n                };\n\n                let gearInfo = obj.combatantInfo?.gear?.reduce((accum, gear) => {\n                    let gearItem = itemList[gear.id];\n\n                    if (slots[gear.slot].enchantable && gear.id !== 0 && (!gearItem || !gearItem.notEnchantable))\n                    {\n                        accum.permanentEnchants.push({\n                            slot: gear.slot, \n                            slotname: slots[gear.slot].name, \n                            id: gear.permanentEnchant, \n                            name: gear.permanentEnchantName, \n                            key: gear.id + \"_\" + gear.permanentEnchant,\n                            gearId: gear.id,\n                            gearName: gear.name,\n                        })\n                    }\n\n                    if (gear.slot === 15) {\n                        accum.weaponEnchant.id = gear.temporaryEnchant;\n                        accum.weaponEnchant.name = gear.temporaryEnchantName;\n                    }\n\n                    if (gear.slot === 16) {\n                        accum.offhandEnchant.id = gear.temporaryEnchant;\n                        accum.offhandEnchant.name = gear.temporaryEnchantName;\n                    }\n\n                    if (gear.gems) {\n                        gear.gems.forEach(gem => {\n                            if (accum.gems[gem.id]) {\n                                accum.gems[gem.id].count++;\n                            }\n                            else {\n                                let gemDetails = gemList[gem.id];\n                                accum.gems[gem.id] = {\n                                    id: gem.id,\n                                    itemLevel: gem.itemLevel,\n                                    icon: gemDetails?.icon || gem.icon,\n                                    rarity: gemDetails?.rarity,\n                                    colour: gemDetails?.colour,\n                                    label: gemDetails?.label,\n                                    description: gemDetails?.description,\n                                    count: 1\n                                };\n                            }\n                        });\n                    }\n\n                    if (gearItem?.sockets) {\n                        let gemCount = gear.gems?.length ?? 0;\n                        if (gearItem.sockets > gemCount) {\n                            accum.gems[0].count += gearItem.sockets - gemCount;\n                        }\n                    }\n\n                    return accum;\n                }, { permanentEnchants: [], weaponEnchant: {}, offhandEnchant: {}, gems: { 0: {id: 0, count: 0} }});\n\n                if (!acc[playerId]) {\n                    acc[playerId] = {\n                        id: playerId,\n                        name: obj.name,\n                        type: obj.type,\n                        roles: [role],\n                        specs: obj.specs ? [...obj.specs] : [],\n                        intellect: obj.combatantInfo?.stats?.Intellect?.max,\n                        armor: obj.combatantInfo?.stats?.Armor?.max,\n                        stamina: obj.combatantInfo?.stats?.Stamina?.max,\n                        strength: obj.combatantInfo?.stats?.Strength?.max,\n                        agility: obj.combatantInfo?.stats?.Agility?.max,\n                        weaponEnchant: gearInfo?.weaponEnchant,\n                        offhandEnchant: gearInfo?.offhandEnchant,\n                        enchants: gearInfo?.permanentEnchants,\n                        gems: gearInfo?.gems\n                    };\n                }\n                else {\n                    acc[playerId].roles.push(role);\n                    if (obj.specs) {\n                        acc[playerId].specs = [...acc[playerId].specs, ...obj.specs];\n                    }\n                    if (!acc[playerId].weaponEnchant?.id && gearInfo?.weaponEnchant) {\n                        acc[playerId].weaponEnchant = gearInfo?.weaponEnchant;\n                    }\n                    if (!acc[playerId].offhandEnchant?.id && gearInfo?.offhandEnchant) {\n                        acc[playerId].offhandEnchant = gearInfo?.offhandEnchant;\n                    }\n                    acc[playerId].enchants = removeDuplicates([...(acc[playerId].enchants || []), ...(gearInfo?.permanentEnchants || [])], x => x.key);\n\n                }\n\n                return acc;\n        }\n    }\n\n    getCharacterInfo(start_time, end_time) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let playerData = [];\n            if (!data.playerDetails) {\n                resolve(playerData);\n                return;\n            }\n\n            if (data.playerDetails.tanks) {\n                playerData = data.playerDetails.tanks.reduce(this._reducePlayerDetails(\"tank\"), {});\n            }\n\n            if (data.playerDetails.healers) {\n                playerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), playerData);\n            }\n\n            if (data.playerDetails.dps) {\n                playerData = data.playerDetails.dps.reduce(this._reducePlayerDetails(\"dps\"), playerData);\n            }\n\n            resolve(playerData);\n        }).catch(reject));\n    }\n\n    getHealerInfo(start_time, end_time) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let healerData = [];\n            if (!data.playerDetails.healers) {\n                resolve(healerData);\n                return;\n            }\n\n            healerData = data.playerDetails.healers.reduce(this._reducePlayerDetails(\"healer\"), {});\n\n            resolve(healerData);\n        }).catch(reject));\n    }\n\n    getTankInfo(start_time, end_time, context = null) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/summary/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time)\n        .then(response => response.json())\n        .then(data => {\n            let tankData = [];\n            if (data.playerDetails.tanks) {\n\n                tankData = data.playerDetails.tanks.reduce((acc, obj) => {\n                    let playerId = obj[\"id\"];\n                    \n                    acc[playerId] = {\n                        id: playerId,\n                        name: obj.name,\n                        type: obj.type,\n                        armor: obj.combatantInfo?.stats?.Armor?.max,\n                        stamina: obj.combatantInfo?.stats?.Stamina?.max,\n                        strength: obj.combatantInfo?.stats?.Strength?.max,\n                        agility: obj.combatantInfo?.stats?.Agility?.max\n                    };\n\n                    return acc;\n                }, {});\n            }\n\n            resolve({context: context, data: tankData});\n        }).catch(reject));\n    }\n\n    /* getManaRegeneration(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/resources/\" + this.reportId\n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&abilityid=100\")\n        .then(response =>  {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events.filter(obj => obj.ability.guid === 18194));\n\n                if (data.nextPageTimestamp) {\n                    this.getManaRegeneration(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    } */\n\n    getProtectionPotionHealingEvents(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getProtectionPotionHealingEvents(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getProtectionPotionCastEvents(start_time, end_time, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&filter=ability.id=17546 OR ability.id=7254 OR ability.id=17548 OR ability.id=7242 OR ability.id=17544 OR ability.id=7240 OR ability.id=17543 OR ability.id=7230 OR ability.id=17549\")\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getProtectionPotionCastEvents(data.nextPageTimestamp, end_time, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getClassHealEvents(start_time, end_time, sourceClass, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/healing/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceclass=\" + sourceClass)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getClassHealEvents(data.nextPageTimestamp, end_time, sourceClass, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getClassCastEvents(start_time, end_time, sourceClass, events = []) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/events/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceclass=\" + sourceClass)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                events = events.concat(data.events);\n\n                if (data.nextPageTimestamp) {\n                    this.getClassCastEvents(data.nextPageTimestamp, end_time, sourceClass, events)\n                    .then(resolve).catch(reject);\n                } else {\n                    resolve(events);\n                }\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getCharacterCastTable(start_time, end_time, sourceid, sourcename) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/casts/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&sourceid=\" + sourceid)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                resolve({ id: sourceid, name: sourcename, entries: data.entries })\n            }).catch(reject);\n        }).catch(reject));\n    }\n\n    getArmorBuffUptime(start_time, end_time, context = null) {\n        return Promise.all([\n            this.getBuffUptime(start_time, end_time, 15359), // Inspiration (Rank 3)\n            this.getBuffUptime(start_time, end_time, 16237), // Ancestral Fortitude (Rank 3)\n        ])\n        .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n            current.reduce((innerAccum, character) => {\n                if (!innerAccum[character.id]) {\n                    innerAccum[character.id] = character;\n                }\n                else {\n                    // Join together\n                    let existingCharacter = innerAccum[character.id];\n                    existingCharacter.totalUptime += character.totalUptime;\n                    existingCharacter.totalUses += character.totalUses;\n                    existingCharacter.bands = [...existingCharacter.bands, ...character.bands];\n                    existingCharacter.bands = existingCharacter.bands.sort((x, y) => x.startTime - y.startTime);\n                }\n\n                return innerAccum;\n            }, accum)\n\n            return accum;\n        }, {}))))\n        .then(results => new Promise((resolve,_reject) => resolve({context: context, data: results})));\n    }\n\n    getBuffUptime(start_time, end_time, abilityid) {\n        return new Promise((resolve, reject) => fetch(this.domain + \"report/tables/buffs/\" + this.reportId \n        + \"?api_key=\" + this.key \n        + \"&start=\" + start_time\n        + \"&end=\" + end_time\n        + \"&abilityid=\" + abilityid)\n        .then(response => {\n            if (response.status !== 200) {\n                throw new Error(`${response.stats}: ${response.statusText}`);\n            }\n            response.json().then(data => {\n                resolve(data.auras)\n            }).catch(reject);\n        }).catch(reject));\n    }\n}\n\nexport let LogLoader = new WarcraftLogLoader();","import {Component} from \"react\";\n\nexport class ProgressBar extends Component {\n\n    render() {\n        const {summary, maxHeals} = this.props;\n\n        return (\n            <div className=\"bar\" style={{width: (summary.getTotalHeals() / maxHeals * 100).toFixed(2) + \"%\"}}>\n                <div className=\"bar_effective\" style={{width: summary.getEffectivePercent()+'%'}}></div>\n                <div className=\"bar_overheal\" style={{width: (summary.getOverhealPercent() - summary.getWastedPercent())+'%'}}>&nbsp;</div>\n                <div className=\"bar_wasted\" style={{width: summary.getWastedPercent()+'%'}}>&nbsp;</div>\n            </div>\n        )\n    }\n}","import {Component} from \"react\";\nimport {abbreviateNumber} from \"../utils\";\nimport {ProgressBar} from \"../ProgressBar\";\n\nexport class HealerFightSummary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            summary: props.healer.summary,\n            spells: props.healer.spells,\n            name: props.healer.name,\n            manaOil: props.healer.manaOil,\n            enchants: props.healer.enchants,\n            id: props.healer.id,\n            classType: props.healer.classType,\n            isExpanded: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            isExpanded: !this.state.isExpanded\n        })\n    }\n\n    render() {\n        const {id, name, classType, manaOil, summary, spells, isExpanded, enchants} = this.state;\n        const {row, maxHeals} = this.props;\n\n        let maxSpellHeals = spells.reduce((agg,obj) => {\n            if (obj.summary.getTotalHeals() > agg) {\n                agg = obj.summary.getTotalHeals();\n            }\n            return agg;\n        }, 0);\n\n        let enchantScore = enchants.reduce((acc, obj) => {\n            acc.score += obj.score;\n            acc.count++;\n\n            if (acc.score !== acc.count) {\n                acc.colour = \"yellow\";\n            }\n\n            if (acc.score === 0) {\n                acc.colour = \"red\";\n            }\n\n            acc.tooltip += obj.slot + \": \" \n                + (obj.name ? obj.name : \"(none)\") \n                + (obj.score === 1 ? \" <span class='tick'>✔</span>\" : obj.score === 0 ? \" <span class='cross'>✖</span>\" : \" <span class='alternative'>✔</span>\")\n                + \"<br />\";\n\n            return acc;\n        }, { score: 0, count: 0, colour: \"green\", tooltip: \"\"})\n\n        return (\n            <>\n                <tr key={id} className={classType + \" character \" + (row % 2 === 0 ? \"even\" : \"odd\")} onClick={this.toggle}>\n                    <td className=\"healer_name\">{name}</td>\n                    <td className={\"healer_enchants_\" + enchantScore.colour} data-tip={enchantScore.tooltip} data-place='right' data-class='enchant_tooltip' data-html={true}>{enchantScore.score}/{enchantScore.count}</td>\n                    <td className=\"healer_consumes_manapot center\">{summary.manaPots}</td>\n                    <td className=\"healer_consumes_runes center\">{summary.runes}</td>\n                    <td className={\"healer_consumes_manaoil center \" + (manaOil ? \"tick\" : \"cross\")}>{manaOil ? \"✔\" : \"✖\"}</td>\n                    <td className=\"right\">{abbreviateNumber(summary.manaGained)}</td>\n                    <td className=\"healer_cooldowns\">\n                        {summary.cooldowns.map((cooldown, idx) => (\n                            <img key={idx} className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + cooldown.icon} alt={cooldown.name} data-tip={cooldown.name} />\n                        ))}\n                    </td>\n                    <td className=\"healer_casts_started center\">{summary.castsStarted}</td>\n                    <td className=\"healer_casts_completed center\">{summary.castsCompleted}</td>\n                    <td className=\"healer_casts percent right\">{summary.getCastsPercent()}%</td>\n                    <td className=\"healer_amount\">\n                        <ProgressBar summary={summary} maxHeals={maxHeals} />\n                    </td>\n                    <td className={\"healer_effective amount right\" + (summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.effectiveHeals)}</td>\n                    <td className={\"healer_effective percent right\" + (summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{summary.getEffectivePercent()}%</td>\n                    <td className={\"healer_overheal amount right\" + (summary.overHeal === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.overHeal)}</td>\n                    <td className={\"healer_overheal percent right\" + (summary.overHeal === 0 ? \" empty\" : \"\")}>{summary.getOverhealPercent()}%</td>\n                    <td className={\"healer_wasted amount right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.wastedHeals)}</td>\n                    <td className={\"healer_wasted percent right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{summary.getWastedPercent()}%</td>\n                    <td className={\"healer_wasted percent right\" + (summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(summary.wastedMana)}</td>\n                </tr>\n\n                {isExpanded && spells.sort((x,y) => y.summary.effectiveHeals -x.summary.effectiveHeals)\n                                     .map((spell) => (\n                    <tr key={spell.id} className={spell.type + \" spell \" + (row % 2 === 0 ? \"even\" : \"odd\")}>\n                        <td className=\"healer_name\" colSpan=\"7\"><img className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + spell.icon} alt={spell.name} /> {spell.name}</td>\n                        <td className=\"healer_casts_started center\">{spell.summary.castsStarted}</td>\n                        <td className=\"healer_casts_completed center\">{spell.summary.castsCompleted}</td>\n                        <td className=\"healer_casts percent right\">{spell.summary.getCastsPercent()}%</td>\n                        <td className=\"healer_amount\">\n                            <ProgressBar summary={spell.summary} maxHeals={maxSpellHeals} />\n                        </td>\n                        <td className={\"healer_effective amount right\" + (spell.summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.effectiveHeals)}</td>\n                        <td className={\"healer_effective percent right\" + (spell.summary.effectiveHeals === 0 ? \" empty\" : \"\")}>{spell.summary.getEffectivePercent()}%</td>\n                        <td className={\"healer_overheal amount right\" + (spell.summary.overHeal === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.overHeal)}</td>\n                        <td className={\"healer_overheal percent right\" + (spell.summary.overHeal === 0 ? \" empty\" : \"\")}>{spell.summary.getOverhealPercent()}%</td>\n                        <td className={\"healer_wasted amount right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.wastedHeals)}</td>\n                        <td className={\"healer_wasted percent right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{spell.summary.getWastedPercent()}%</td>\n                        <td className={\"healer_wasted percent right\" + (spell.summary.wastedHeals === 0 ? \" empty\" : \"\")}>{abbreviateNumber(spell.summary.wastedMana)}</td>\n                    </tr>\n                ))}\n            </>\n        )\n    }\n}","export const healingSpells = {\n    // Priest Spells\n    '2054': {\n        name: \"Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 155,\n        castTime: 3000\n    },\n    '2055': {\n        name: \"Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 205,\n        castTime: 3000\n    },\n    '6063': {\n        name: \"Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 255,\n        castTime: 3000\n    },\n    '6064': {\n        name: \"Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_heal02.jpg\",\n        mana: 305,\n        castTime: 3000\n    },\n    '2061': {\n        name: \"Flash Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 125,\n        castTime: 1500\n    },\n    '9472': {\n        name: \"Flash Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 155,\n        castTime: 1500\n    },\n    '9473': {\n        name: \"Flash Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 185,\n        castTime: 1500\n    },\n    '9474': {\n        name: \"Flash Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 215,\n        castTime: 1500\n    },\n    '10915': {\n        name: \"Flash Heal (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 265,\n        castTime: 1500\n    },\n    '10916': {\n        name: \"Flash Heal (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 315,\n        castTime: 1500\n    },\n    '10917': {\n        name: \"Flash Heal (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 380,\n        castTime: 1500\n    },\n    '139': {\n        name: \"Renew (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 30,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6074': {\n        name: \"Renew (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 65,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6075': {\n        name: \"Renew (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 105,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6076': {\n        name: \"Renew (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 140,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6077': {\n        name: \"Renew (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 170,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '6078': {\n        name: \"Renew (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 205,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10927': {\n        name: \"Renew (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 250,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10928': {\n        name: \"Renew (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 305,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '10929': {\n        name: \"Renew (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 365,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '25315': {\n        name: \"Renew (Rank 10)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 410,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 1\n    },\n    '17': {\n        name: \"Power Word: Shield (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 45,\n        castTime: 0\n    },\n    '592': {\n        name: \"Power Word: Shield (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 80,\n        castTime: 0\n    },\n    '600': {\n        name: \"Power Word: Shield (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 130,\n        castTime: 0\n    },\n    '3747': {\n        name: \"Power Word: Shield (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 175,\n        castTime: 0\n    },\n    '6065': {\n        name: \"Power Word: Shield (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 210,\n        castTime: 0\n    },\n    '6066': {\n        name: \"Power Word: Shield (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 250,\n        castTime: 0\n    },\n    '10898': {\n        name: \"Power Word: Shield (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 300,\n        castTime: 0\n    },\n    '10899': {\n        name: \"Power Word: Shield (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 355,\n        castTime: 0\n    },\n    '10900': {\n        name: \"Power Word: Shield (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 425,\n        castTime: 0\n    },\n    '10901': {\n        name: \"Power Word: Shield (Rank 10)\",\n        type: \"Holy\",\n        icon: \"spell_holy_powerwordshield.jpg\",\n        mana: 500,\n        castTime: 0\n    },\n    '2060': {\n        name: \"Greater Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 370,\n        castTime: 3000\n    },\n    '10963': {\n        name: \"Greater Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 455,\n        castTime: 3000\n    },\n    '10964': {\n        name: \"Greater Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 545,\n        castTime: 3000\n    },\n    '10965': {\n        name: \"Greater Heal (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 655,\n        castTime: 3000\n    },\n    '25314': {\n        name: \"Greater Heal (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_greaterheal.jpg\",\n        mana: 710,\n        castTime: 3000\n    },\n    '596': {\n        name: \"Prayer of Healing (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 410,\n        castTime: 3000\n    },\n    '996': {\n        name: \"Prayer of Healing (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 560,\n        castTime: 3000\n    },\n    '10960': {\n        name: \"Prayer of Healing (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 770,\n        castTime: 3000\n    },\n    '10961': {\n        name: \"Prayer of Healing (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 1030,\n        castTime: 3000\n    },\n    '25316': {\n        name: \"Prayer of Healing (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_prayerofhealing02.jpg\",\n        mana: 1070,\n        castTime: 3000\n    },\n    '2050': {\n        name: \"Lesser Heal (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 30,\n        castTime: 1500\n    },\n    '2052': {\n        name: \"Lesser Heal (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 45,\n        castTime: 2000\n    },\n    '2053': {\n        name: \"Lesser Heal (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_lesserheal.jpg\",\n        mana: 75,\n        castTime: 2500\n    },\n    '22009': {\n        name: \"Greater Heal (Renew)\",\n        type: \"Holy\",\n        icon: \"spell_holy_renew.jpg\",\n        mana: 0,\n        castTime: 0,\n        ticks: 5,\n        tickPortion: 0\n    },\n    // Druid Spells\n    '774': {\n        name: \"Rejuvenation (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 25,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '1058': {\n        name: \"Rejuvenation (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 40,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '1430': {\n        name: \"Rejuvenation (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 75,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '2090': {\n        name: \"Rejuvenation (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 105,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '2091': {\n        name: \"Rejuvenation (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 135,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '3627': {\n        name: \"Rejuvenation (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 160,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '8910': {\n        name: \"Rejuvenation (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 195,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9839': {\n        name: \"Rejuvenation (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 235,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9840': {\n        name: \"Rejuvenation (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 280,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '9841': {\n        name: \"Rejuvenation (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 335,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '25299': {\n        name: \"Rejuvenation (Rank 11)\",\n        type: \"Nature\",\n        icon: \"spell_nature_rejuvenation.jpg\",\n        mana: 360,\n        castTime: 0,\n        ticks: 4,\n        tickPortion: 1\n    },\n    '5185': {\n        name: \"Healing Touch (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 25,\n        castTime: 1500\n    },\n    '5186': {\n        name: \"Healing Touch (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 55,\n        castTime: 2000\n    },\n    '5187': {\n        name: \"Healing Touch (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 110,\n        castTime: 2500\n    },\n    '5188': {\n        name: \"Healing Touch (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 185,\n        castTime: 3000\n    },\n    '5189': {\n        name: \"Healing Touch (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 270,\n        castTime: 3500\n    },\n    '6778': {\n        name: \"Healing Touch (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 335,\n        castTime: 3500\n    },\n    '8903': {\n        name: \"Healing Touch (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 405,\n        castTime: 3500\n    },\n    '9758': {\n        name: \"Healing Touch (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 495,\n        castTime: 3500\n    },\n    '9888': {\n        name: \"Healing Touch (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 600,\n        castTime: 3500\n    },\n    '9889': {\n        name: \"Healing Touch (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 720,\n        castTime: 3500\n    },\n    '25297': {\n        name: \"Healing Touch (Rank 11)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingtouch.jpg\",\n        mana: 800,\n        castTime: 3500\n    },\n    '8936': {\n        name: \"Regrowth (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 120,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8938': {\n        name: \"Regrowth (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 205,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8939': {\n        name: \"Regrowth (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 280,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8940': {\n        name: \"Regrowth (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 350,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '8941': {\n        name: \"Regrowth (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 420,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9750': {\n        name: \"Regrowth (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 510,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9856': {\n        name: \"Regrowth (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 615,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9857': {\n        name: \"Regrowth (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 740,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '9858': {\n        name: \"Regrowth (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_resistnature.jpg\",\n        mana: 880,\n        castTime: 2000,\n        ticks: 7,\n        tickPortion: 0.5\n    },\n    '740': {\n        name: \"Tranquility (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 375,\n        castTime: 0\n    },\n    '8918': {\n        name: \"Tranquility (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 505,\n        castTime: 0\n    },\n    '9862': {\n        name: \"Tranquility (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 695,\n        castTime: 0\n    },\n    '9863': {\n        name: \"Tranquility (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_tranquility.jpg\",\n        mana: 925,\n        castTime: 0\n    },\n    '18562': {\n        name: \"Swiftmend\",\n        type: \"Nature\",\n        icon: \"inv_relics_idolofrejuvenation.jpg\",\n        mana: 250,\n        castTime: 0\n    },\n    // Shaman\n    '1064': {\n        name: \"Chain Heal (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 260,\n        castTime: 2500\n    },\n    '10622': {\n        name: \"Chain Heal (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 315,\n        castTime: 2500\n    },\n    '10623': {\n        name: \"Chain Heal (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavegreater.jpg\",\n        mana: 405,\n        castTime: 2500\n    },\n    '8004': {\n        name: \"Lesser Healing Wave (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 105,\n        castTime: 1500\n    },\n    '8008': {\n        name: \"Lesser Healing Wave (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 145,\n        castTime: 1500\n    },\n    '8010': {\n        name: \"Lesser Healing Wave (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 185,\n        castTime: 1500\n    },\n    '10466': {\n        name: \"Lesser Healing Wave (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 235,\n        castTime: 1500\n    },\n    '10467': {\n        name: \"Lesser Healing Wave (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 305,\n        castTime: 1500\n    },\n    '10468': {\n        name: \"Lesser Healing Wave (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_healingwavelesser.jpg\",\n        mana: 380,\n        castTime: 1500\n    },\n    '331': {\n        name: \"Healing Wave (Rank 1)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 25,\n        castTime: 1500\n    },\n    '332': {\n        name: \"Healing Wave (Rank 2)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 45,\n        castTime: 2000\n    },\n    '547': {\n        name: \"Healing Wave (Rank 3)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 80,\n        castTime: 2500\n    },\n    '913': {\n        name: \"Healing Wave (Rank 4)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 155,\n        castTime: 3000\n    },\n    '939': {\n        name: \"Healing Wave (Rank 5)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 200,\n        castTime: 3000\n    },\n    '959': {\n        name: \"Healing Wave (Rank 6)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 265,\n        castTime: 3000\n    },\n    '8005': {\n        name: \"Healing Wave (Rank 7)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 340,\n        castTime: 3000\n    },\n    '10395': {\n        name: \"Healing Wave (Rank 8)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 440,\n        castTime: 3000\n    },\n    '10396': {\n        name: \"Healing Wave (Rank 9)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 560,\n        castTime: 3000\n    },\n    '25357': {\n        name: \"Healing Wave (Rank 10)\",\n        type: \"Nature\",\n        icon: \"spell_nature_magicimmunity.jpg\",\n        mana: 620,\n        castTime: 3000\n    },\n    '5672': {\n        name: \"Healing Stream (Rank 1)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 40,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '6371': {\n        name: \"Healing Stream (Rank 2)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 50,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '6372': {\n        name: \"Healing Stream (Rank 3)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 60,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '10460': {\n        name: \"Healing Stream (Rank 4)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 70,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    '10461': {\n        name: \"Healing Stream (Rank 5)\",\n        type: \"Nature\",\n        icon: \"inv_spear_04.jpg\",\n        mana: 80,\n        castTime: 0,\n        ticks: 30,\n        tickPortion: 1\n    },\n    // Bandages\n    '746': {\n        name: \"Linen Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_15.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '1159': {\n        name: \"Heavy Linen Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_18.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '3267': {\n        name: \"Wool Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_14.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '3268': {\n        name: \"Heavy Wool Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_17.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7926': {\n        name: \"Silk Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_01.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7927': {\n        name: \"Heavy Silk Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_02.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '10838': {\n        name: \"Mageweave Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_19.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '10839': {\n        name: \"Heave Mageweave Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_20.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '18608': {\n        name: \"Runecloth Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_11.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '18610': {\n        name: \"Heavy Runecloth Bandage\",\n        type: \"Physical\",\n        icon: \"inv_misc_bandage_12.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    // Paladin\n    '19750': {\n        name: \"Flash of Light (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 35,\n        castTime: 1500\n    },\n    '19939': {\n        name: \"Flash of Light (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 50,\n        castTime: 1500\n    },\n    '19940': {\n        name: \"Flash of Light (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 70,\n        castTime: 1500\n    },\n    '19941': {\n        name: \"Flash of Light (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 90,\n        castTime: 1500\n    },\n    '19942': {\n        name: \"Flash of Light (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 115,\n        castTime: 1500\n    },\n    '19943': {\n        name: \"Flash of Light (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_flashheal.jpg\",\n        mana: 140,\n        castTime: 1500\n    },\n    '635': {\n        name: \"Holy Light (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 35,\n        castTime: 2500\n    },\n    '639': {\n        name: \"Holy Light (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 60,\n        castTime: 2500\n    },\n    '647': {\n        name: \"Holy Light (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 110,\n        castTime: 2500\n    },\n    '1026': {\n        name: \"Holy Light (Rank 4)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 190,\n        castTime: 2500\n    },\n    '1042': {\n        name: \"Holy Light (Rank 5)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 275,\n        castTime: 2500\n    },\n    '3472': {\n        name: \"Holy Light (Rank 6)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 365,\n        castTime: 2500\n    },\n    '10328': {\n        name: \"Holy Light (Rank 7)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 465,\n        castTime: 2500\n    },\n    '10329': {\n        name: \"Holy Light (Rank 8)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 580,\n        castTime: 2500\n    },\n    '25292': {\n        name: \"Holy Light (Rank 9)\",\n        type: \"Holy\",\n        icon: \"spell_holy_holybolt.jpg\",\n        mana: 660,\n        castTime: 2500\n    },\n    '633': {\n        name: \"Lay on Hands (Rank 1)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    '2800': {\n        name: \"Lay on Hands (Rank 2)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    '10310': {\n        name: \"Lay on Hands (Rank 3)\",\n        type: \"Holy\",\n        icon: \"spell_holy_layonhands.jpg\",\n        mana: 7000,\n        castTime: 0\n    },\n    /*'20185': {\n        name: \"Judgement of Light (Rank 1)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20344': {\n        name: \"Judgement of Light (Rank 2)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20345': {\n        name: \"Judgement of Light (Rank 3)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '20346': {\n        name: \"Judgement of Light (Rank 4)\",\n        icon: \"spell_holy_healingaura.jpg\",\n        mana: 0,\n        castTime: 0\n    }*/\n\n    '17546': {\n        name: \"Greater Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_22.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7254': {\n        name: \"Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_06.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17548': {\n        name: \"Greater Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_23.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7242': {\n        name: \"Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_44.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17544': {\n        name: \"Greater Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_20.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7240': {\n        name: \"Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_13.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17543': {\n        name: \"Greater Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_24.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '7230': {\n        name: \"Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_16.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    '17549': {\n        name: \"Greater Arcane Protection Potion\",\n        type: \"Arcane\",\n        icon: \"inv_potion_83.jpg\",\n        mana: 0,\n        castTime: 0\n    },\n    //Trinkets\n    '26470': {\n        name: \"Scarab Brooch\",\n        type: \"Physical\",\n        icon: \"inv_misc_ahnqirajtrinket_06.jpg\",\n        mana: 0,\n        castTime: 0\n    }\n\n    // Healing Totem\n\n    // Seal of Light\n}\n\nexport const protectionPotionEnum = {\n    GNPP: 17546,\n    NPP: 7254,\n    MNPP: 28513,\n    GSPP: 17548,\n    SPP: 7242,\n    MSPP: 28537,\n    GFrPP: 17544,\n    FrPP: 7240,\n    MFrPP: 28512,\n    GFPP: 17543,\n    FPP: 7230,\n    MFPP: 28511,\n    GAPP: 17549,\n    MAPP: 28536,\n    MHPP: 28538,\n}\nexport const protectionPotions = {\n    '17546': {\n        name: \"Greater Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_22.jpg\",\n        rank: 2,\n    },\n    '7254': {\n        name: \"Nature Protection Potion\",\n        type: \"Nature\",\n        icon: \"inv_potion_06.jpg\",\n        rank: 1,\n    },\n    '17548': {\n        name: \"Greater Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_23.jpg\",\n        rank: 2,\n    },\n    '7242': {\n        name: \"Shadow Protection Potion\",\n        type: \"Shadow\",\n        icon: \"inv_potion_44.jpg\",\n        rank: 1,\n    },\n    '17544': {\n        name: \"Greater Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_20.jpg\",\n        rank: 2,\n    },\n    '7240': {\n        name: \"Frost Protection Potion\",\n        type: \"Frost\",\n        icon: \"inv_potion_13.jpg\",\n        rank: 1,\n    },\n    '17543': {\n        name: \"Greater Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_24.jpg\",\n        rank: 2,\n    },\n    '7230': {\n        name: \"Fire Protection Potion\",\n        type: \"Fire\",\n        icon: \"inv_potion_16.jpg\",\n        rank: 1,\n    },\n    '17549': {\n        name: \"Greater Arcane Protection Potion\",\n        type: \"Arcane\",\n        icon: \"inv_potion_83.jpg\",\n        rank: 2,\n    }\n}\n\nexport const itemSlots = {\n    Head: \"0\",\n    Neck: \"1\",\n    Shoulders: \"2\",\n    Shirt: \"3\",\n    Chest: \"4\",\n    Belt: \"5\",\n    Legs: \"6\",\n    Feet: \"7\",\n    Wrists: \"8\",\n    Hands: \"9\",\n    Finger1: \"10\",\n    Finger2: \"11\",\n    Trinket1: \"12\",\n    Trinket2: \"13\",\n    Back: \"14\",\n    MainHand: \"15\",\n    Offhand: \"16\",\n    Ranged: \"17\",\n    Tabard: \"19\",\n}\n\nconst sharedHealingEnchants = {\n    \"0\": {\n        2544: { score: 0, name: \"Arcanum of Focus (+8 heal)\"},\n        2543: { score: 0, name: \"Arcanum of Rapidity (1% haste)\"},\n        2545: { score: 0, name: \"Arcanum of Protection (1% dodge)\"},\n        1503: { score: 0, name: \"Lesser Arcanum of Constitution (+100hp)\"},\n        1505: { score: 0, name: \"Lesser Arcanum of Resilience (+20FR)\"},\n        1483: { score: 0, name: \"Lesser Arcanum of Rumination (+150mana)\"},\n        1504: { score: 0, name: \"Lesser Arcanum of Tenacity (+125 armor)\"},\n        1506: { score: 0, name: \"Lesser Arcanum of Voracity (+8 str)\"},\n        1507: { score: 0, name: \"Lesser Arcanum of Voracity (+8 stam)\"},\n        1508: { score: 0, name: \"Lesser Arcanum of Voracity (+8 agi)\"},\n        1509: { score: 0, name: \"Lesser Arcanum of Voracity (+8 int)\"},\n        1510: { score: 0, name: \"Lesser Arcanum of Voracity (+8 spi)\"}\n    },\n    \"2\": {  // Shoulders\n        2604: { score: 1, name: \"Zandalar Signet of Serenity\" }  // Zandalar Signet of Serenity\n    },\n    \"4\": {  // Chest\n        1891: { score: 1, name: \"Greater Stats (+4)\" },     // +4 Stats\n        1893: { score: 0.5, name: \"Major Mana (+100)\" },   // Major Mana\n        928: { score: 0.5, name: \"Stats (+3)\" },     // Stats\n        1892: { score: 0, name: \"Major Health (+100)\"}\n    },\n    \"6\": {\n        2544: { score: 0, name: \"Arcanum of Focus (+8 heal)\"},\n        2543: { score: 0, name: \"Arcanum of Rapidity (1% haste)\"},\n        2545: { score: 0, name: \"Arcanum of Protection (1% dodge)\"},\n        1503: { score: 0, name: \"Lesser Arcanum of Constitution (+100hp)\"},\n        1505: { score: 0, name: \"Lesser Arcanum of Resilience (+20FR)\"},\n        1483: { score: 0, name: \"Lesser Arcanum of Rumination (+150mana)\"},\n        1504: { score: 0, name: \"Lesser Arcanum of Tenacity (+125 armor)\"},\n        1506: { score: 0, name: \"Lesser Arcanum of Voracity (+8 str)\"},\n        1507: { score: 0, name: \"Lesser Arcanum of Voracity (+8 stam)\"},\n        1508: { score: 0, name: \"Lesser Arcanum of Voracity (+8 agi)\"},\n        1509: { score: 0, name: \"Lesser Arcanum of Voracity (+8 int)\"},\n        1510: { score: 0, name: \"Lesser Arcanum of Voracity (+8 spi)\"}\n    },\n    \"7\": {  // Feet\n        911: { score: 1, name: \"Minor Run Speed\" },    // Minor Run Speed\n        1887: { score: 0, name: \"Greater Agility (+7)\"},\n        851: { score: 0.5, name: \"Spirit (+5)\"},\n        929: { score: 0, name: \"Greater Stamina (+7)\"}\n    },\n    \"8\": {  // Bracers\n        2566: { score: 1, name: \"Healing Power (+24)\" },  // +24 Healing\n        1886: { score: 0, name: \"Superior Stamina (+9)\"},\n        1885: { score: 0, name: \"Superior Strength (+9)\"},\n        2565: { score: 0, name: \"Mana Regeneration (4mp5)\"},\n        1884: { score: 0, name: \"Superior Spirit (+9)\"},\n        1883: { score: 0, name: \"Greater Intellect (+7)\"}\n    },\n    \"9\": {  // Gloves\n        2617: { score: 1, name: \"Healing Power (+30)\" },  // +30 Healing\n        930: { score: 0, name: \"Riding Skill\" },\n        931: { score: 0, name: \"Minor Haste\" }\n    },\n    \"14\": {  // Back\n        2619: { score: 1, name: \"Greater Fire Resistance (+15)\" }, // Greater Fire Resistance\n        2620: { score: 1, name: \"Greater Nature Resistance (+15)\" }, // Greater Nature Resistance\n        1888: { score: 1, name: \"Greater Resistance (+5)\" },  // Greater Resistance\n        2621: { score: 1, name: \"Subtlety (-2% threat)\" },\n        2622: { score: 0, name: \"Dodge (1% dodge)\" },\n        1889: { score: 0, name: \"Superior Defense (+70 armor)\" }\n    },\n    \"15\": {  // Main Hand\n        2505: { score: 1, name: \"Healing Power (+55)\" },  // +55 Healing\n        2504: { score: 0, name: \"Spell Power (+30)\" },\n        2567: { score: 0, name: \"Mighty Spirit (+20)\" } ,\n        2568: { score: 0, name: \"Mighty Intellect (+22)\" } ,\n        1903: { score: 0, name: \"Major Spirit (+9)\" } ,\n        1904: { score: 0, name: \"Major Intellect (+9)\" } \n    },\n    \"16\": {  // Offhand\n        929: { score: 1, name: \"Greater Stamina (+7)\" },   // +7 Stamina\n        1890: { score: 1, name: \"Superior Spirit (+9)\" },\n        926: { score: 1, name: \"Frost Resistance (+8)\" }\n    }\n}\n\nexport const requiredEnchants = {\n    \"Priest\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2590: { score: 1, name: \"Prophetic Aura\" }  // Prophetic Aura\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2590: { score: 1, name: \"Prophetic Aura\" },  // Prophetic Aura\n        })\n    }),\n    \"Shaman\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2587: { score: 1, name: \"Vodouisant's Vigilant Embrace\" }  // Vodouisant's Vigilant Embrace\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2587: { score: 1, name: \"Vodouisant's Vigilant Embrace\" }  // Vodouisant's Vigilant Embrace\n        })\n    }),\n    \"Druid\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2591: { score: 1, name: \"Animist's Caress\" }  // Animist's Caress\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2591: { score: 1, name: \"Animist's Caress\" }  // Animist's Caress\n        })\n    }),\n    \"Paladin\": Object.assign({}, sharedHealingEnchants, {\n        \"0\": Object.assign({}, sharedHealingEnchants[\"0\"], {  // Head     \n            2584: { score: 1, name: \"Syncretist's Sigil\" }  // Syncretist's Sigil\n        }),\n        \"6\": Object.assign({}, sharedHealingEnchants[\"6\"], {  // Legs\n            2584: { score: 1, name: \"Syncretist's Sigil\" }  // Syncretist's Sigil\n        })\n    })\n}\n\nexport const offhandFrills = {\n    23049: true,    // Sapphiron's Left Eye\n    23048: true,    // Sapphiron's Right Eye\n    23029: true,    // Noth's Frigid Heart\n    22937: true,    // Gem of Nerubis\n    22994: true,    // Digested Hand of Power\n    19366: true,    // Master Dragonslayer's Orb\n    21597: true,    // Royal Scepter of Vek'lor\n    23452: true,    // Grand Marshal's Tome of Power\n    23468: true,    // High Warlord's Tome of Destruction\n    23469: true,    // High Warlord's Tome of Mending\n    23453: true,    // Grand Marshal's Tome of Restoration\n    21666: true,    // Sartura's Might\n    17067: true,    // Ancient Cornerstone Grimoire\n    20582: true,    // Trance Stone\n    19142: true,    // Fire Runed Grimoire\n    21471: true,    // Talon of Furious Concentration\n    19922: true,    // Arlokk's Hoodoo Stick\n    19891: true,    // Jin'do's Bag of Whammies\n    19312: true,    // Lei of the Lifegiver\n    19315: true,    // Therazane's Touch\n    15942: true,    // Master's Rod\n    15989: true,    // Eternal Rod\n    15941: true,    // High Councillor's Scepter\n    15968: true,    // Elunarian Sphere\n    22329: true,    // Scepter of Interminable Focus\n    18523: true,    // Brightly Glowing Stone\n    13353: true,    // Book of the Dead\n    22253: true,    // Tome of the Lost\n    15988: true,    // Resplendent Orb\n    21185: true,    // Earthcalm Orb\n    23156: true,    // Blackwood's Thigh\n    18695: true,    // Spellbound Tome\n    15940: true,    // Elegant Scepter\n    13385: true,    // Tome of Knowledge\n    22319: true,    // Tome of Divine Right\n    15805: true,    // Penelope's Rose,\n    15987: true,    // Astral Orb\n    15931: true,    // Arcane Star\n    15857: true,    // Magebane Scion\n    11928: true    // Thaurissan's Royal Scepter\n}\n\nexport const trackedDamageTakenSpells = [\n    {\n        name: \"Whirlwind\",\n        ids: [1680,15589,26686,26084]\n    },\n    {\n        name: \"Rain of Fire\",\n        ids: [5740,11678,11677,6219,28794]\n    },\n    {\n        name: \"Fire Shield\",\n        ids: [8317,8316,2947,11770,11771]\n    },\n    {\n        name: \"Flames\",\n        ids: [7897,12796,19628,29115,15643]\n    },\n    {\n        name: \"Cleave\",\n        ids: [797,3433,3434,3435,5532,11427,15284,15496,15579,15584,15613,15622,15623,15663,16044,17685,19632,19642,20571,20605,20666,20677,20684,20691,22540,26350,27794,19983]\n    },\n    {\n        name: \"Blizzard\",\n        ids: [26607]\n    },\n    {\n        name: \"Explode\",\n        ids: [26059,25699]\n    },\n    {\n        name: \"Impale\",\n        ids: [26025]\n    },\n    {\n        name: \"Bomb\",\n        ids: [8858,9143,22334]\n    },\n    {\n        name: \"Thunderclap\",\n        ids: [26554,8732]\n    },\n    {\n        name: \"Shadow Storm\",\n        ids: [26546,26555]\n    },\n    {\n        name: \"Dark Glare\",\n        ids: [41936,41937,26029]\n    },\n    {\n        name: \"Falling\",\n        ids: [3]\n    },\n    {\n        name: \"Void Zone\",\n        ids: [28863,28865]\n    },\n    {\n        name: \"Poison Cloud\",\n        ids: [28240,28241]\n    },\n    {\n        name: \"Frost Breath\",\n        ids: [3129,28524]\n    },\n    {\n        name: \"Eruption\",\n        ids: [29371]\n    },\n    {\n        name: \"Brood Power Bronze\",\n        ids: [22311]\n    },\n    {\n        name: \"Void Blast\",\n        ids: [27812]\n    },\n    {\n        name: \"Tail Sweep\",\n        ids: [15847,25653]\n    },\n    {\n        name: \"Positive Charge\",\n        ids: [28062]\n    },\n    {\n        name: \"Negative Charge\",\n        ids: [28085]\n    },\n    {\n        name: \"Disrupting Shout\",\n        ids: [29107]\n    },\n    {\n        name: \"Chill\",\n        ids: [28547]\n    },\n    {\n        name: \"Dark Blast\",\n        ids: [28457]\n    },\n    {\n        name: \"Wail of Souls\",\n        ids: [28459]\n    }\n]\n\nexport const rarity = {\n    Common: \"Common\",\n    Uncommon: \"Uncommon\",\n    Rare: \"Rare\",\n    Epic: \"Epic\",\n}\n\n// Spec list\n// Druid\n// Druid-Restoration\n// Druid-Balance\n// Druid-Guardian\n// Druid-Feral\n// Hunter\n// Hunter-BeastMastery\n// Hunter-Survival\n// Hunter-Marksmanship\n// Mage\n// Mage-Fire\n// Mage-Arcane\n// Mage-Frost\n// Paladin\n// Paladin-Retribution\n// Paladin-Holy\n// Paladin-Protection\n// Priest\n// Priest-Holy\n// Priest-Discipline\n// Priest-Shadow\n// Rogue\n// Rogue-Combat\n// Rogue-Subtlety\n// Rogue-Assassination\n// Shaman\n// Shaman-Restoration\n// Shaman-Enhancement\n// Shaman-Elemental\n// Warlock\n// Warlock-Destruction\n// Warlock-Affliction\n// Warlock-Demonology\n// Warrior\n// Warrior-Arms\n// Warrior-Fury\n// Warrior-Protection\n\nexport const enchants = {\n    3001: {\n        name: \"Glyph of Renewal\",\n        itemId: 29190,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    3003: {\n        name: \"Glyph of Ferocity\",\n        itemId: 29192,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    3002: {\n        name: \"Glyph of Power\",\n        itemId: 29191,\n        score: {\n            \"Paladin-Protection\": 1\n        }\n    },\n    2999: {\n        name: \"Glyph of the Defender\",\n        itemId: 29186,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2583: {\n        name: \"Presence of Might\",\n        itemId: 19782,\n        score: {\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2979: {\n        name: \"Inscription of Faith\",\n        itemId: 28878,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n        }\n    },\n    2980: {\n        name: \"Greater Inscription of Faith\",\n        itemId: 28887,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2715: {\n        name: \"Resilience of the Scourge\",\n        itemId: 23547,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2604: {\n        name: \"Zandalar Signet of Serenity\",\n        itemId: 20078,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n        }\n    },\n    2992: {\n        name: \"Inscription of the Oracle\",\n        itemId: 28904,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n        }\n    },\n    2993: {\n        name: \"Greater Inscription of the Oracle\",\n        itemId: 28912,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2717: {\n        name: \"Might of the Scourge\",\n        itemId: 23548,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2996: {\n        name: \"Inscription of the Blade\",\n        itemId: 28907,\n        score: {\n            \"Druid-Guardian\": 0.5,\n            \"Druid-Feral\": 0.5,\n            \"Rogue-Combat\": 0.5,\n            \"Rogue-Subtlety\": 0.5,\n            \"Rogue-Assassination\": 0.5,\n            \"Shaman-Enhancement\": 0.5,\n            \"Paladin-Retribution\": 0.5,\n            \"Warrior-Arms\": 0.5,\n            \"Warrior-Fury\": 0.5,\n            \"Hunter-BeastMastery\": 0.5,\n            \"Hunter-Survival\": 0.5,\n            \"Hunter-Marksmanship\": 0.5,\n        }\n    },\n    2997: {\n        name: \"Greater Inscription of the Blade\",\n        itemId: 28910,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2983: {\n        name: \"Inscription of Vengeance\",\n        itemId: 28885,\n        score: {\n            \"Druid-Guardian\": 0.5,\n            \"Druid-Feral\": 0.5,\n            \"Rogue-Combat\": 0.5,\n            \"Rogue-Subtlety\": 0.5,\n            \"Rogue-Assassination\": 0.5,\n            \"Shaman-Enhancement\": 0.5,\n            \"Paladin-Retribution\": 0.5,\n            \"Warrior-Arms\": 0.5,\n            \"Warrior-Fury\": 0.5,\n            \"Hunter-BeastMastery\": 0.5,\n            \"Hunter-Survival\": 0.5,\n            \"Hunter-Marksmanship\": 0.5,\n        }\n    },\n    2716: {\n        name: \"Fortitude of the Scourge\",\n        itemId: 23549,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2977: {\n        name: \"Inscription of Warding\",\n        itemId: 28882,\n        score: {\n            \"Paladin-Protection\": 0.5,\n            \"Warrior-Protection\": 0.5,\n        }\n    },\n    2978: {\n        name: \"Greater Inscription of Warding\",\n        itemId: 28889,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2990: {\n        name: \"Inscription of the Knight\",\n        itemId: 28908,\n        score: {\n            \"Paladin-Protection\": 0.5,\n            \"Warrior-Protection\": 0.5,\n        }\n    },\n    2991: {\n        name: \"Greater Inscription of the Knight\",\n        itemId: 28911,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2986: {\n        name: \"Greater Inscription of Vengeance\",\n        itemId: 28888,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2981: {\n        name: \"Inscription of Discipline\",\n        itemId: 28881,\n        score: {\n\n        }\n    },\n    2982: {\n        name: \"Greater Inscription of Discipline\",\n        itemId: 28886,\n        score: {\n\n        }\n    },\n    2994: {\n        name: \"Inscription of the Orb\",\n        itemId: 28903,\n        score: {\n\n        }\n    },\n    2995: {\n        name: \"Greater Inscription of the Orb\",\n        itemId: 28909,\n        score: {\n\n        }\n    },\n    2605: {\n        name: \"Zandalar Signet of Mojo\",\n        itemId: 20076,\n        score: {\n\n        }\n    },\n    368: {\n        name: \"Enchant Cloak - Greater Agility\",\n        spellId: 46505,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Warrior-Protection\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2622: {\n        name: \"Enchant Cloak - Dodge\",\n        spellId: 25086,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    1441: {\n        name: \"Enchant Cloak - Greater Shadow Resistance\",\n        spellId: 34006,\n        score: {\n            \"Shaman-Restoration\": 1\n        }\n    },\n    2621: {\n        name: \"Enchant Cloak - Subtlety\",\n        spellId: 25084,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Druid-Restoration\": 1,\n            \"Paladin-Retribution\": 1,\n        }\n    },\n    2664: {\n        name: \"Enchant Cloak - Major Resistance\",\n        spellId: 27962,\n        score: {\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n        }\n    },\n    2662: {\n        name: \"Enchant Cloak - Major Armor\",\n        spellId: 27961,\n        score: {\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n        }\n    },\n    1889: {\n        name: \"Enchant Cloak - Superior Defense\",\n        spellId: 20015,\n        score: {\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n        }\n    },\n    3150: {\n        name: \"Enchant Chest - Restore Mana Prime\",\n        spellId: 33991,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Paladin-Holy\": 1,\n        }\n    },\n    2661: {\n        name: \"Enchant Chest - Exceptional Stats\",\n        spellId: 27960,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Warrior-Protection\": 1,\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    1144: {\n        name: \"Enchant Chest - Major Spirit\",\n        spellId: 33990,\n        score: {\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2933: {\n        name: \"Enchant Chest - Resilience Rating\",\n        spellId: 33992,\n        score: {\n            \"Warrior-Protection\": 1,\n            \"Druid-Guardian\": 1,\n        }\n    },\n    2659: {\n        name: \"Enchant Chest - Exceptional Health\",\n        spellId: 27957,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    1950: {\n        name: \"Enchant Chest - Defense\",\n        spellId: 46594,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    2617: {\n        name: \"Enchant Bracer - Superior Healing\",\n        spellId: 27911,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2566: {\n        name: \"Enchant Bracer - Healing Power\",\n        spellId: 23802,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n        }\n    },\n    2649: {\n        name: \"Enchant Bracer - Fortitude\",\n        spellId: 27914,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2648: {\n        name: \"Enchant Bracer - Major Defense\",\n        spellId: 27906,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    2650: {\n        name: \"Enchant Bracer - Spellpower\",\n        spellId: 27917,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    2647: {\n        name: \"Enchant Bracer - Brawn\",\n        spellId: 27899,\n        score: {\n            \"Druid-Feral\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n        }\n    },\n    1593: {\n        name: \"Enchant Bracer - Assault\",\n        spellId: 34002,\n        score: {\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2613: {\n        name: \"Enchant Gloves - Threat\",\n        spellId: 25072,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2937: {\n        name: \"Enchant Gloves - Major Spellpower\",\n        spellId: 33997,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    2564: {\n        name: \"Enchant Gloves - Superior Agility\",\n        spellId: 25080,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2322: {\n        name: \"Enchant Gloves - Major Healing\",\n        spellId: 33999,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2935: {\n        name: \"Enchant Gloves - Spell Strike\",\n        spellId: 33994,\n        score: {\n            \n        }\n    },\n    1594: {\n        name: \"Enchant Gloves - Assault\",\n        spellId: 33996,\n        score: {\n\n        }\n    },\n    684: {\n        name: \"Enchant Gloves - Major Strength\",\n        spellId: 46515,\n        score: {\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n        }\n    },\n    2746: {\n        name: \"Golden Spellthread\",\n        itemId: 24276,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2745: {\n        name: \"Silver Spellthread\",\n        itemId: 24275,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n        }\n    },\n    2747: {\n        name: \"Mystic Spellthread\",\n        itemId: 24273,\n        score: {\n\n        }\n    },\n    2748: {\n        name: \"Runic Spellthread\",\n        itemId: 24274,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    3011: {\n        name: \"Clefthide Leg Armor\",\n        itemId: 29534,\n        score: {\n            \"Druid-Guardian\": 0.5,\n            \"Paladin-Protection\": 0.5,\n            \"Warrior-Protection\": 0.5,\n        }\n    },\n    3013: {\n        name: \"Nethercleft Leg Armor\",\n        itemId: 29536,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    3010: {\n        name: \"Cobrahide Leg Armor\",\n        itemId: 29533,\n        score: {\n            \"Druid-Feral\": 0.5,\n            \"Rogue-Combat\": 0.5,\n            \"Rogue-Subtlety\": 0.5,\n            \"Rogue-Assassination\": 0.5,\n            \"Shaman-Enhancement\": 0.5,\n            \"Paladin-Retribution\": 0.5,\n            \"Warrior-Arms\": 0.5,\n            \"Warrior-Fury\": 0.5,\n            \"Hunter-BeastMastery\": 0.5,\n            \"Hunter-Survival\": 0.5,\n            \"Hunter-Marksmanship\": 0.5,\n        }\n    },\n    3012: {\n        name: \"Nethercobra Leg Armor\",\n        itemId: 29535,\n        score: {\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2940: {\n        name: \"Enchant Boots - Boar's Speed\",\n        spellId: 34008,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n            \"Druid-Guardian\": 1,\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    911: {\n        name: \"Enchant Boots - Minor Speed\",\n        spellId: 13890,\n        score: {\n            \"Shaman-Restoration\": 0.5,\n            \"Priest-Holy\": 0.5,\n            \"Priest-Discipline\": 0.5,\n            \"Paladin-Holy\": 0.5,\n            \"Druid-Restoration\": 0.5,\n            \"Shaman-Enhancement\": 0.5,\n        }\n    },\n    2657: {\n        name: \"Enchant Boots - Dexterity\",\n        spellId: 27951,\n        score: {\n            \"Paladin-Retribution\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2658: {\n        name: \"Enchant Boots - Surefooted\",\n        spellId: 27954,\n        score: {\n            \"Paladin-Retribution\": 1,\n        }\n    },\n    2939: {\n        name: \"Enchant Boots - Cat's Swiftness\",\n        spellId: 34007,\n        score: {\n            \"Druid-Feral\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n        }\n    },\n    2343: {\n        name: \"Enchant Weapon - Major Healing\",\n        spellId: 34010,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Priest-Holy\": 1,\n            \"Priest-Discipline\": 1,\n            \"Paladin-Holy\": 1,\n            \"Druid-Restoration\": 1,\n        }\n    },\n    2670: {\n        name: \"Enchant 2H Weapon - Major Agility\",\n        spellId: 27977,\n        score: {\n            \"Druid-Guardian\": 1,\n            \"Druid-Feral\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2669: {\n        name: \"Enchant Weapon - Major Spellpower\",\n        spellId: 27975,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    2673: {\n        name: \"Enchant Weapon - Mongoose\",\n        spellId: 27984,\n        score: {\n            \"Warrior-Protection\": 1,\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Shaman-Enhancement\": 1,\n            \"Paladin-Retribution\": 1,\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n        }\n    },\n    2654: {\n        name: \"Enchant Shield - Intellect\",\n        spellId: 27945,\n        score: {\n            \"Shaman-Restoration\": 1,\n            \"Paladin-Holy\": 1,\n        }\n    },\n    1071: {\n        name: \"Enchant Shield - Major Stamina\",\n        spellId: 34009,\n        score: {\n            \"Paladin-Protection\": 1,\n            \"Warrior-Protection\": 1,\n        }\n    },\n    2655: {\n        name: \"Enchant Shield - Shield Block\",\n        spellId: 27946,\n        score: {\n            \"Paladin-Protection\": 1,\n        }\n    },\n    2841: {\n        name: \"Heavy Knothide Armor Kit\",\n        itemId: 34330,\n        score: {\n            \"Paladin-Protection\": 1\n        }\n    },\n    2724: {\n        name: \"Stabilitzed Eternium Scope\",\n        itemId: 23766,\n        score: {\n            \"Rogue-Combat\": 1,\n            \"Rogue-Subtlety\": 1,\n            \"Rogue-Assassination\": 1,\n            \"Hunter-BeastMastery\": 1,\n            \"Hunter-Survival\": 1,\n            \"Hunter-Marksmanship\": 1,\n        }\n    },\n    2723: {\n        name: \"Khorium Scope\",\n        itemId: 23765,\n        score: {\n            \"Warrior-Arms\": 1,\n            \"Warrior-Fury\": 1,\n        }\n    }\n}\n","import {healingSpells} from \"../data\";\nimport {cooldownList} from \"../datastore\";\n\nexport class HealSummary {\n    constructor() {\n        this.manaPots = 0;\n        this.runes = 0;\n        this.manaGained = 0;\n        this.castsStarted = 0;\n        this.castsCompleted = 0;\n        this.effectiveHeals = 0;\n        this.overHeal = 0;\n        this.wastedHeals = 0;\n        this.wastedMana = 0;\n        this.cooldowns = [];\n    }\n\n    getCastsPercent() { return (this.castsStarted > 0 ? this.castsCompleted / this.castsStarted * 100 : 0).toFixed(2); }\n    getTotalHeals() { return this.effectiveHeals + this.overHeal; }\n    getEffectivePercent() { return (this.getTotalHeals() > 0 ? this.effectiveHeals / this.getTotalHeals() * 100 : 0).toFixed(2); }\n    getOverhealPercent() { return (this.getTotalHeals() > 0 ? this.overHeal / this.getTotalHeals() * 100 : 0).toFixed(2); }\n    getWastedPercent() { return (this.getTotalHeals() > 0 ? this.wastedHeals / this.getTotalHeals() * 100 : 0).toFixed(2); }\n}\n\nexport function getHealSummary(collection, event, getOrCreate) {\n    \n    let aggregate = getOrCreate(collection, event);\n\n    if (!aggregate) {\n        return;\n    }\n\n    if (event.ability.guid === 27869 || event.ability.guid === 16666) {\n        aggregate.runes++;\n        aggregate.manaGained += 1500;\n    }\n\n    if (event.ability.guid === 17531) {\n        aggregate.manaPots++;\n        aggregate.manaGained += 2250;\n    }\n\n    let spellInfo = healingSpells[event.ability.guid];\n\n    if (spellInfo)\n    {\n        if (event.type === \"begincast\") {\n            aggregate.castsStarted++;\n        } else if (event.type === \"cast\") {\n            if (spellInfo.castTime === 0) {\n                aggregate.castsStarted++;\n            }\n            aggregate.castsCompleted++;\n        }\n    } else {\n        console.log(\"Not healing spell: \" + event.ability.name + \" (\" + event.ability.guid + \")\");\n    }\n\n    if (event.type === \"heal\" || event.type === \"absorbed\") {\n        if (event.amount) {\n            aggregate.effectiveHeals += event.amount;\n        }\n        if (event.overheal) {\n            aggregate.overHeal += event.overheal;\n            if (event.amount === 0) {\n                aggregate.wastedHeals += event.overheal;\n                if (event.tick && spellInfo && spellInfo.ticks) {\n                    aggregate.wastedMana += Math.round(spellInfo.mana * spellInfo.tickPortion / spellInfo.ticks);\n                } else {\n                    aggregate.wastedMana += spellInfo ? spellInfo.mana : 0;\n                }\n            }\n        }\n    }\n\n    if (event.type === \"cast\" && cooldownList[event.ability.guid]) {\n        aggregate.cooldowns.push(cooldownList[event.ability.guid]);\n    }\n\n}","import \"./FightReport.scss\";\nimport {Component} from \"react\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport {msToTime, abbreviateNumber} from \"../utils\";\nimport { HealerFightSummary } from \"./HealerFightSummary\";\nimport {getHealSummary, HealSummary} from \"./healSummary\";\nimport {healingSpells, protectionPotions, requiredEnchants} from \"../data\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport class FightReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            reportId: props.reportId,\n            fight: props.fight,\n            events: [],\n            healers: [],\n            isLoaded: false,\n            healSummary: null,\n            expanded: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    loadData() {\n        const { reportId, fight, isLoaded } = this.state;\n        const {characters} = this.props;\n        if (!reportId || !fight || isLoaded)\n            return;\n\n        let healerInfo = {};\n\n        LogLoader.getHealerInfo(fight.start_time, fight.end_time)\n        .then(\n            (healers) => {\n                healerInfo = healers;\n            }\n        );\n\n        LogLoader.getHealEvents(fight.start_time, fight.end_time)\n        .then(\n            (result) => {\n                let eventsByCharacter = this.getCharactersFromEvents(result);\n                let characterList = [];\n\n                for (const [key, value] of Object.entries(eventsByCharacter.characters))\n                {\n                    let characterName;\n                    let characterClass;\n                    let characterManaOil = false;\n                    let enchants = [];\n                    if (characters[key]) {\n                        characterName = characters[key].name;\n                        characterClass = characters[key].type;\n                        if (healerInfo[key]) {\n                            characterManaOil = healerInfo[key].weaponEnchant.id === 2629;\n\n                            const bisEnchants = requiredEnchants[characterClass];\n\n                            enchants = healerInfo[key].enchants.map((obj) => {\n                                return {\n                                    slot: obj.slotname,\n                                    score: bisEnchants[obj.slot][obj.id] ? bisEnchants[obj.slot][obj.id].score : 0,\n                                    name: bisEnchants[obj.slot][obj.id] ? bisEnchants[obj.slot][obj.id].name : obj.name\n                                }\n\n                            })\n                        }\n                    }\n\n                    if (key === '9999') {\n                        characterName = \"Protection Potions\";\n                        characterClass = \"Consumable\";\n                    }\n\n                    characterList.push({ \n                        id: key,\n                        name: characterName,\n                        classType: characterClass,\n                        manaOil: characterManaOil,\n                        enchants: enchants,\n                        summary: value.total,\n                        spells: Object.entries(value.spells).map(keyValuePair => keyValuePair[1])\n                    })\n                }\n\n                this.setState({\n                    isLoaded: true,\n                    events: result.events,\n                    healSummary: eventsByCharacter.total,\n                    healers: characterList\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    getCharactersFromEvents(events) {\n        const {pets} = this.props;\n\n        let groupByCharacter = events.reduce((acc, obj) => {\n            getHealSummary(acc, obj, (collection, _event) => collection.total);  // Save to totals\n            getHealSummary(acc, obj, (collection, event) => {\n                let sourceId = event[\"sourceID\"];\n                if (pets[sourceId]) {\n                    sourceId = pets[sourceId].petOwner;\n                }\n\n                let abilityId = event.ability.guid;\n                if (protectionPotions[abilityId]) {\n                    sourceId = 9999;\n                }\n\n                if (!collection.characters[sourceId]) {\n                    collection.characters[sourceId] = { total: new HealSummary(), spells: {} };\n                }\n\n                return collection.characters[sourceId].total;\n            });\n            getHealSummary(acc, obj, (collection, event) => {\n                let sourceId = event.sourceID;\n                if (pets[sourceId]) {\n                    sourceId = pets[sourceId].petOwner;\n                }\n                let spellId = event.ability.guid;\n                if (protectionPotions[spellId]) {\n                    sourceId = 9999;\n                }\n\n                let spell = healingSpells[spellId];\n                if (!spell) {\n                    return null;\n                }\n\n                if (!collection.characters[sourceId].spells[spellId]) {\n                    collection.characters[sourceId].spells[spellId] = { id: spellId, name: spell.name, icon: spell.icon, type: spell.type, summary: new HealSummary() };\n                }\n\n                return collection.characters[sourceId].spells[spellId].summary;\n            })\n\n            return acc;\n        }, { total: new HealSummary(), characters: {}})\n\n        return groupByCharacter;\n    }\n\n    toggle() {\n        this.setState({\n            expanded: !this.state.expanded\n        });\n\n        this.loadData();\n    }\n\n    render() {\n        const { error, isLoaded, fight, healSummary, healers, expanded} = this.state;\n\n        let fightClass = !fight.boss ? \"trash\" : fight.kill ? \"success\" : \"fail\";\n        let details;\n        if (error) {\n            details = <div>Error: {error.message}</div>\n        } else if (!isLoaded) {\n            details = <div>Loading...</div>\n        } else {\n            let maxHeals = healers.reduce((agg,obj) => {\n                if (obj.summary.getTotalHeals() > agg) {\n                    agg = obj.summary.getTotalHeals();\n                }\n                return agg;\n            }, 0);\n            details = (\n            <>\n                <table>\n                    <thead>\n                        <tr>\n                            <td className=\"healer_name\" rowSpan=\"2\">Name</td>\n                            <td className=\"healer_enchants\" rowSpan=\"2\">Enchants</td>\n                            <td className=\"healer_consumes\" colSpan=\"3\">Consumes</td>\n                            <td className=\"healer_consumes_mana\" rowSpan=\"2\">Mana Gained</td>\n                            <td className=\"healer_cooldowns\" rowSpan=\"2\">Cooldowns</td>\n                            <td className=\"healer_casts\" colSpan=\"3\">Casts</td>\n                            <td className=\"healer_amount\" rowSpan=\"2\">Amount</td>\n                            <td className=\"healer_effective center\" colSpan=\"2\">Effective</td>\n                            <td className=\"healer_overheal center\" colSpan=\"2\">Overheal</td>\n                            <td className=\"healer_wasted center\" colSpan=\"3\">Wasted</td>\n                        </tr>\n                        <tr>\n                            <td className=\"healer_consumes_manapot center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_potion_76.jpg\" width=\"24\" height=\"24\" alt=\"Major Mana Potion\" data-tip='Major Mana Potions'/></td>\n                            <td className=\"healer_consumes_runes center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_misc_rune_04.jpg\" width=\"24\" height=\"24\" alt=\"Demonic/Dark Runes\"  data-tip='Demonic/Dark Runes'/></td>\n                            <td className=\"healer_consumes_manaoil center\"><img src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_potion_100.jpg\" width=\"24\" height=\"24\" alt=\"Brilliant Mana Oil\"  data-tip='Brilliant Mana Oil'/></td>\n                            <td className=\"healer_casts_started center\">Start</td>\n                            <td className=\"healer_casts_completed center\">Finish</td>\n                            <td className=\"healer_casts percent right\">%</td>\n                            <td className=\"healer_effective amount right\">#</td>\n                            <td className=\"healer_effective percent right\">%</td>\n                            <td className=\"healer_overheal amount right\">#</td>\n                            <td className=\"healer_overheal percent right\">%</td>\n                            <td className=\"healer_wasted amount right\">#</td>\n                            <td className=\"healer_wasted percent right\">%</td>\n                            <td className=\"healer_wasted amount right\">Mana</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                {healers.sort((x,y) => y.summary.effectiveHeals - x.summary.effectiveHeals)\n                        .map((x, idx) => (\n                    <HealerFightSummary key={x.id} healer={x} row={idx} maxHeals={maxHeals} />\n                ))}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td className=\"healer_name\">Total</td>\n                            <td className=\"healer_enchants\"></td>\n                            <td className=\"healer_consumes_manapot center\">{healSummary.manaPots}</td>\n                            <td className=\"healer_consumes_runes center\">{healSummary.runes}</td>\n                            <td className=\"healer_consumes_manaoil center\"></td>\n                            <td className=\"right\">{abbreviateNumber(healSummary.manaGained)}</td>\n                            <td className=\"healer_cooldowns\"></td>\n                            <td className=\"healer_casts_started center\">{healSummary.castsStarted}</td>\n                            <td className=\"healer_casts_completed center\">{healSummary.castsCompleted}</td>\n                            <td className=\"healer_casts percent center\">{healSummary.getCastsPercent()}%</td>\n                            <td className=\"healer_amount\">&nbsp;</td>\n                            <td className=\"healer_effective amount right\">{abbreviateNumber(healSummary.effectiveHeal)}</td>\n                            <td className=\"healer_effective percent right\">{healSummary.getEffectivePercent()}%</td>\n                            <td className=\"healer_overheal amount right\">{abbreviateNumber(healSummary.overHeal)}</td>\n                            <td className=\"healer_overheal percent right\">{healSummary.getOverhealPercent()}%</td>\n                            <td className=\"healer_wasted amount right\">{abbreviateNumber(healSummary.wastedHeals)}</td>\n                            <td className=\"healer_wasted percent right\">{healSummary.getWastedPercent()}%</td>\n                            <td className=\"healer_wasted percent right\">{abbreviateNumber(healSummary.wastedMana)}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n                <ReactTooltip />\n            </>\n            )\n        }\n        return (\n            <div className={\"fight \" + fightClass}>\n            <div className=\"heading\" onClick={this.toggle}>{fight.name} {fight.kill ? \"- Kill \" : \"- Wipe \"}({msToTime(fight.end_time - fight.start_time)})</div>\n            {expanded && details}\n            </div>\n        )\n    }\n}","import {Component} from \"react\";\nimport {FightReport} from \"./FightReport\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport { withRouter } from \"react-router-dom\";\n\nclass HealerReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            pets: {},\n            isLoaded: false,\n            //reportId: props.reportId\n        }\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        //const { reportId } = this.state;\n        if (!id)\n            return;\n\n        this.setState({reportId: id});\n\n        LogLoader.setReport(id);\n        LogLoader.getFights()\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    fights: result.fights,\n                    characters: result.friendlies.reduce((acc, obj) => {\n                        let id = obj[\"id\"];\n                        if (!acc[id]) {\n                            acc[id] = obj;\n                        }\n\n                        return acc;\n                    }, {}),\n                    pets: result.friendlyPets.reduce((acc, obj) => {\n                        let id = obj[\"id\"];\n                        if (!acc[id]) {\n                            acc[id] = obj;\n                        }\n\n                        return acc;\n                    })\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    render() {\n        const { error, isLoaded, fights, reportId, characters, pets} = this.state;\n        const {showTrash} = this.props;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                {fights.filter(x => showTrash || x.boss !== 0).map(item => (\n                    <FightReport key={item.id} fight={item} characters={characters} pets={pets} reportId={reportId} />\n                ))}\n                </>\n            )\n        }\n    }\n}\n\nexport const HealerReportWithRouter = withRouter(HealerReport);","import \"./AncestralFortitudeReport.css\";\nimport { Component } from \"react\";\nimport { LogLoader } from \"../warcraftLogLoader\";\nimport { msToTime, asPercentage } from \"../utils\";\n\nexport class AncestralFortitudeReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            tanksPerFight: {},\n            tanks: {},\n            isLoaded: false,\n            reportId: props.reportId\n        }\n    }\n\n    //getArmorBuffUptime\n    _getArmorBuffUptime(fights) {\n        let buffCalls = fights.map(fight => LogLoader.getArmorBuffUptime(fight.start_time, fight.end_time, fight.id))\n        return Promise.all(buffCalls)\n        .then(res => new Promise((resolve, _reject) => {\n            let buffsForFight = res.reduce((accum, current) => {\n                accum[current.context] = current.data;\n\n                return accum;\n            }, {});\n            resolve(buffsForFight);\n        }))\n        .then(allBuffs => {\n            this.setState({\n                buffUptime: allBuffs\n            })\n        });\n    }\n\n    _getTanksForFights(fights) {\n        let tankCalls = fights.map(fight => LogLoader.getTankInfo(fight.start_time, fight.end_time, fight.id));\n        return Promise.all(tankCalls)\n            .then(res => new Promise((resolve, _reject) => {\n                let tanksForFight = res.reduce((accum, current) => {\n                    accum[current.context] = current.data;\n\n                    return accum;\n                }, {});\n                resolve(tanksForFight);\n            }))\n            .then(allTanks => {\n                this.setState({\n                    tanksPerFight: allTanks,\n                    tanks: Object.entries(allTanks).reduce((accum, [_fightkey, current]) => {\n                        Object.entries(current).reduce((innerAccum, [charId, character]) => {\n                            if (!innerAccum[charId]) {\n                                innerAccum[charId] = { name: character.name, class: character.type };\n                            }\n\n                            return innerAccum\n                        }, accum)\n\n                        return accum;\n                    }, {})\n                })\n            });\n    }\n\n    componentDidMount() {\n        const { reportId } = this.state;\n        if (!reportId)\n            return;\n\n        LogLoader.getFights()\n            .then(\n                (result) => {\n                    let fights = result.fights.filter(x => x.boss !== 0);\n                    return Promise.all([\n                        this._getTanksForFights(fights),\n                        this._getArmorBuffUptime(fights)\n                    ])\n                    .then(_results => {\n                        this.setState({\n                            isLoaded: true,\n                            fights: fights\n                        });\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            error: error\n                        })\n                    })\n                    /* let tankCalls = fights.map(fight => LogLoader.getTankInfo(fight.start_time, fight.end_time, fight.id));\n                    return Promise.all(tankCalls)\n                        .then(res => new Promise((resolve, _reject) => {\n                            let tanksForFight = res.reduce((accum, current) => {\n                                accum[current.context] = current.data;\n\n                                return accum;\n                            }, {});\n                            resolve(tanksForFight);\n                        }))\n                        .then(allTanks => {\n                            this.setState({\n                                isLoaded: true,\n                                fights: fights,\n                                tanksPerFight: allTanks,\n                                tanks: Object.entries(allTanks).reduce((accum, [_fightkey, current]) => {\n                                    Object.entries(current).reduce((innerAccum, [charId, character]) => {\n                                        if (!innerAccum[charId]) {\n                                            innerAccum[charId] = { name: character.name, class: character.type };\n                                        }\n\n                                        return innerAccum\n                                    }, accum)\n\n                                    return accum;\n                                }, {})\n                            })\n                        },\n                            (error) => {\n                                this.setState({\n                                    isLoaded: true,\n                                    error: error\n                                })\n                            }) */\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error: error\n                    })\n                });\n    }\n\n    render() {\n        const { error, isLoaded, tanks, fights, tanksPerFight, buffUptime } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h3>Ancestral Fortitude/Inspiration</h3>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>&nbsp;</td>\n                                {Object.entries(tanks).map(([key, value]) => <td key={key} className={\"inspiration_heading \" + value.class + \"Background\"} colspan=\"2\">{value.name}</td>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {fights.map((fight, idx) => {\n                                return (\n                                    <tr key={fight.id} className={(idx % 2 === 0 ? \"even\" : \"odd\")}>\n                                        <td className={!fight.boss ? \"trash\" : fight.kill ? \"success\" : \"fail\"}>{fight.name} {fight.kill ? \"- Kill \" : \"- Wipe \"}({msToTime(fight.end_time - fight.start_time)})</td>\n                                        {Object.entries(tanks).map(([key, value]) => {\n                                            if (tanksPerFight[fight.id][key]) {\n                                                let fightLength = fight.end_time - fight.start_time;\n                                                let tankBuffInfo = buffUptime[fight.id][key];\n                                                let tankBuffUptime = tankBuffInfo ? tankBuffInfo.totalUptime / fightLength : 0;\n                                                let preBuff = tankBuffInfo ? tankBuffInfo.bands[0].startTime === fight.start_time ? true : false : false;\n                                                return (\n                                                    <>\n                                                    <td key={fight.id + \"_\" + key} className={\"center \" + (preBuff ? \"tick\" : \"cross\")}>{preBuff ? \"✔\" : \"✖\"}</td>\n                                                    <td className=\"right\">{asPercentage(tankBuffUptime)}</td>\n                                                    </>\n                                                )\n                                            }\n\n                                            return <td key={fight.id + \"_\" + key} colspan=\"2\">&nbsp;</td>\n                                        })}\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                    <div className=\"note\">The tick or cross indicates that they had the buff on fight start (on pull) and the percentage shows how much of the fight it was up for.</div>\n                </>\n            )\n        }\n    }\n}","import {Component} from \"react\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport {cooldownList} from \"../datastore\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./CooldownReport.css\";\n\nexport class CooldownReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            reportId: props.reportId,\n            startTime: props.startTime,\n            endTime: props.endTime,\n            characters: props.characters,\n            cooldownRows: [],\n            cooldowns: {},\n            //events: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        const { reportId, startTime, endTime, characters } = this.state;\n        if (!reportId)\n            return;\n\n        LogLoader.getBuffUptime(startTime, endTime, 24659)   // Zandalarian Hero Charm\n        .then(zhcResult => {\n\n            let zhcCounts = zhcResult.reduce((accum, current) => {\n                if (current.type === \"Shaman\") {\n                    accum[current.id] = current.bands.length;\n                }\n\n                return accum;\n            }, {})\n\n            return Promise.all(characters.map(character => LogLoader.getCharacterCastTable(startTime, endTime, character.id, character.name)))\n            .then(res => new Promise((resolve, _reject) => resolve(res.reduce((accum,current) => {\n                let cooldownRow = { id: current.id, name: current.name, total: 0 }\n                for (const entry of current.entries) {\n                    if (!cooldownList[entry.guid])\n                        continue;\n\n                    cooldownRow[entry.guid] = entry.total;\n                    cooldownRow.total += entry.total;\n                }\n                if (zhcCounts[current.id]) {\n                    cooldownRow[\"24659\"] = zhcCounts[current.id];\n                    cooldownRow.total += zhcCounts[current.id];\n                }\n\n                accum = [...accum, cooldownRow];\n\n                return accum;\n            }, []))))\n            .then(\n                (result) => {\n                    this.setState({\n                        //events: result,\n                        cooldownRows: result.sort((x,y) => y.total - x.total),\n                        cooldowns: Object.entries(cooldownList).sort(([xKey,xValue],[yKey,yValue]) => {\n                            let typeCompare = xValue.type.localeCompare(yValue.type);\n\n                            if (typeCompare !== 0)\n                                return typeCompare;\n\n                            return xValue.name.localeCompare(yValue.name);\n                        }).reduce((accum, [key,_value]) => {\n                            let cooldownFound = result.reduce((found, resultRow) => {\n                                if (resultRow[key]) {\n                                    return true;\n                                }\n\n                                return found;\n                            }, false);\n                            if (cooldownFound) {\n                                accum = [...accum, key];\n                            }\n\n                            return accum;\n                        }, []),\n                        isLoaded: true\n                    })\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error: error\n                    })\n                }\n            )\n        })\n        \n    }\n\n    render() {\n        const { error, isLoaded, cooldownRows, cooldowns} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h3>Cooldown Usage</h3>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>&nbsp;</td>\n                                {cooldowns.map(cooldown => \n                                    <td key={cooldown}><img className=\"spell_icon\" src={\"https://assets.rpglogs.com/img/warcraft/abilities/\" + cooldownList[cooldown].icon} alt={cooldownList[cooldown].name} data-tip={cooldownList[cooldown].name} /></td>\n                                )}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {cooldownRows.map((cooldownRow,row) =>\n                                <tr key={cooldownRow.id} className={\"Shaman \" + (row % 2 === 0 ? \"even\" : \"odd\")}>\n                                    <td className=\"shaman_name\">{cooldownRow.name}</td>\n                                    {cooldowns.map(cooldown => \n                                    <td className=\"shaman_cooldown\" key={cooldownRow.id + \"_\" + cooldown}>{cooldownRow[cooldown]}</td>\n                                    )}\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    <ReactTooltip />\n                </>\n            )\n        }\n    }\n}","import {Component} from \"react\";\n\nexport class TotemReport extends Component {\n    render() {\n        return (\n            <>\n                <h3>Totem Usage</h3>\n            </>\n        )\n    }\n}","import {Component} from \"react\";\nimport { withRouter } from \"react-router-dom\";\n//import {FightReport} from \"./FightReport\";\nimport {LogLoader} from \"../warcraftLogLoader\";\nimport { AncestralFortitudeReport } from \"./AncestralFortitudeReport\";\nimport { CooldownReport } from \"./CooldownReport\";\nimport { TotemReport } from \"./TotemReport\";\n\nclass ShamanReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            pets: {},\n            isLoaded: false,\n            //reportId: props.reportId,\n            startTime: null,\n            endTime: null\n        }\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        //const { reportId } = this.state;\n        if (!id)\n            return;\n\n        this.setState({reportId: id});\n\n        LogLoader.setReport(id);\n        LogLoader.getFights()\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    fights: result.fights,\n                    shamans: result.friendlies.reduce((acc, obj) => {\n                        if (obj.type === \"Shaman\") {\n                            acc.push({name: obj.name, id: obj.id});\n                        }\n\n                        return acc;\n                    }, []),\n                    startTime: result.fights[0].start_time,\n                    endTime: result.fights[result.fights.length-1].end_time\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            }\n\n        );\n    }\n\n    render() {\n        const { error, isLoaded, reportId, startTime, endTime, shamans} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n            return (\n                <>\n                    <h2>Shaman Report</h2>\n                    <TotemReport reportId={reportId} />\n                    <AncestralFortitudeReport reportId={reportId}/>\n                    <CooldownReport reportId={reportId} startTime={startTime} endTime={endTime} characters={shamans} />\n                </>\n            )\n        }\n    }\n}\n\nexport const ShamanReportWithRouter = withRouter(ShamanReport);","//import {createContext} from \"react\";\n\nexport const GroupKeys = {\n    Name: \"Name\",\n    Enchants: \"Enchants\",\n    Gems: \"Gems\",\n    Elixirs: \"Elixirs\",\n    Deaths: \"Deaths\",\n    ProtPotions: \"ProtPotions\",\n    Consumes: \"Consumes\",\n    Abilities: \"Abilities\",\n    Damage: \"Damage\",\n    DispelsInterrupts: \"DispelsInterrupts\",\n    Cooldowns: \"Cooldowns\",\n    Tank: \"Tank\",\n    Healer: \"Healer\",\n    Dps: \"Dps\",\n}\n\nexport const DataPoints = {\n    Name: \"Name\",\n    Enchants: \"Enchants\",\n    EnchantList: \"EnchantList\",\n    GemsMissing: \"GemsMissing\",\n    GemsCommon: \"GemsCommon\",\n    GemsUncommon: \"GemUncommon\",\n    GemsRare: \"GemsRare\",\n    GemsEpic: \"GemsEpic\",\n    GemsList: \"GemsList\",\n    Elixirs: \"Elixirs\",\n    ElixirsFlasks: \"ElixirsFlasks\",\n    ElixirsGuardian: \"ElixirsGuardian\",\n    ElixirsBattle: \"ElixirsBattle\",\n    ElixirsFood: \"ElixirsFood\",\n    ElixirsSeasonal: \"ElixirsSeasonal\",\n    ElixirsScrolls: \"ElixirsScrolls\",\n    ElixirsWeaponEnchants: \"ElixirsWeaponEnchants\",\n    Deaths: \"Deaths\",\n    ProtectionPotionsTotal: \"ProtectionPotionsTotal\",\n    ProtectionPotionsTotalAbsorbed: \"ProtectionPotionsTotalAbsorbed\",\n    ProtectionPotionsNature: \"ProtectionPotionsNature\",\n    ProtectionPotionsGreaterNature: \"ProtectionPotionsGreaterNature\",\n    ProtectionPotionsMajorNature: \"ProtectionPotionsMajorNature\",\n    ProtectionPotionsNatureAbsorbed: \"ProtectionPotionsNatureAbsorbed\",\n    ProtectionPotionsFire: \"ProtectionPotionsFire\",\n    ProtectionPotionsGreaterFire: \"ProtectionPotionsGreaterFire\",\n    ProtectionPotionsMajorFire: \"ProtectionPotionsMajorFire\",\n    ProtectionPotionsFireAbsorbed: \"ProtectionPotionsFireAbsorbed\",\n    ProtectionPotionsFrost: \"ProtectionPotionsFrost\",\n    ProtectionPotionsGreaterFrost: \"ProtectionPotionsGreaterFrost\",\n    ProtectionPotionsMajorFrost: \"ProtectionPotionsMajorFrost\",\n    ProtectionPotionsFrostAbsorbed: \"ProtectionPotionsFrostAbsorbed\",\n    ProtectionPotionsShadow: \"ProtectionPotionsShadow\",\n    ProtectionPotionsGreaterShadow: \"ProtectionPotionsGreaterShadow\",\n    ProtectionPotionsMajorShadow: \"ProtectionPotionsMajorShadow\",\n    ProtectionPotionsShadowAbsorbed: \"ProtectionPotionsShadowAbsorbed\",\n    ProtectionPotionsGreaterArcane: \"ProtectionPotionsGreaterArcane\",\n    ProtectionPotionsMajorArcane: \"ProtectionPotionsMajorArcane\",\n    ProtectionPotionsArcaneAbsorbed: \"ProtectionPotionsArcaneAbsorbed\",\n    ConsumesPotions: \"ConsumesPotions\",\n    ConsumesDrums: \"ConsumesDrums\",\n    ConsumesGems: \"ConsumesGems\",\n    ConsumesExplosives: \"ConsumesExplosives\",\n    ConsumesBandages: \"ConsumesBandages\",\n    ConsumesManaPots: \"ConsumesManaPots\",\n    ConsumesRunes: \"ConsumesRunes\",\n    ConsumesRejuvPots: \"ConsumesRejuvPots\",\n    ConsumesHealthPots: \"ConsumesHealthPots\",\n    ConsumesHealthStones: \"ConsumesHealthStones\",\n    ConsumesWhipperRootTuber: \"ConsumesWhipperRootTuber\",\n    ConsumesRagePotions: \"ConsumesRagePotions\",\n    ConsumesThistleTea: \"ConsumesThistleTea\",\n    ConsumesRestorationPots: \"ConsumesRestorationPots\",\n    ConsumesFreeActionPotion: \"ConsumesFreeActionPotion\",\n    ConsumesManaGem: \"ConsumesManaGem\",\n    ConsumesNightmareSeed: \"ConsumesNightmareSeed\",\n    ConsumesStoneshield: \"ConsumesStoneshield\",\n    ConsumesHeavyRuneclothBandage: \"ConsumesHeavyRuneclothBandage\",\n    ConsumesAntiVenom: \"ConsumesAntiVenom\",\n    ConsumesHolyWater: \"ConsumesHolyWater\",\n    ConsumesSapperCharge: \"ConsumesSapperCharge\",\n    ConsumesEzThro: \"ConsumesEzThro\",\n    ConsumesDenseDynamite: \"ConsumesDenseDynamite\",\n    ConsumesFelIronBombs: \"ConsumesFelIronBombs\",\n    ConsumesDrumsBattle: \"ConsumesDrumsBattle\",\n    ConsumesDrumsRestoration: \"ConsumesDrumsRestoration\",\n    ConsumesDrumsPanic: \"ConsumesDrumsPanic\",\n    ConsumesDrumsWar: \"ConsumesDrumsWar\",\n    ConsumesInsaneStrength: \"ConsumesInsaneStrength\",\n    ConsumesShrouding: \"ConsumesShrouding\",\n    ConsumesFelRegeneration: \"ConsumesFelRegeneration\",\n    ConsumesHeroic: \"ConsumesHeroic\",\n    ConsumesDestruction: \"ConsumesDestruction\",\n    ConsumesHaste: \"ConsumesHaste\",\n    ConsumesFelMana: \"ConsumesFelMana\",\n    ConsumesIronshield: \"ConsumesIronshield\",\n    DispelTotal: \"DispelTotal\",\n    DispelBoss: \"DispelBoss\",\n    DispelTrash: \"DispelTrash\",\n    DispelPoison: \"DispelPoison\",\n    DispelDisease: \"DispelDisease\",\n    DispelCurse: \"DispelCurse\",\n    DispelMagic: \"DispelMagic\",\n    DispelFrenzy: \"DispelFrenzy\",\n    DispelDruidCurePoison: \"DispelDruidCurePoison\",\n    DispelDruidAbolishPoison: \"DispelDruidAbolishPoison\",\n    DispelDruidRemoveCurse: \"DispelDruidRemoveCurse\",\n    DispelHunterTranqShot: \"DispelHunterTranqShot\",\n    DispelMageRemoveLesserCurse: \"DispelMageRemoveLesserCurse\",\n    DispelPaladinPurify: \"DispelPaladinPurify\",\n    DispelPaladinCleanse: \"DispelPaladinCleanse\",\n    DispelPriestDispelMagic: \"DispelPriestDispelMagic\",\n    DispelPriestCureDisease: \"DispelPriestCureDisease\",\n    DispelPriestAbolishDisease: \"DispelPriestAbolishDisease\",\n    DispelShamanPurge: \"DispelShamanPurge\",\n    DispelShamanCurePoison: \"DispelShamanCurePoison\",\n    DispelShamanCureDisease: \"DispelShamanCureDisease\",\n    DispelShamanPoisonCleansingTotem: \"DispelShamanPoisonCleansingTotem\",\n    DispelShamanDiseaseCleansingTotem: \"DispelShamanDiseaseCleansingTotem\",\n    DispelWarlockDevourMagic: \"DispelWarlockDevourMagic\",\n    InterruptTotal: \"InterruptTotal\",\n    InterruptDruidBash: \"InterruptDruidBash\",\n    InterruptDruidFeralCharge: \"InterruptDruidFeralCharge\",\n    InterruptMageCounterspell: \"InterruptMageCounterspell\",\n    InterruptPaladinHammerOfJustice: \"InterruptPaladinHammerOfJustice\",\n    InterruptPriestSilence: \"InterruptPriestSilence\",\n    InterruptRogueKick: \"InterruptRogueKick\",\n    InterruptShamanEarthShock: \"InterruptShamanEarthShock\",\n    InterruptWarriorPummel: \"InterruptWarriorPummel\",\n    InterruptCheapShot: \"InterruptCheapShot\",\n    InterruptWarlockSpellLock: \"InterruptWarlockSpellLock\",\n    InterruptHunterIntimidate: \"InterruptHunterIntimidate\",\n    InterruptWarstomp: \"InterruptWarstomp\",\n    Cooldowns: \"Cooldowns\",\n    CooldownsRacial: \"CooldownsRacial\",\n    CooldownsAbility: \"CooldownsAbility\",\n    CooldownsItems: \"CooldownsItems\",\n    DamageTakenHit: \"DamageTakenHit\",\n    DamageTakenCrit: \"DamageTakenCrit\",\n    DamageTakenCrushed: \"DamageTakenCrushed\",\n    DamageTakenBlocked: \"DamageTakenBlocked\",\n    DamageTakenMiss: \"DamageTakenMiss\",\n    DamageTakenDodge: \"DamageTakenDodge\",\n    DamageTakenParry: \"DamageTakenParry\",\n};\n\nexport const emptyData = {\n    [DataPoints.Name]: \" \",\n    [DataPoints.Enchants]: \" \",\n    [DataPoints.EnchantList]: \" \",\n    [DataPoints.GemsMissing]: \" \",\n    [DataPoints.GemsCommon]: \" \",\n    [DataPoints.GemsUncommon]: \" \",\n    [DataPoints.GemsRare]: \" \",\n    [DataPoints.GemsEpic]: \" \",\n    [DataPoints.GemsList]: [],\n    [DataPoints.Elixirs]: \" \",\n    [DataPoints.ElixirsFlasks]: [],\n    [DataPoints.ElixirsGuardian]: [],\n    [DataPoints.ElixirsBattle]: [],\n    [DataPoints.ElixirsFood]: [],\n    [DataPoints.ElixirsSeasonal]: [],\n    [DataPoints.ElixirsScrolls]: [],\n    [DataPoints.ElixirsWeaponEnchants]: [],\n    [DataPoints.Deaths]: \" \",\n    [DataPoints.ProtectionPotionsTotal]: \" \",\n    [DataPoints.ProtectionPotionsTotalAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsNature]: \" \",\n    [DataPoints.ProtectionPotionsGreaterNature]: \" \",\n    [DataPoints.ProtectionPotionsMajorNature]: \" \",\n    [DataPoints.ProtectionPotionsNatureAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsFire]: \" \",\n    [DataPoints.ProtectionPotionsGreaterFire]: \" \",\n    [DataPoints.ProtectionPotionsMajorFire]: \" \",\n    [DataPoints.ProtectionPotionsFireAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsFrost]: \" \",\n    [DataPoints.ProtectionPotionsGreaterFrost]: \" \",\n    [DataPoints.ProtectionPotionsMajorFrost]: \" \",\n    [DataPoints.ProtectionPotionsFrostAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsShadow]: \" \",\n    [DataPoints.ProtectionPotionsGreaterShadow]: \" \",\n    [DataPoints.ProtectionPotionsMajorShadow]: \" \",\n    [DataPoints.ProtectionPotionsShadowAbsorbed]: \" \",\n    [DataPoints.ProtectionPotionsGreaterArcane]: \" \",\n    [DataPoints.ProtectionPotionsMajorArcane]: \" \",\n    [DataPoints.ProtectionPotionsArcaneAbsorbed]: \" \",\n    [DataPoints.ConsumesPotions]: \" \",\n    [DataPoints.ConsumesDrums]: \" \",\n    [DataPoints.ConsumesGems]: \" \",\n    [DataPoints.ConsumesExplosives]: \" \",\n    [DataPoints.ConsumesBandages]: \" \",\n    [DataPoints.ConsumesManaPots]: \" \",\n    [DataPoints.ConsumesRunes]: \" \",\n    [DataPoints.ConsumesRejuvPots]: \" \",\n    [DataPoints.ConsumesHealthPots]: \" \",\n    [DataPoints.ConsumesHealthStones]: \" \",\n    [DataPoints.ConsumesRagePotions]: \" \",\n    [DataPoints.ConsumesThistleTea]: \" \",\n    [DataPoints.ConsumesRestorationPots]: \" \",\n    [DataPoints.ConsumesElixirOfPoisonResistance]: \" \",\n    [DataPoints.ConsumesFreeActionPotion]: \" \",\n    [DataPoints.ConsumesManaGem]: \" \",\n    [DataPoints.ConsumesNightmareSeed]: \" \",\n    [DataPoints.ConsumesStoneshield]: \" \",\n    [DataPoints.ConsumesOilOfImmolation]: \" \",\n    [DataPoints.ConsumesHeavyRuneclothBandage]: \" \",\n    [DataPoints.ConsumesAntiVenom]: \" \",\n    [DataPoints.ConsumesHolyWater]: \" \",\n    [DataPoints.ConsumesSapperCharge]: \" \",\n    [DataPoints.ConsumesEzThro]: \" \",\n    [DataPoints.ConsumesFelIronBombs]: \" \",\n    [DataPoints.ConsumesDenseDynamite]: \" \",\n    [DataPoints.ConsumesDrumsBattle]: \" \",\n    [DataPoints.ConsumesDrumsRestoration]: \" \",\n    [DataPoints.ConsumesDrumsPanic]: \" \",\n    [DataPoints.ConsumesDrumsWar]: \" \",\n    [DataPoints.ConsumesInsaneStrength]: \" \",\n    [DataPoints.ConsumesShrouding]: \" \",\n    [DataPoints.ConsumesFelRegeneration]: \" \",\n    [DataPoints.ConsumesHeroic]: \" \",\n    [DataPoints.ConsumesDestruction]: \" \",\n    [DataPoints.ConsumesHaste]: \" \",\n    [DataPoints.ConsumesFelMana]: \" \",\n    [DataPoints.ConsumesIronshield]: \" \",\n    [DataPoints.DispelTotal]: \" \",\n    [DataPoints.DispelBoss]: \" \",\n    [DataPoints.DispelTrash]: \" \",\n    [DataPoints.DispelPoison]: \" \",\n    [DataPoints.DispelDisease]: \" \",\n    [DataPoints.DispelCurse]: \" \",\n    [DataPoints.DispelMagic]: \" \",\n    [DataPoints.DispelFrenzy]: \" \",\n    [DataPoints.DispelDruidCurePoison]: \" \",\n    [DataPoints.DispelDruidAbolishPoison]: \" \",\n    [DataPoints.DispelDruidRemoveCurse]: \" \",\n    [DataPoints.DispelHunterTranqShot]: \" \",\n    [DataPoints.DispelMageRemoveLesserCurse]: \" \",\n    [DataPoints.DispelPaladinPurify]: \" \",\n    [DataPoints.DispelPaladinCleanse]: \" \",\n    [DataPoints.DispelPriestDispelMagic]: \" \",\n    [DataPoints.DispelPriestCureDisease]: \" \",\n    [DataPoints.DispelPriestAbolishDisease]: \" \",\n    [DataPoints.DispelShamanPurge]: \" \",\n    [DataPoints.DispelShamanCurePoison]: \" \",\n    [DataPoints.DispelShamanCureDisease]: \" \",\n    [DataPoints.DispelShamanPoisonCleansingTotem]: \" \",\n    [DataPoints.DispelShamanDiseaseCleansingTotem]: \" \",\n    [DataPoints.DispelWarlockDevourMagic]: \" \",\n    [DataPoints.InterruptTotal]: \" \",\n    [DataPoints.InterruptDruidBash]: \" \",\n    [DataPoints.InterruptDruidFeralCharge]: \" \",\n    [DataPoints.InterruptMageCounterspell]: \" \",\n    [DataPoints.InterruptPaladinHammerOfJustice]: \" \",\n    [DataPoints.InterruptPriestSilence]: \" \",\n    [DataPoints.InterruptRogueKick]: \" \",\n    [DataPoints.InterruptShamanEarthShock]: \" \",\n    [DataPoints.InterruptWarriorPummel]: \" \",\n    [DataPoints.InterruptCheapShot]: \" \",\n    [DataPoints.InterruptWarlockSpellLock]: \" \",\n    [DataPoints.InterruptHunterIntimidate]: \" \",\n    [DataPoints.InterruptWarstomp]: \" \",\n    [DataPoints.Cooldowns]: [],\n    [DataPoints.CooldownsRacial]: [],\n    [DataPoints.CooldownsAbility]: [],\n    [DataPoints.CooldownsItems]: [],\n    [DataPoints.DamageTakenHit]: \" \",\n    [DataPoints.DamageTakenCrushed]: \" \",\n    [DataPoints.DamageTakenCrit]: \" \",\n    [DataPoints.DamageTakenBlocked]: \" \",\n    [DataPoints.DamageTakenParry]: \" \",\n    [DataPoints.DamageTakenDodge]: \" \",\n    [DataPoints.DamageTakenMiss]: \" \",\n}\n","import {Component, Children, isValidElement, cloneElement} from \"react\";\nimport {protectionPotionEnum, rarity, enchants} from \"../data\";\nimport {battleElixirBuffs, cooldownList, flaskBuffs, foodBuffs, guardianElixirBuffs, scrollBuffs, seasonBuffs, tempWeaponEnchants} from \"../datastore\";\nimport {DataPoints, emptyData} from \"./GridContexts\";\nimport {sumNonNull} from \"../utils\";\n\nexport class GridRow extends Component {\n    constructor(props) {\n        super(props);\n\n        this._logLoader = props.logLoader;\n        let report = this._logLoader.getResults();\n\n        this.state = {\n            id: props.character.id,\n            classType: props.character.type,\n            raidTime: report.endTime - report.startTime,\n            isLoaded: false,\n            error: null,\n            Data: this._flattenCharacterData(null),\n        }\n    }\n\n    componentDidMount() {\n        \n        this._logLoader.loadCharacterDetails(this.state.id)\n        .then((data) => {\n            let character = data.getCharacter(this.state.id, this.props.fightId);\n\n            this.setState({\n                isLoaded: true,\n                Data: this._flattenCharacterData(character),\n            });\n        })\n        .catch((error) => {\n            this.setState({\n                isLoaded: true,\n                error: error\n            })\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.fightId !== prevProps.fightId) {\n            let character = this._logLoader.getCharacter(this.state.id, this.props.fightId);\n\n            this.setState({\n                isLoaded: true,\n                Data: this._flattenCharacterData(character),\n            });\n        }\n    }\n\n    _flattenCharacterData(character) {\n        let characterData = {...emptyData, name: this.props.character.name};\n\n        if (!character) {\n            return characterData;\n        }\n\n        characterData[DataPoints.Name] = character.name;\n        characterData[DataPoints.Deaths] = this._getDeathCount(character);\n\n        this._getEnchantInfo(character, characterData);\n\n        characterData[DataPoints.GemsMissing] = this._getMissingGemCount(character);\n        characterData[DataPoints.GemsCommon] = this._getGemCount(character, rarity.Common);\n        characterData[DataPoints.GemsUncommon] = this._getGemCount(character, rarity.Uncommon);\n        characterData[DataPoints.GemsRare] = this._getGemCount(character, rarity.Rare);\n        characterData[DataPoints.GemsEpic] = this._getGemCount(character, rarity.Epic);\n        characterData[DataPoints.GemsList] = this._getGemList(character);\n\n        characterData[DataPoints.ElixirsFood] = this._getBuffs(character, foodBuffs);\n        characterData[DataPoints.ElixirsFlasks] = this._getBuffs(character, flaskBuffs);\n        characterData[DataPoints.ElixirsBattle] = this._getBuffs(character, battleElixirBuffs);\n        characterData[DataPoints.ElixirsGuardian] = this._getBuffs(character, guardianElixirBuffs);\n        characterData[DataPoints.ElixirsSeasonal] = this._getBuffs(character, seasonBuffs);\n        characterData[DataPoints.ElixirsScrolls] = this._getBuffs(character, scrollBuffs);\n        characterData[DataPoints.ElixirsWeaponEnchants] = this._getWeaponImbue(character, tempWeaponEnchants);\n\n        characterData[DataPoints.ProtectionPotionsGreaterArcane] = this._getProtectionPotionCount(character, protectionPotionEnum.GAPP);\n        characterData[DataPoints.ProtectionPotionsMajorArcane] = this._getProtectionPotionCount(character, protectionPotionEnum.MAPP);\n        characterData[DataPoints.ProtectionPotionsArcaneAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GAPP, protectionPotionEnum.MAPP);\n        characterData[DataPoints.ProtectionPotionsFire] = this._getProtectionPotionCount(character, protectionPotionEnum.FPP);\n        characterData[DataPoints.ProtectionPotionsGreaterFire] = this._getProtectionPotionCount(character, protectionPotionEnum.GFPP);\n        characterData[DataPoints.ProtectionPotionsMajorFire] = this._getProtectionPotionCount(character, protectionPotionEnum.MFPP);\n        characterData[DataPoints.ProtectionPotionsFireAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GFPP, protectionPotionEnum.FPP, protectionPotionEnum.MFPP);\n        characterData[DataPoints.ProtectionPotionsFrost] = this._getProtectionPotionCount(character, protectionPotionEnum.FrPP);\n        characterData[DataPoints.ProtectionPotionsGreaterFrost] = this._getProtectionPotionCount(character, protectionPotionEnum.GFrPP);\n        characterData[DataPoints.ProtectionPotionsMajorFrost] = this._getProtectionPotionCount(character, protectionPotionEnum.MFrPP);\n        characterData[DataPoints.ProtectionPotionsFrostAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GFrPP, protectionPotionEnum.FrPP, protectionPotionEnum.MFrPP);\n        characterData[DataPoints.ProtectionPotionsNature] = this._getProtectionPotionCount(character, protectionPotionEnum.NPP);\n        characterData[DataPoints.ProtectionPotionsGreaterNature] = this._getProtectionPotionCount(character, protectionPotionEnum.GNPP);\n        characterData[DataPoints.ProtectionPotionsMajorNature] = this._getProtectionPotionCount(character, protectionPotionEnum.MNPP);\n        characterData[DataPoints.ProtectionPotionsNatureAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GNPP, protectionPotionEnum.NPP, protectionPotionEnum.MNPP);\n        characterData[DataPoints.ProtectionPotionsShadow] = this._getProtectionPotionCount(character, protectionPotionEnum.SPP);\n        characterData[DataPoints.ProtectionPotionsGreaterShadow] = this._getProtectionPotionCount(character, protectionPotionEnum.GSPP);\n        characterData[DataPoints.ProtectionPotionsMajorShadow] = this._getProtectionPotionCount(character, protectionPotionEnum.MSPP);\n        characterData[DataPoints.ProtectionPotionsShadowAbsorbed] = this._getProtectionPotionAbsorb(character, protectionPotionEnum.GSPP, protectionPotionEnum.SPP, protectionPotionEnum.MSPP);\n\n        characterData[DataPoints.ProtectionPotionsTotal] = sumNonNull(characterData[DataPoints.ProtectionPotionsGreaterArcane],\n            characterData[DataPoints.ProtectionPotionsMajorArcane],\n            characterData[DataPoints.ProtectionPotionsFire],\n            characterData[DataPoints.ProtectionPotionsGreaterFire],\n            characterData[DataPoints.ProtectionPotionsMajorFire],\n            characterData[DataPoints.ProtectionPotionsFrost],\n            characterData[DataPoints.ProtectionPotionsGreaterFrost],\n            characterData[DataPoints.ProtectionPotionsMajorFrost],\n            characterData[DataPoints.ProtectionPotionsNature],\n            characterData[DataPoints.ProtectionPotionsGreaterNature],\n            characterData[DataPoints.ProtectionPotionsMajorNature],\n            characterData[DataPoints.ProtectionPotionsShadow],\n            characterData[DataPoints.ProtectionPotionsGreaterShadow],\n            characterData[DataPoints.ProtectionPotionsMajorShadow]);\n\n        characterData[DataPoints.ProtectionPotionsTotalAbsorbed] = sumNonNull(characterData[DataPoints.ProtectionPotionsArcaneAbsorbed],\n            characterData[DataPoints.ProtectionPotionsFireAbsorbed],\n            characterData[DataPoints.ProtectionPotionsFrostAbsorbed],\n            characterData[DataPoints.ProtectionPotionsNatureAbsorbed],\n            characterData[DataPoints.ProtectionPotionsShadowAbsorbed]);\n\n        characterData[DataPoints.ConsumesManaPots] = this._getCastCount(character, 17531, 28499, 41618, 41617);\n        characterData[DataPoints.ConsumesRejuvPots] = this._getCastCount(character, 22729, 28517, 45051);\n        characterData[DataPoints.ConsumesHealthPots] = this._getCastCount(character, 17534, 28495, 41620, 41619);\n        characterData[DataPoints.ConsumesFreeActionPotion] = this._getCastCount(character, 6615, 24364);\n        characterData[DataPoints.ConsumesRestorationPots] = this._getCastCount(character, 11359, 17550);\n        characterData[DataPoints.ConsumesRagePotions] = this._getCastCount(character, 6613, 17528);\n        characterData[DataPoints.ConsumesStoneshield] = this._getCastCount(character, 17540);\n        characterData[DataPoints.ConsumesInsaneStrength] = this._getCastCount(character, 28494);\n        characterData[DataPoints.ConsumesShrouding] = this._getCastCount(character, 28548);\n        characterData[DataPoints.ConsumesFelRegeneration] = this._getCastCount(character, 38908);\n        characterData[DataPoints.ConsumesHeroic] = this._getCastCount(character, 28506);\n        characterData[DataPoints.ConsumesDestruction] = this._getCastCount(character, 28508); // Check for buff on combat start\n        characterData[DataPoints.ConsumesHaste] = this._getCastCount(character, 28507); // Check for buff on combat start\n        characterData[DataPoints.ConsumesFelMana] = this._getCastCount(character, 38929);\n        characterData[DataPoints.ConsumesIronshield] = this._getCastCount(character, 17540, 28515);\n\n        characterData[DataPoints.ConsumesRunes] = this._getCastCount(character, 16666, 27869);\n        characterData[DataPoints.ConsumesHealthStones] = this._getCastCount(character, 27235, 27236, 27237);\n        characterData[DataPoints.ConsumesWhipperRootTuber] = this._getCastCount(character, 15700);\n        characterData[DataPoints.ConsumesThistleTea] = this._getCastCount(character, 9512);\n        characterData[DataPoints.ConsumesManaGem] = this._getCastCount(character, 10058, 10057, 10052, 5405, 27103);\n        characterData[DataPoints.ConsumesNightmareSeed] = this._getCastCount(character, 28726);\n\n        characterData[DataPoints.ConsumesDrumsBattle] = this._getCastCount(character, 35476, 351355);\n        characterData[DataPoints.ConsumesDrumsWar] = this._getCastCount(character, 35475, 351360);\n        characterData[DataPoints.ConsumesDrumsRestoration] = this._getCastCount(character, 35478, 351358);\n        characterData[DataPoints.ConsumesDrumsPanic] = this._getCastCount(character, 35474, 351357);\n\n        characterData[DataPoints.ConsumesHolyWater] = this._getCastCount(character, 17291);\n        characterData[DataPoints.ConsumesSapperCharge] = this._getCastCount(character, 13241, 30486);\n        characterData[DataPoints.ConsumesDenseDynamite] = this._getCastCount(character, 23063);\n        characterData[DataPoints.ConsumesEzThro] = this._getCastCount(character, 23000);\n        characterData[DataPoints.ConsumesFelIronBombs] = this._getCastCount(character, 30216);\n\n        characterData[DataPoints.ConsumesHeavyRuneclothBandage] = this._getCastCount(character, 18610, 27030, 27031);\n        characterData[DataPoints.ConsumesAntiVenom] = this._getCastCount(character, 23786);\n\n        characterData[DataPoints.ConsumesPotions] = sumNonNull(characterData[DataPoints.ConsumesManaPots],\n            characterData[DataPoints.ConsumesRejuvPots],\n            characterData[DataPoints.ConsumesHealthPots],\n            characterData[DataPoints.ConsumesFreeActionPotion],\n            characterData[DataPoints.ConsumesRestorationPots],\n            characterData[DataPoints.ConsumesRagePotions],\n            characterData[DataPoints.ConsumesInsaneStrength],\n            characterData[DataPoints.ConsumesShrouding],\n            characterData[DataPoints.ConsumesFelRegeneration],\n            characterData[DataPoints.ConsumesHeroic],\n            characterData[DataPoints.ConsumesDestruction],\n            characterData[DataPoints.ConsumesHaste],\n            characterData[DataPoints.ConsumesFelMana],\n            characterData[DataPoints.ConsumesIronshield]);\n\n        characterData[DataPoints.ConsumesGems] = sumNonNull(characterData[DataPoints.ConsumesRunes],\n            characterData[DataPoints.ConsumesHealthStones],\n            characterData[DataPoints.ConsumesWhipperRootTuber],\n            characterData[DataPoints.ConsumesThistleTea],\n            characterData[DataPoints.ConsumesManaGem],\n            characterData[DataPoints.ConsumesNightmareSeed]);\n\n        characterData[DataPoints.ConsumesDrums] = sumNonNull(characterData[DataPoints.ConsumesDrumsBattle],\n            characterData[DataPoints.ConsumesDrumsWar],\n            characterData[DataPoints.ConsumesDrumsRestoration],\n            characterData[DataPoints.ConsumesDrumsPanic]);\n\n        characterData[DataPoints.ConsumesExplosives] = sumNonNull(characterData[DataPoints.ConsumesHolyWater],\n            characterData[DataPoints.ConsumesSapperCharge],\n            characterData[DataPoints.ConsumesDenseDynamite],\n            characterData[DataPoints.ConsumesFelIronBombs],\n            characterData[DataPoints.ConsumesEzThro]);\n\n        characterData[DataPoints.ConsumesBandages] = sumNonNull(characterData[DataPoints.ConsumesHeavyRuneclothBandage],\n            characterData[DataPoints.ConsumesAntiVenom]);\n\n        characterData[DataPoints.DispelDruidCurePoison] = this._getCastCount(character, 8946);\n        characterData[DataPoints.DispelDruidAbolishPoison] = this._getCastCount(character, 2893);\n        characterData[DataPoints.DispelDruidRemoveCurse] = this._getCastCount(character, 2782);\n        characterData[DataPoints.DispelHunterTranqShot] = this._getCastCount(character, 19801);\n        characterData[DataPoints.DispelMageRemoveLesserCurse] = this._getCastCount(character, 475);\n        characterData[DataPoints.DispelPaladinPurify] = this._getCastCount(character, 1152);\n        characterData[DataPoints.DispelPaladinCleanse] = this._getCastCount(character, 4987);\n        characterData[DataPoints.DispelPriestDispelMagic] = this._getCastCount(character, 988, 527);\n        characterData[DataPoints.DispelPriestCureDisease] = this._getCastCount(character, 528);\n        characterData[DataPoints.DispelPriestAbolishDisease] = this._getCastCount(character, 552);\n        characterData[DataPoints.DispelShamanPurge] = this._getCastCount(character, 8012, 370);\n        characterData[DataPoints.DispelShamanCurePoison] = this._getCastCount(character, 526);\n        characterData[DataPoints.DispelShamanCureDisease] = this._getCastCount(character, 2870);\n        characterData[DataPoints.DispelShamanPoisonCleansingTotem] = this._getCastCount(character, 8166);\n        characterData[DataPoints.DispelShamanDiseaseCleansingTotem] = this._getCastCount(character, 8170);\n        characterData[DataPoints.DispelWarlockDevourMagic] = this._getCastCount(character, 19505, 19731, 19734, 19736, 27276, 27277);\n\n        characterData[DataPoints.DispelPoison] = sumNonNull(characterData[DataPoints.DispelDruidCurePoison],\n            characterData[DataPoints.DispelDruidAbolishPoison],\n            characterData[DataPoints.DispelShamanCurePoison],\n            characterData[DataPoints.DispelShamanPoisonCleansingTotem]);\n\n        characterData[DataPoints.DispelDisease] = sumNonNull(characterData[DataPoints.DispelPriestCureDisease],\n            characterData[DataPoints.DispelPriestAbolishDisease],\n            characterData[DataPoints.DispelShamanCureDisease],\n            characterData[DataPoints.DispelShamanDiseaseCleansingTotem]);\n\n        characterData[DataPoints.DispelCurse] = sumNonNull(characterData[DataPoints.DispelDruidRemoveCurse],\n            characterData[DataPoints.DispelMageRemoveLesserCurse]);\n\n        characterData[DataPoints.DispelMagic] = sumNonNull(characterData[DataPoints.DispelPriestDispelMagic],\n            characterData[DataPoints.DispelShamanPurge],\n            characterData[DataPoints.DispelPaladinCleanse],\n            characterData[DataPoints.DispelWarlockDevourMagic]);\n\n        characterData[DataPoints.DispelFrenzy] = sumNonNull(characterData[DataPoints.DispelHunterTranqShot]);\n\n        characterData[DataPoints.DispelBoss] = this._getBossCastCount(character, 8946, 2893, 2782, 19801, 475, 1152, 4987, 988, 527, 528, 552, 8012, 370, 526, 2870, 8166, 8170, 19505, 19731, 19734, 19736, 27276, 27277);\n        characterData[DataPoints.DispelTrash] = this._getTrashCastCount(character, 8946, 2893, 2782, 19801, 475, 1152, 4987, 988, 527, 528, 552, 8012, 370, 526, 2870, 8166, 8170, 19505, 19731, 19734, 19736, 27276, 27277);\n\n        characterData[DataPoints.DispelTotal] = sumNonNull(characterData[DataPoints.DispelPoison],\n            characterData[DataPoints.DispelDisease],\n            characterData[DataPoints.DispelCurse],\n            characterData[DataPoints.DispelMagic],\n            characterData[DataPoints.DispelFrenzy]);\n\n        characterData[DataPoints.InterruptDruidBash] = this._getInterruptCount(character, 8983);\n        characterData[DataPoints.InterruptDruidFeralCharge] = this._getInterruptCount(character, 19675);\n        characterData[DataPoints.InterruptMageCounterspell] = this._getInterruptCount(character, 2139);\n        characterData[DataPoints.InterruptPaladinHammerOfJustice] = this._getInterruptCount(character, 10308);\n        characterData[DataPoints.InterruptPriestSilence] = this._getInterruptCount(character, 15487);\n        characterData[DataPoints.InterruptRogueKick] = this._getInterruptCount(character, 1769, 1768, 1767, 1766, 38768);\n        characterData[DataPoints.InterruptCheapShot] = this._getInterruptCount(character, 1833);\n        characterData[DataPoints.InterruptShamanEarthShock] = this._getInterruptCount(character, 10414, 8042, 8044, 8045, 8046, 10412, 10413, 25454);\n        characterData[DataPoints.InterruptWarriorPummel] = this._getInterruptCount(character, 6552, 6554);\n        characterData[DataPoints.InterruptWarlockSpellLock] = this._getInterruptCount(character, 19647);\n        characterData[DataPoints.InterruptHunterIntimidate] = this._getInterruptCount(character, 24394);\n        characterData[DataPoints.InterruptWarstomp] = this._getInterruptCount(character, 20549);\n\n        characterData[DataPoints.InterruptTotal] = sumNonNull(characterData[DataPoints.InterruptDruidBash],\n            characterData[DataPoints.InterruptDruidFeralCharge],\n            characterData[DataPoints.InterruptMageCounterspell],\n            characterData[DataPoints.InterruptPaladinHammerOfJustice],\n            characterData[DataPoints.InterruptPriestSilence],\n            characterData[DataPoints.InterruptRogueKick],\n            characterData[DataPoints.InterruptCheapShot],\n            characterData[DataPoints.InterruptShamanEarthShock],\n            characterData[DataPoints.InterruptWarlockSpellLock],\n            characterData[DataPoints.InterruptHunterIntimidate],\n            characterData[DataPoints.InterruptWarstomp],\n            characterData[DataPoints.InterruptWarriorPummel]);\n\n        characterData[DataPoints.Cooldowns] = this._getCooldownList(character);\n        characterData[DataPoints.CooldownsRacial] = this._getCooldownList(character, \"Racial\");\n        characterData[DataPoints.CooldownsAbility] = this._getCooldownList(character, \"Ability\");\n        characterData[DataPoints.CooldownsItems] = this._getCooldownList(character, \"Trinket\");\n\n        this._getTankStats(character, characterData);\n        \n        this.props.onDataUpdate(characterData);\n\n        return characterData;\n    }\n\n    _getBuffs(character, options) {\n        const {buffs} = character;\n\n        if (!buffs) {\n            return [];\n        }\n\n        let activeBuffs = [];\n        for (let i = 0; i < options.length; ++i) {\n            if (buffs[options[i].id]) {\n                activeBuffs.push(options[i]);\n            }\n        }\n\n        return activeBuffs;\n    }\n\n    _getWeaponImbue(character, options) {\n        const {weaponEnchant, offhandEnchant} = character;\n\n        if (!weaponEnchant) {\n            return [];\n        }\n\n        let activeBuffs = [];\n        for (let i = 0; i < options.length; ++i) {\n            if (weaponEnchant.id === options[i].id) {\n                activeBuffs.push(options[i]);\n            }\n            if (offhandEnchant.id === options[i].id) {\n                activeBuffs.push({...options[i], name: options[i].name + ' (OH)'});\n            }\n            \n        }\n\n        return activeBuffs;\n    }\n\n    _getMissingGemCount(character) {\n        const {gems} = character;\n\n        if (!gems) {\n            return null;\n        }\n\n        return gems[0].count;\n    }\n\n    _getGemCount(character, rarity) {\n        const {gems} = character;\n\n        if (!gems) {\n            return null;\n        }\n\n        let gemList = Object.values(gems);\n\n        return gemList.reduce((gemCount, gem) => {\n\n            if (gem.rarity === rarity) {\n                gemCount += gem.count;\n            }\n\n            return gemCount;\n        }, 0)\n\n    }\n\n    _getGemList(character) {\n        const {gems} = character;\n\n        if (!gems) {\n            return [];\n        }\n\n        let gemList = Object.values(gems).filter(x => x.id !== 0);\n\n        return gemList.reduce((gemIcons, gem) => {\n\n            gemIcons.push({\n                id: gem.id,\n                itemId: gem.id,\n                name: gem.count + \" x \" + gem.label + \" (\" + gem.description + \")\",\n                icon: gem.icon,\n                count: gem.count,\n            })\n\n            return gemIcons;\n        }, []);\n    }\n\n    _getCooldownList(character, type = null) {\n        const {casts} = character;\n\n        if (!casts) {\n            return [];\n        }\n\n        let cooldowns = casts.reduce((cds, cast) => {\n            let cooldownInfo = cooldownList[cast.ability.guid];\n            if (cooldownInfo && (type == null || type === cooldownInfo.type)) {\n                if (cds[cast.ability.guid]) {\n                    cds[cast.ability.guid].count++;\n                }\n                else {\n                    cds[cast.ability.guid] = {\n                        id: cast.ability.guid,\n                        itemId: cooldownInfo.itemId,\n                        spellId: cast.ability.guid,\n                        name: cooldownInfo.name,\n                        icon: cooldownInfo.icon,\n                        count: 1\n                    }\n                }\n            }\n\n            return cds;\n        }, {});\n\n        return Object.values(cooldowns);\n    }\n\n    _getProtectionPotionCount(character, spellId) {\n        const {casts, protectionPotions, fights} = character;\n\n        let count = 0;\n        let countByFight = {};\n\n        if (casts) {\n            for (let i = 0; i < casts.length; ++i) {\n                let cast = casts[i];\n                if (cast.ability.guid === spellId) {\n                    if (!countByFight[cast.fight]) {\n                        countByFight[cast.fight] = {\n                            count: 1,\n                            firstCast: cast.timestamp,\n                        };\n                    }\n                    else {\n                        countByFight[cast.fight].count++;\n                    }\n                }\n            }\n        }\n\n        if (fights) {\n            for (let i = 0; i < fights.length; ++i) {\n                let fight = fights[i];\n                let protectionPotion = protectionPotions[spellId] || null;\n\n                if (countByFight[fight.id]) {\n                    count += countByFight[fight.id].count;\n\n                    if (protectionPotion !== null && protectionPotion.firstAbsorb[fight.id]) {\n                        if (protectionPotion.firstAbsorb[fight.id] < countByFight[fight.id].firstCast) {\n                            count++;\n                        }\n                    }\n                }\n                else {\n                    if (protectionPotion !== null && protectionPotion.firstAbsorb[fight.id]) {\n                        count++;\n                    }\n                }\n            }\n        }\n\n        return count;\n    }\n\n    _getProtectionPotionAbsorb(character, spellId1, spellId2) {\n        const {protectionPotions} = character;\n\n        let absorbed = 0;\n\n        absorbed += (protectionPotions[spellId1]?.amount || 0);\n        absorbed += (protectionPotions[spellId2]?.amount || 0);\n\n        return absorbed;\n    }\n\n    _getDeathCount(character) {\n        const {deaths} = character;\n\n        return deaths?.length;\n    }\n\n    _getBossCastCount(character, ...spellIds) {\n        return this._getRestrictedCastCount(character, \"boss\", spellIds);\n    }\n\n    _getTrashCastCount(character, ...spellIds) {\n        return this._getRestrictedCastCount(character, \"trash\", spellIds);\n    }\n\n    _getInterruptCount(character, ...spellIds) {\n        const {interrupts} = character;\n\n        if (!interrupts) {\n            return 0;\n        }\n\n        let castCount = 0;\n        for (let i = 0; i < interrupts.length; ++i) {\n            let cast = interrupts[i];\n            if (spellIds.includes(cast.ability.guid)) {\n                castCount++;\n            }\n        }\n\n        return castCount;\n    }\n\n    _getRestrictedCastCount(character, fightType, spellIds) {\n        const {casts} = character;\n\n        if (!casts) {\n            return 0;\n        }\n\n        let castCount = 0;\n        for (let i = 0; i < casts.length; ++i) {\n            let cast = casts[i];\n            if ((fightType == null || cast.fightType === fightType) && cast.type === \"cast\" && spellIds.includes(cast.ability.guid)) {\n                castCount++;\n            }\n        }\n\n        return castCount;\n    }\n\n    _getCastCount(character, ...spellIds) {\n        return this._getRestrictedCastCount(character, null, spellIds);\n    }\n\n    _getDamageDone(character, ...spellIds) {\n        const {damageTaken} = character;\n\n        let damageTakenArray = Object.values(damageTaken);\n\n        let damageAmount = 0;\n        for (let i = 0; i < damageTakenArray.length; ++i) {\n            let damage = damageTakenArray[i];\n            if (spellIds.includes(damage.guid)) {\n                damageAmount += damage.total;\n            }\n        }\n\n        return damageAmount;\n    }\n\n    _addIfNotNull(characterData, properyName, propertyLabel, table) {\n        if (characterData[properyName]) {\n            table.push({name: propertyLabel, value: characterData[properyName]});\n        }\n    }\n    _getDamageTakenTable(characterData) {\n        let damageTakenTable = [];\n\n        this._addIfNotNull(characterData, DataPoints.DamageWhirlwind, \"Whirlwind\", damageTakenTable);\n\n        this._addIfNotNull(characterData, DataPoints.DamageRainOfFire, \"Rain of Fire\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFireShield, \"Fire Shield\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFlames, \"Flames\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageCleave, \"Cleave\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageBlizzard, \"Blizzard\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageExplode, \"Explode\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageImpale, \"Impale\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageBomb, \"Bomb\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageThunderclap, \"Thunderclap\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageShadowStorm, \"Shadow Storm\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageDarkGlare, \"Dark Glare\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFalling, \"Falling\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageVoidZone, \"Void Zone\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamagePoisonCloud, \"Poison Cloud\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageFrostBreath, \"Frost Breath\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageEruption, \"Eruption\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageBroodPowerBronze, \"Brood Power Bronze\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageVoidBlast, \"Void Blast\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageTailSweep, \"Tail Sweep\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamagePositiveCharge, \"Positive Charge\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageNegativeCharge, \"Negative Charge\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageDisruptingShout, \"Disrupting Shout\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageChill, \"Chill\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageDarkBlast, \"Dark Blast\", damageTakenTable);\n        this._addIfNotNull(characterData,DataPoints.DamageWailOfSouls, \"wail of Souls\", damageTakenTable);\n\n        return damageTakenTable;\n    }\n\n    _getTankStats(character, characterData) {\n        let meleeDamage = [];\n        Object.values(character.damageTaken).forEach(value => {\n            if (value.length > 0 && value[0].ability.type === 1) {\n                meleeDamage = [...meleeDamage,...value];\n            }\n        });\n        if (meleeDamage.length === 0)\n            return;\n\n        let totalHits = meleeDamage.length;\n        const hitMap = {\n            \"0\": DataPoints.DamageTakenMiss,\n            \"1\": DataPoints.DamageTakenHit,\n            \"2\": DataPoints.DamageTakenCrit,\n            \"4\": DataPoints.DamageTakenBlocked,\n            \"7\": DataPoints.DamageTakenDodge,\n            \"8\": DataPoints.DamageTakenParry,\n            \"15\": DataPoints.DamageTakenCrushed,\n        };\n\n        let breakdown = meleeDamage.reduce((accum, obj) => {\n            let hitType = obj.hitType.toString();\n            if (!accum[hitType]) {\n                accum[hitType] = {\n                    type: hitType,\n                    count: 1,\n                }\n            }\n            else {\n                accum[hitType].count += 1;\n            }\n\n            return accum;\n        }, {})\n\n        Object.values(breakdown).forEach(hit => {\n            let hitType = hitMap[hit.type];\n            if (!hitType)\n                return;\n\n            characterData[hitType] = hit.count / totalHits;\n        });\n    }\n\n    _getEnchantInfo(character, characterData) {\n        let enchantList = [];\n\n        const slotToIconMapping = {\n            0: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_head.jpg\",\n            1: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_neck.jpg\",\n            2: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_shoulder.jpg\",\n            3: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_shirt.jpg\",\n            4: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_chest.jpg\",\n            5: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_waist.jpg\",\n            6: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_legs.jpg\",\n            7: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_feet.jpg\",\n            8: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_wrists.jpg\",\n            9: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_hands.jpg\",\n            10: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_finger.jpg\",\n            11: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_finger.jpg\",\n            12: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_trinket.jpg\",\n            13: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_trinket.jpg\",\n            14: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_chest.jpg\",\n            15: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_mainhand.jpg\",\n            16: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_offhand.jpg\",\n            17: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_ranged.jpg\",\n            19: \"https://wow.zamimg.com/images/wow/icons/large/inventoryslot_tabard.jpg\",\n        }\n\n        let enchantScore = character.enchants.reduce((accum, enchant) => {\n            let enchantIcon = {\n                id: enchant.gearId,\n                name: enchant.name,\n                icon_url: slotToIconMapping[enchant.slot],\n            }\n\n            if (enchant.id) {\n                let enchantInfo = enchants[enchant.id];\n                let score = 0;\n                if (enchantInfo) {\n                    character.specs.forEach(spec => {\n                        let specScore = enchantInfo.score[character.type + \"-\" + spec] ?? 0;\n                        if (specScore > score) {\n                            score = specScore;\n                        }\n                    });\n                    accum += score;\n\n                    if (enchantInfo.itemId) {\n                        enchantIcon.itemId = enchantInfo.itemId;\n                    }\n\n                    if (enchantInfo.spellId) {\n                        enchantIcon.spellId = enchantInfo.spellId;\n                    }\n                }else {\n                    enchantIcon.itemId = enchant.gearId;\n                }\n\n                if (score === 1) {\n                    enchantIcon.highlight = \"good\";\n                } else if (score > 0) {\n                    enchantIcon.highlight = \"average\";\n                } else {\n                    enchantIcon.highlight = \"bad\";\n                }\n            } else {\n                enchantIcon.itemId = enchant.gearId;\n                enchantIcon.highlight = \"missing\";\n            }\n\n            enchantList.push(enchantIcon);\n\n            return accum;\n        }, 0);\n\n        characterData[DataPoints.Enchants] = enchantScore + '/' + character.enchants.length;\n        characterData[DataPoints.EnchantList] = enchantList;\n    }\n\n    render() {\n        const {Data, isLoaded, error, classType} = this.state;\n        const {children, row, context} = this.props;\n\n        return (\n            <tr className={classType + \" character \" + (row % 2 === 0 ? \"even\" : \"odd\") + (!isLoaded ? \" loading\": \"\") + (error ? \" error\" : \"\")}>\n                {Children.map(children, child => {\n                    // checking isValidElement is the safe way and avoids a typescript error too\n                    if (isValidElement(child)) {\n                        return cloneElement(child, { data: Data, context: context, render: (x) => x.renderCell(), renderType: \"cell\" });\n                    }\n                    return child;\n                })}\n            </tr>\n        );\n    }\n}","import {Component, Children, isValidElement, cloneElement} from \"react\";\nimport {DataPoints, emptyData, GroupKeys} from \"./GridContexts\";\nimport {GridRow} from \"./GridRow\";\n\nexport class Grid extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: {\n                [GroupKeys.Gems]: true,\n                [GroupKeys.Enchants]: true,\n                [GroupKeys.ProtPotions]: true,\n                [GroupKeys.Consumes]: true,\n                [GroupKeys.DispelsInterrupts]: true,\n            },\n            summaryRow: {...emptyData, [DataPoints.Name]: \"Totals\"},\n        }\n\n        this._logLoader = props.logLoader;\n\n        this.handleColGroupToggle = this.handleColGroupToggle.bind(this);\n        this.handleDataUpdate = this.handleDataUpdate.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.data !== nextProps.data) {\n            return true;\n        }\n\n        if (this.props.classFilter !== nextProps.classFilter) {\n            return true;\n        }\n\n        if (this.props.roleFilter !== nextProps.roleFilter) {\n            return true;\n        }\n\n        if (this.props.fightId !== nextProps.fightId) {\n            return true;\n        }\n\n        if (this.state.collapsed !== nextState.collapsed) {\n            return true;\n        }\n\n        if (this.state.summaryRow !== nextState.summaryRow) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleColGroupToggle(colGroup) {\n        this.setState((state) => ({\n            collapsed: {...state.collapsed, [colGroup]: (state.collapsed[colGroup] ? !state.collapsed[colGroup] : true)}\n        }));\n    }\n\n    handleDataUpdate(character) {\n        const {children} = this.props;\n        let {summaryRow} = this.state;\n\n        Children.forEach(children, colGroup => {\n            if (!isValidElement(colGroup)) {\n                return;\n            }\n\n            Children.forEach(colGroup.props.children, column => {\n                if (!isValidElement(column)) {\n                    return;\n                }\n\n                if (column.props.aggregate === true && column.props.field) {\n                    const field = column.props.field;\n                    summaryRow[field] = (summaryRow[field] === ' ' ? 0 : summaryRow[field]) + character[field];\n                }\n            });\n        });\n\n        this.setState({summaryRow: {...summaryRow}});\n    }\n\n    render() {\n        const {data, children, fightId, classFilter, roleFilter} = this.props;\n        const {collapsed, summaryRow} = this.state;\n\n        let ctx = {collapsed: collapsed, classFilter: classFilter, roleFilter: roleFilter};\n\n        return (\n        <table className=\"grid_table\">\n            <thead>\n                <tr className=\"grid_header\">\n                    {Children.map(children, child => {\n                        // checking isValidElement is the safe way and avoids a typescript error too\n                        if (isValidElement(child)) {\n                            return cloneElement(child, { render: (x) => x.renderHeader(), renderType: \"header\", context: ctx, onColGroupToggle: this.handleColGroupToggle });\n                        }\n                        return child;\n                    })}\n                </tr>\n                <tr className=\"grid_subheader\">\n                {Children.map(children, child => {\n                        // checking isValidElement is the safe way and avoids a typescript error too\n                        if (isValidElement(child)) {\n                            return cloneElement(child, { render: (x) => x.renderSubHeader(), renderType: \"sub-header\", context: ctx });\n                        }\n                        return child;\n                    })}\n                </tr>\n            </thead>\n            <tbody>\n                {data.map((obj, idx) => (\n                <GridRow key={obj.id} character={obj} row={idx} logLoader={this._logLoader} context={ctx} fightId={fightId} onDataUpdate={this.handleDataUpdate}>\n                    {children}\n                </GridRow>\n                ))}\n    \n            </tbody>\n            <tfoot>\n                <tr className=\"Summary\">\n                    {Children.map(children, child => {\n                        if (isValidElement(child)) {\n                            return cloneElement(child, { render: (x) => x.renderCell(), renderType: \"cell\", data: summaryRow, context: ctx })\n                        }\n                    })}\n                </tr>\n            </tfoot>\n        </table>\n        );\n    }\n}","export function ExpandCollapseButton(props) {\n    function handleToggle() {\n        props.onToggle();\n    }\n\n    return (\n        <span className=\"expand_toggle\" onClick={handleToggle}>{props.expanded ? \" ‹‹\" : \" ››\"}</span>\n    )\n}","import {Component, Children, cloneElement, isValidElement} from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { ExpandCollapseButton } from \"./ExpandCollapseButton\";\n\nexport class GridColumnGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            collapsed: props.context?.collapsed[props.id] || false,\n/*             classFilter: props.context?.classFilter,\n            roleFilter: props.context?.roleFilter, */\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        // If data changed and we render cells\n        if (this.props.renderType === \"cell\" && nextProps.data !== this.props.data) {\n            return true;\n        }\n\n        // If class filter or role filter changed\n        if (this.props.context?.classFilter !== nextProps.context?.classFilter ||\n            this.props.context?.roleFilter !== nextProps.context?.roleFilter) {\n                return true;\n            }\n\n        // If collapsed changed for us\n        if (this.props.context?.collapsed[this.props.id] !== nextProps.context?.collapsed[this.props.id]) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.context?.collapsed[this.props.id] !== prevProps.context?.collapsed[this.props.id]\n            /* || this.props.context?.classFilter !== prevProps.context?.classFilter\n            || this.props.context?.roleFilter !== prevProps.context?.roleFilter*/)  {\n          this.setState({\n              collapsed: this.props.context?.collapsed[this.props.id] || false,\n              /* classFilter: this.props.context?.classFilter,\n              roleFilter: this.props.context?.roleFilter, */\n          })\n        }\n\n        ReactTooltip.rebuild();\n    }\n\n    componentDidMount() {\n        ReactTooltip.rebuild();\n    }\n\n    _getVisibleChildCount() {\n        const {children} = this.props;\n        let ctx =  this._getContext();\n\n        let visibleCount = 0;\n        Children.forEach(children, (child) => {\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(ctx);\n                    if (isVisible) {\n                        visibleCount++;\n                    }\n                }\n                else {\n                    visibleCount++;\n                }\n            }\n        })\n\n        return visibleCount;\n    }\n\n    _getChildCount() {\n        const {children} = this.props;\n\n        let visibleCount = 0;\n        Children.forEach(children, (child) => {\n            if (isValidElement(child)) {\n                visibleCount++;\n            }\n        })\n\n        return visibleCount;\n    }\n\n    _canExpand() {\n        return this._getChildCount() > 1;\n    }\n\n    _getContext() {\n        const {id, context} = this.props;\n\n        return {\n            collapsed: context?.collapsed[id] || false,\n            classFilter: context?.classFilter,\n            roleFilter: context?.roleFilter,\n        };\n    }\n\n    renderHeader() {\n        const {id, label, onColGroupToggle, cssClass} = this.props;\n        const {collapsed} = this.state;\n\n        let visibleChildren = this._getVisibleChildCount();\n\n        if (visibleChildren === 0) {\n            return null;\n        }\n\n        return <th className={cssClass + ' ' + id} colSpan={visibleChildren}>{label}{this._canExpand() && <ExpandCollapseButton expanded={!collapsed} onToggle={() => onColGroupToggle(id)} />}</th>;\n    }\n\n    renderSubHeader() {\n        const {children, cssClass} = this.props;\n        let ctx =  this._getContext();\n\n        return Children.map(children, child => {\n            // checking isValidElement is the safe way and avoids a typescript error too\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(ctx);\n                    if (!isVisible) {\n                        return null;\n                    }\n                }\n                return cloneElement(child, { context: ctx, render: (x) => x.renderSubHeader(), renderType: \"sub-header\", cssClass: child.props.cssClass + ' ' + cssClass});\n            }\n            return child;\n        })\n    }\n\n    renderCell() {\n        const {children, data} = this.props;\n        let ctx =  this._getContext();\n\n        return Children.map(children, child => {\n            // checking isValidElement is the safe way and avoids a typescript error too\n            if (isValidElement(child)) {\n                if (child.props.visibility) {\n                    let isVisible = child.props.visibility(ctx);\n                    if (!isVisible) {\n                        return null;\n                    }\n                }\n                return cloneElement(child, { data: data, context: ctx, render: (x) => x.renderCell(), renderType: \"cell\" });\n            }\n            return child;\n        })\n    }\n\n    render() {\n\n        return this.props.render(this);\n    }\n}","import {Component} from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { asPercentage } from \"../utils\";\n\nexport class GridColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        }\n    }\n\n    _cleanupValue(value) {\n        const {format} = this.props;\n\n        if (!value) {\n            return ' ';\n        }\n\n        if (isNaN(value)) {\n            return value;\n        }\n\n        if (value === 0) {\n            return ' ';\n        }\n\n        if (format === \"%\") {\n            return asPercentage(value, 0);\n        }\n\n        return value;\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <th className={cssClass}>{label}</th>;\n    }\n\n    renderCell() {\n        const {data, field, tooltipField, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        if (tooltipField == null) {\n            return <td className={cssClass}>{this._cleanupValue(data[field])}</td>;\n        }\n\n        //let tooltip = data[tooltipField];\n\n        return (\n        <td className={cssClass}>\n            <div data-tip>{this._cleanupValue(data[field])}</div>\n            {tooltipField && <ReactTooltip>\n                    <table>\n                    </table>\n                </ReactTooltip>}\n        </td>)\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import {Component} from \"react\";\nimport {asPercentage} from \"../utils\";\n\nexport class GridIconColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        };\n    }\n\n    _cleanupValue(value) {\n        const {format} = this.props;\n\n        if (!value) {\n            return ' ';\n        }\n\n        if (isNaN(value)) {\n            return value;\n        }\n\n        if (value === 0) {\n            return ' ';\n        }\n\n        if (format === \"%\") {\n            return asPercentage(value, 0);\n        }\n\n        return value;\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass, icon_name, icon_url, item_id, spell_id} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        let icon = icon_url;\n        if (icon == null) {\n            icon = \"https://assets.rpglogs.com/img/warcraft/abilities/\" + icon_name;\n        }\n\n        let cellContent = <img className=\"spell_icon\" src={icon} alt={label} data-tip={item_id || spell_id ? null : label} />\n        if (item_id) {\n            cellContent = <a href={\"https://tbc.wowhead.com/item=\" + item_id} target=\"_blank\" rel=\"noreferrer\">{cellContent}</a>\n        }\n\n        if (spell_id) {\n            cellContent = <a href={\"https://tbc.wowhead.com/spell=\" + spell_id} target=\"_blank\" rel=\"noreferrer\">{cellContent}</a>\n        }\n\n        return (\n        <th className={cssClass}>\n            {cellContent}\n        </th>);\n    }\n\n    renderCell() {\n        const {data, field, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <td className={cssClass}>{this._cleanupValue(data[field])}</td>\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import {Component, Children, isValidElement, cloneElement} from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport class GridBarColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        }\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <th className={cssClass}>{label}</th>;\n    }\n\n    renderCell() {\n        const {children, data, width} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        let childObjects = Children.map(children, child => {\n            // checking isValidElement is the safe way and avoids a typescript error too\n            if (isValidElement(child)) {\n                return cloneElement(child, { data: data, context: this.state });\n            }\n            return child;\n        })\n\n        return (\n            <td width={width}>\n                <div className=\"grid-bar-column\">\n                { childObjects }\n                </div>\n                <ReactTooltip />\n            </td>\n        )\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}\n\nexport class GridBarColumnSection extends Component {\n    render() {\n        const {data, field, cssClass, label} = this.props;\n\n        if (data[field] === \" \")\n            return null;\n\n        return <div style={{width: (data[field] * 100) + \"%\"}} className={cssClass} data-tip={label}>&nbsp;</div>\n    }\n}","import {Component} from \"react\";\n\nexport class GridIconListColumn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: true\n        };\n    }\n\n    _cleanupValue(value) {\n        if (!value) {\n            return ' ';\n        }\n\n        if (!Array.isArray(value)) {\n            return ' ';\n        }\n\n        return (\n            <>\n            { value.map(x => {\n                if (x.count)\n                    return <a href={\"https://tbc.wowhead.com/\" + (x.itemId ? \"item=\" + x.itemId : (x.spellId ? \"spell=\" + x.spellId : \"\"))} target=\"_blank\" rel=\"noreferrer\"><span key={x.name} className=\"icon_count\" data-count={x.count}><img className=\"spell_icon\" src={x.icon_url ? x.icon_url : \"https://assets.rpglogs.com/img/warcraft/abilities/\" + x.icon} alt={x.name} /></span></a>\n                \n                if (x.highlight)\n                    return <a href={\"https://tbc.wowhead.com/\" + (x.itemId ? \"item=\" + x.itemId : (x.spellId ? \"spell=\" + x.spellId : \"\"))} target=\"_blank\" rel=\"noreferrer\"><span key={x.name} className={\"icon_highlight \" + x.highlight}><img className=\"spell_icon\" src={x.icon_url ? x.icon_url : \"https://assets.rpglogs.com/img/warcraft/abilities/\" + x.icon} alt={x.name} /></span></a>\n                \n                return <a href={\"https://tbc.wowhead.com/\" + (x.itemId ? \"item=\" + x.itemId : (x.spellId ? \"spell=\" + x.spellId : \"\"))} target=\"_blank\" rel=\"noreferrer\"><img className=\"spell_icon\" src={x.icon_url ? x.icon_url : \"https://assets.rpglogs.com/img/warcraft/abilities/\" + x.icon} alt={x.name} /></a>\n            })}\n            </>\n        );\n    }\n\n    isVisible() {\n        const {visibility} = this.props;\n\n        if (!visibility) {\n            return true;\n        }\n\n        return visibility(this.props.context);\n    }\n\n    renderHeader() {\n        return null;\n    }\n\n    renderSubHeader() {\n        const {label, cssClass, icon_name, icon_url} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        let icon = icon_url;\n        if (icon == null && icon_name) {\n            icon = \"https://assets.rpglogs.com/img/warcraft/abilities/\" + icon_name;\n        }\n\n        let header = label;\n\n        if (icon) {\n            header = (<img className=\"spell_icon\" src={icon} alt={label} data-tip={label} />);\n        }\n\n        return (\n        <th className={cssClass}>{header}</th>);\n    }\n\n    renderCell() {\n        const {data, field, cssClass} = this.props;\n\n        if (!this.isVisible()) {\n            return null;\n        }\n\n        return <td className={cssClass}>{this._cleanupValue(data[field])}</td>\n    }\n\n    render() {\n        return this.props.render(this);\n    }\n}","import { useParams } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport { bosses } from \"../datastore\"\nimport {msToTime} from \"../utils\"\n\nfunction getPercentageBar(fight) {\n    if (fight.kill) {\n        return <div className={\"boss_percentage kill\"}></div>\n    }\n    \n    return <div className={\"boss_percentage wipe\"} style={{ width: (fight.fightPercentage/100).toString() + \"%\"}}></div>\n}\n\nexport function BossNavItem (props) {\n    let {boss, onMouseOver, onMouseOut} = props;\n    let {id, filter} = useParams();\n    let bossInfo = bosses[boss.id];\n    if (!bossInfo) {\n        bossInfo = {\n            name: boss.fights[boss.fights.length -1]?.name ?? \"Unknown\",\n            logo: \"https://assets.rpglogs.com/img/warcraft/icons/Boss.jpg\",\n        }\n    }\n\n    let lastFight = boss.fights[boss.fights.length - 1];\n\n    let lastFightTile = getPercentageBar(lastFight);\n    const filterSuffix = filter ? \"/\" + filter : \"\";\n\n    let otherFights = [];\n    for (let i = boss.fights.length - 2; i >= 0; --i) {\n        otherFights.push(boss.fights[i]);\n    }\n\n    return (\n        <>\n        <div className=\"boss_tile\">\n            <NavLink to={\"/\" + id + \"/\" + lastFight.id + filterSuffix} activeClassName=\"selected\">\n                <div className=\"boss_fight\" onMouseOver={(e) => onMouseOver(lastFight.id)} onMouseOut={(e) => onMouseOut(lastFight.id)}>\n                    <img src={bossInfo.logo} alt={bossInfo.name} />\n                    <div className=\"boss_name\">{bossInfo.name}</div>\n                    {lastFightTile}\n                </div>\n            </NavLink>\n            {otherFights.map(fight => (\n                <NavLink key={fight.id} to={\"/\" + id + \"/\" + fight.id + filterSuffix} activeClassName=\"selected\">\n                    <div className=\"boss_fight\" onMouseOver={(e) => onMouseOver(fight.id)} onMouseOut={(e) => onMouseOut(fight.id)}>\n                        {msToTime(fight.end_time - fight.start_time)}\n                        {getPercentageBar(fight)}\n                    </div>\n                </NavLink>\n            ))}\n        </div>\n        </>\n    )\n}","import \"./FightChart.scss\";\nimport { createRef } from 'react';\nimport { Tooltip } from 'react-svg-tooltip';\nimport { asPercentage, msToTime } from \"../utils\";\n\nexport function FightChart(props) {\n    const {fights, raidStart,  raidTime, fightIds} = props;\n\n    const maxWidth = 1000;\n\n    let timeToPixel = (time) => {\n        return (time / raidTime) * maxWidth;\n    };\n\n    let getClassName = (fight) => {\n        if (fight.boss === 0) {\n            return \"trash\";\n        }\n\n        if (fight.kill) {\n            return \"boss-kill\";\n        }\n\n        return \"boss-wipe\";\n    };\n\n    let fightBands = [];\n\n    fights.forEach((fight, index, array) => {\n        if (index !== 0) {\n            fightBands.push({ \n                start: timeToPixel(array[index-1].end_time - raidStart), \n                end: timeToPixel(fight.start_time - raidStart), \n                cssClass: \"idle\", \n                id: 10000 + index, \n                duration: msToTime(fight.start_time - array[index-1].end_time),\n                name: null\n            });\n        }\n\n        fightBands.push({\n            start: timeToPixel(fight.start_time - raidStart), \n            end: timeToPixel(fight.end_time - raidStart), \n            cssClass: getClassName(fight), id: fight.id, \n            duration: msToTime(fight.end_time - fight.start_time),\n            name: fight.name,\n        });\n    })\n\n    let fightSummary = fights.reduce((agg, fight) => {\n        if (fight.boss === 0) {\n            agg.trash += (fight.end_time - fight.start_time);\n            return agg;\n        }\n\n        if (fight.kill) {\n            agg.bossKill += (fight.end_time - fight.start_time);\n            return agg;\n        }\n\n        agg.bossWipe += (fight.end_time - fight.start_time);\n\n        return agg;\n\n    }, { trash: 0, bossKill: 0, bossWipe: 0});\n    fightSummary.idle = raidTime - fightSummary.trash - fightSummary.bossKill - fightSummary.bossWipe;\n\n    return (\n        <div className=\"fightChart\">\n            <div className=\"fightSummary\">\n                <table>\n                    <tbody>\n                        <tr className=\"boss-kill\">\n                            <th className=\"name\">Boss Kills</th>\n                            <td className=\"time\">{msToTime(fightSummary.bossKill)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.bossKill / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"boss-wipe\">\n                            <th className=\"name\">Boss Wipes</th>\n                            <td className=\"time\">{msToTime(fightSummary.bossWipe)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.bossWipe / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"trash\">\n                            <th className=\"name\">Trash</th>\n                            <td className=\"time\">{msToTime(fightSummary.trash)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.trash / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"idle\">\n                            <th className=\"name\">Idle</th>\n                            <td className=\"time\">{msToTime(fightSummary.idle)}</td>\n                            <td className=\"percentage\">{asPercentage(fightSummary.idle / raidTime, 1)}</td>\n                        </tr>\n                        <tr className=\"total\">\n                            <th>&nbsp;</th>\n                            <td className=\"time\">{msToTime(raidTime)}</td>\n                            <td className=\"percentage\">100.0%</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <svg width={maxWidth} height=\"110\">\n                <g>\n                    {fightBands.map(band => {\n                        const bandRef = createRef();\n                        return (<>\n                                <rect key={band.id} ref={bandRef} x={band.start} y={fightIds.includes(band.id) ? \"0\" : \"10\"} height=\"65\" width={band.end - band.start} className={band.cssClass} />\n                                <Tooltip triggerRef={bandRef}>\n                                    <rect x={5} y={15} width={50} height={25} rx={5} ry={5} fill={'black'} fill-opacity={0.7} />\n                                    <text x={45} y={32} fontSize={14} text-anchor=\"end\" className={band.cssClass}>{band.duration}</text>\n                                </Tooltip>\n                            </>)\n                    })}\n                </g>\n                <g>\n                    { fightSummary.bossKill > 0 && (\n                        <>\n                        <rect x=\"0\" y=\"85\" height=\"25\" width={timeToPixel(fightSummary.bossKill)} className=\"boss-kill\" />\n                        </>\n                    )}\n                    { fightSummary.bossWipe > 0 && (\n                        <>\n                        <rect x={timeToPixel(fightSummary.bossKill)} y=\"85\" height=\"25\" width={timeToPixel(fightSummary.bossWipe)} className=\"boss-wipe\" />\n                        </>\n                    )}\n                    { fightSummary.trash > 0 && (\n                        <>\n                        <rect x={timeToPixel(fightSummary.bossKill + fightSummary.bossWipe)} y=\"85\" height=\"25\" width={timeToPixel(fightSummary.trash)} className=\"trash\" />\n                        </>\n                    )}\n                    { fightSummary.idle > 0 && (\n                        <>\n                        <rect x={timeToPixel(fightSummary.bossKill + fightSummary.bossWipe + fightSummary.trash)} y=\"85\" height=\"25\" width={timeToPixel(fightSummary.idle)} className=\"idle\" />\n                        </>\n                    )}\n                    \n                </g>\n            </svg>\n        </div>\n    )\n}","export function WoWAnalyzerLink(props) {\n    const {reportId, fightId} = props;\n\n    let link = `https://wowanalyzer.com/report/${reportId}`;\n    if (fightId > 0) {\n        link += `/${fightId}`;\n    }\n    return (\n        <div><a href={link} className=\"external\" target=\"_blank\" rel=\"noreferrer\"><img src=\"https://www.wowanalyzer.com/favicon-16x16.png\" alt=\"WoWAnalyzer\"></img>Open in WoWAnalyzer</a></div>\n    );\n}","export function ThreatReportLink(props) {\n    const { reportId, fightId } = props;\n\n    let link = `https://voomlz.github.io/threat/?id=${reportId}&fight=${fightId}&enemy=&target=`;\n    return (\n        <div><a href={link} className=\"external\" target=\"_blank\" rel=\"noreferrer\"><img src=\"/line-chart-5754.png\" alt=\"Threat Graph icon\" />Open threat graph</a></div>\n    );\n}","export function WarcraftLogsLink(props) {\n    const { reportId, fightId } = props;\n\n    let link = `https://classic.warcraftlogs.com/reports/${reportId}`;\n    if (fightId > 0) {\n        link += `#fight=${fightId}`;\n    }\n    return (\n        <div><a href={link} className=\"external\" target=\"_blank\" rel=\"noreferrer\"><img src=\"https://assets.rpglogs.com/img/warcraft/favicon.png\" alt=\"Threat Graph icon\" />Open in Warcraft Logs</a></div>\n    );\n}","import \"./SummaryReport.scss\";\nimport {Component} from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {WarcraftLogLoader} from \"../warcraftLogLoader\";\nimport {GroupKeys, DataPoints} from \"./GridContexts\";\nimport {Grid} from \"./Grid\";\nimport {GridColumnGroup} from \"./GridColumnGroup\";\nimport {GridColumn} from \"./GridColumn\";\nimport {GridIconColumn} from \"./GridIconColumn\";\nimport { GridBarColumn, GridBarColumnSection } from \"./GridBarColumn\";\nimport { GridIconListColumn } from \"./GridIconListColumn\";\nimport { BossNavItem } from \"./BossNavItem\";\nimport ReactTooltip from \"react-tooltip\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { format, intervalToDuration} from \"date-fns\";\nimport { FightChart } from \"./FightChart\";\nimport { WoWAnalyzerLink } from \"./WoWAnalyzerLink\";\nimport { ThreatReportLink } from \"./ThreatReportLink\";\nimport { WarcraftLogsLink } from \"./WarcraftLogsLink\";\n\nconst roles = {\n    'tank': {\n        slug: 'tank',\n        name: 'Tank',\n        icon: 'https://wow.zamimg.com/images/wow/icons/tiny/role_tank.gif',\n    },\n    'dps': {\n        slug: 'dps',\n        name: 'DPS',\n        icon: 'https://wow.zamimg.com/images/wow/icons/tiny/role_dps.gif',\n    },\n    'healer': {\n        slug: 'healer',\n        name: 'Healer',\n        icon: 'https://wow.zamimg.com/images/wow/icons/tiny/role_healer.gif',\n    }\n};\n\nconst classes = {\n    'warrior': {\n        slug: 'warrior',\n        name: 'Warrior',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/inv_sword_27.jpg',\n    },\n    'rogue': {\n        slug: 'rogue',\n        name: 'Rogue',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_ThrowingKnife_04.jpg',\n    },\n    'hunter': {\n        slug: 'hunter',\n        name: 'Hunter',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_Weapon_Bow_07.jpg',\n    },\n    'mage': {\n        slug: 'mage',\n        name: 'Mage',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_Staff_13.jpg',\n    },\n    'warlock': {\n        slug: 'warlock',\n        name: 'Warlock',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/Spell_Nature_Drowsy.jpg',\n    },\n    'priest': {\n        slug: 'priest',\n        name: 'Priest',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/INV_Staff_30.jpg',\n    },\n    'paladin': {\n        slug: 'paladin',\n        name: 'Paladin',\n        icon: 'https://wow.zamimg.com/images/wow/icons/medium/class_paladin.jpg',\n    },\n    'shaman': {\n        slug: 'shaman',\n        name: 'Shaman',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/inv_jewelry_talisman_04.jpg',\n    },\n    'druid': {\n        slug: 'druid',\n        name: 'Druid',\n        icon: 'https://assets.rpglogs.com/img/warcraft/abilities/Ability_Druid_Maul.jpg',\n    },\n}\n\nclass SummaryReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            fights: [],\n            characters: {},\n            isLoaded: false,\n            reportDetails: {},\n            context: {},\n            selectedFight: -1,\n            data: [],\n            classFilter: null,\n            roleFilter: null,\n        }\n        this._logLoader = null;\n\n        this.handleFightMouseOut = this.handleFightMouseOut.bind(this);\n        this.handleFightMouseOver = this.handleFightMouseOver.bind(this);\n    }\n\n    _getResults(selectedFight) {\n        let report = this._logLoader.getResults(selectedFight);\n        this.setState({\n            isLoaded: true,\n            characters: report.Characters,\n            fights: report.Fights,\n            raidStart: report.startTime,\n            raidTime: report.endTime - report.startTime,\n            reportDetails: {\n                title: report.title,\n                startTime: new Date(report.startTimestamp),\n                endTime: new Date(report.endTimestamp)\n            }\n        });\n\n        return report;\n    }\n\n    componentDidMount() {\n        const { id, fightId } = this.props.match.params;\n        if (!id)\n            return;\n\n        let selectedFight = fightId == null || isNaN(parseInt(fightId)) ? -1 : parseInt(fightId);\n\n        this.setState({reportId: id, selectedFight: selectedFight});\n\n        this._logLoader = WarcraftLogLoader.Load(id);\n        this._logLoader.loadFights()\n            .then(x => x.loadCharacterSummary())\n            .then(x => x.loadDeaths())\n            .then(x => x.loadInterrupts())\n            .then(x => {\n                let report = this._getResults();\n                this._generateFilteredData(report.Characters);\n            })\n            .catch((error) => {\n                this.setState({\n                    isLoaded: true,\n                    error: error\n                })\n            });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match !== prevProps.match) {\n            const { fightId } = this.props.match.params;\n            let selectedFight = fightId == null || isNaN(parseInt(fightId)) ? -1 : parseInt(fightId);\n\n            let report = this._getResults(selectedFight);\n            this._generateFilteredData(report.Characters);\n        }\n    }\n\n    _getFightIds(fightId) {\n        const { fights, hoverFight} = this.state;\n        let fightIds = [];\n        if (fightId === -1 && hoverFight == null)\n            return [];\n            \n        if (fightId > 0)\n            fightIds.push(fightId);\n\n        if (hoverFight > 0)\n            fightIds.push(hoverFight);\n\n        if (fightId === 0 || hoverFight === 0) {\n            fights.forEach(fight => {\n                if (fight.boss !== 0)\n                    return;\n                    \n                fightIds.push(fight.id);\n            });\n        }\n\n        return fightIds;\n    }\n\n    handleFightMouseOver(fightId) {\n        const {hoverFight} = this.state;\n\n        if (hoverFight !== fightId) {\n            console.log(\"OnMouseOver: \" + fightId);\n            this.setState({hoverFight: fightId});\n        }\n    }\n\n    handleFightMouseOut(fightId) {\n        const {hoverFight} = this.state;\n\n        if (hoverFight === fightId) {\n            console.log(\"OnMouseOut: \" + fightId);\n            this.setState({hoverFight: null});\n        }\n    }\n\n    _generateFilteredData(characters) {\n        const {filter} = this.props.match.params;\n\n        const classSortOrder = { Warrior: 0, Rogue: 1, Hunter: 2, Mage: 3, Warlock: 4, Priest: 5, Shaman: 6, Paladin: 7, Druid: 8 };\n\n        let roleFilter = null;\n        let classFilter = null;\n\n        if (roles[filter]) {\n            classFilter = null;\n            roleFilter = filter;\n        }\n\n        if (classes[filter]) {\n            classFilter = classes[filter].name;\n            roleFilter = null;\n        }\n\n        let data = [...Object.values(characters)\n        .filter((character) => character.type !== \"NPC\" && character.type !== \"Pet\" && character.type !== \"Boss\")\n        .filter((character) => classFilter == null || character.type === classFilter)\n        .filter((character) => roleFilter == null || character.roles.includes(roleFilter))\n        .sort((aValue, bValue) => {\n             let classCompare = classSortOrder[aValue.type] - classSortOrder[bValue.type];\n\n             if (classCompare !== 0)\n                 return classCompare;\n\n             return aValue.name.localeCompare(bValue.name);\n            })];\n\n        this.setState({data: data, classFilter: classFilter, roleFilter: roleFilter});\n    }\n\n    render() {\n        const { error, isLoaded, data, reportId, reportDetails, fights, raidStart, raidTime, classFilter, roleFilter} = this.state;\n        const { fightId, filter } = this.props.match.params;\n\n        let selectedFight = fightId == null || isNaN(parseInt(fightId)) ? -1 : parseInt(fightId);\n\n        let fightIds = this._getFightIds(selectedFight);\n\n        const filterSuffix = filter ? \"/\" + filter : \"\";\n        \n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>;\n        } else {\n/*             let data = Object.values(characters)\n                .filter((character) => character.type !== \"NPC\" && character.type !== \"Pet\" && character.type !== \"Boss\")\n                .filter((character) => classFilter == null || character.type === classFilter)\n                .filter((character) => roleFilter == null || character.roles.includes(roleFilter))\n                .sort((aValue, bValue) => {\n                     let classCompare = classSortOrder[aValue.type] - classSortOrder[bValue.type];\n\n                     if (classCompare !== 0)\n                         return classCompare;\n\n                     return aValue.name.localeCompare(bValue.name);\n                    }); */\n            \n            let duration = intervalToDuration({start: reportDetails.startTime, end: reportDetails.endTime});\n            return (\n                <>\n                    <h3 className=\"report_title\">{reportDetails.title}</h3>\n                    <div><strong>Report ID:</strong> {reportId} (<Link to=\"/\">Load a different report</Link>)</div>\n                    <div>{format(reportDetails.startTime, \"EEE do MMM HH:mm:ss\")} - {format(reportDetails.endTime, \"HH:mm:ss\")} ({duration.hours}:{duration.minutes.toString().padStart(2, \"0\")}:{duration.seconds.toString().padStart(2, \"0\")})</div>\n                    <WoWAnalyzerLink reportId={reportId} fightId={selectedFight} />\n                    <ThreatReportLink reportId={reportId} fightId={selectedFight} />\n                    <WarcraftLogsLink reportId={reportId} fightId={selectedFight} />\n                    <div className=\"boss_nav\">\n                    <div className=\"boss_tile\">\n                        <NavLink to={\"/\" + reportId + (filterSuffix ? \"/-1\" + filterSuffix : \"\")}>\n                            <div className=\"boss_fight\">\n                                <img src=\"https://wow.zamimg.com/images/wow/journal/ui-ej-boss-default.png\" alt=\"Summary\" />\n                                <div className=\"boss_name\">Summary</div>\n                            </div>\n                        </NavLink>\n                    </div>\n                    <div className=\"boss_tile\">\n                        <NavLink to={\"/\" + reportId + \"/0\" + filterSuffix} activeClassName=\"selected\">\n                            <div className=\"boss_fight\" onMouseOver={(e) => this.handleFightMouseOver(0)} onMouseOut={(e) => this.handleFightMouseOut(0)}>\n                                <img src=\"https://wow.zamimg.com/images/wow/journal/ui-ej-boss-timmy-the-cruel.png\" alt=\"Trash\" />\n                                <div className=\"boss_name\">Trash</div>\n                            </div>\n                        </NavLink>\n                    </div>\n                        {fights.filter(fight => fight.boss > 0)\n                               .reduce((accum, fight) => {\n                                    let found = false;\n                                    for (let i = 0; i < accum.length; ++i) {\n                                        if (accum[i].id === fight.boss) {\n                                            accum[i].fights.push(fight);\n                                            found = true;\n                                        }\n                                    }\n\n                                    if (!found) {\n                                        accum.push({ id: fight.boss, fights: [fight] });\n                                    }\n\n                                    return accum;\n                               },[])\n                               .map(boss => (\n                            <BossNavItem key={boss.id} boss={boss} onMouseOver={this.handleFightMouseOver} onMouseOut={this.handleFightMouseOut} />\n                        ))}\n                    </div>\n                    <FightChart fights={fights} raidStart={raidStart} raidTime={raidTime} fightIds={fightIds} />\n                    <div className=\"nav_bar\">\n                        <NavLink to={\"/\" + reportId + \"/\" + selectedFight} activeClassName=\"selected\"><div className={\"class_nav All\"}><img className=\"spell_icon\" src=\"https://assets.rpglogs.com/img/warcraft/abilities/inv_misc_questionmark.jpg\" alt=\"All\" />All</div></NavLink>\n                        <div className=\"separator\"></div>\n                        {Object.values(roles).map(role => <NavLink key={role.slug} to={\"/\" + reportId + \"/\" + selectedFight + \"/\" + role.slug} activeClassName=\"selected\"><div className={\"class_nav \" + role.name}><img className=\"spell_icon\" src={role.icon} alt={role.name} />{role.name}</div></NavLink>)}\n                        <div className=\"separator\"></div>\n                        {Object.values(classes).map(role => <NavLink key={role.slug} to={\"/\" + reportId + \"/\" + selectedFight + \"/\" + role.slug} activeClassName=\"selected\"><div className={\"class_nav \" + role.name}><img className=\"spell_icon\" src={role.icon} alt={role.name} />{role.name}</div></NavLink>)}\n                    </div>\n\n                    <Grid data={data} logLoader={this._logLoader} classFilter={classFilter} roleFilter={roleFilter} fightId={selectedFight}>\n                        <GridColumnGroup id={GroupKeys.Name} label=\"Name\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.Name} \n                                        cssClass=\"name\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Enchants} label=\"Enchants\" cssClass=\"even-colgroup\">\n                            <GridColumn field={DataPoints.Enchants} \n                                        cssClass=\"enchants\" />\n                            <GridIconListColumn field={DataPoints.EnchantList}\n                                        label=\" \"\n                                        visibility={(ctx) => ctx.collapsed === false} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Gems} label=\"Gems\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.GemsMissing} label=\"Nil\"\n                                        cssClass=\"gems empty\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsCommon} label=\"Co\"\n                                        cssClass=\"gems common\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsUncommon} label=\"Un\"\n                                        cssClass=\"gems uncommon\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsRare} label=\"Ra\"\n                                        cssClass=\"gems rare\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.GemsEpic} label=\"Ep\"\n                                        cssClass=\"gems epic\"\n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconListColumn field={DataPoints.GemsList}\n                                        icon_name=\"inv_misc_gem_diamond_01.jpg\"\n                                        cssClass=\"gems\"\n                                        visibility={(ctx) => ctx.collapsed === false} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Elixirs} label=\"Self Buffs\" cssClass=\"even-colgroup\">\n                            <GridIconListColumn field={DataPoints.ElixirsFlasks}\n                                        label=\"Flask\"\n                                        icon_name=\"inv_potion_90.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsGuardian}\n                                        label=\"Guardian Elixirs\"\n                                        icon_name=\"ability_shaman_watershield.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsBattle}\n                                        label=\"Battle Elixirs\"\n                                        icon_name=\"ability_dualwield.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsFood}\n                                        label=\"Food Buffs\"\n                                        icon_name=\"spell_misc_food.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsScrolls}\n                                        label=\"Scrolls\"\n                                        icon_name=\"inv_scroll_07.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsWeaponEnchants}\n                                        label=\"Weapon Imbues\"\n                                        icon_name=\"ability_meleedamage.jpg\"\n                                        cssClass=\"center\" />\n                            <GridIconListColumn field={DataPoints.ElixirsSeasonal}\n                                        label=\"Seasonal Buffs\"\n                                        icon_name=\"inv_misc_branch_01.jpg\"\n                                        cssClass=\"center\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Deaths} label=\"Deaths\" cssClass=\"odd-colgroup\">\n                            <GridColumn field={DataPoints.Deaths} \n                                        cssClass=\"deaths\" aggregate={true} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.ProtPotions} label=\"Prot Potions\" cssClass=\"even-colgroup\">\n                            <GridColumn field={DataPoints.ProtectionPotionsTotal} \n                                        label=\"Uses\" \n                                        cssClass=\"center\" \n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridColumn field={DataPoints.ProtectionPotionsTotalAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"center\" \n                                        visibility={(ctx) => ctx.collapsed === true} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsNature} \n                                        label=\"Nature Protection Potion\" \n                                        icon_name=\"inv_potion_06.jpg\" \n                                        item_id={6052}\n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterNature} \n                                        label=\"Greater Nature Protection Potion\" \n                                        icon_name=\"inv_potion_22.jpg\" \n                                        item_id={13458}\n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorNature} \n                                        label=\"Major Nature Protection Potion\" \n                                        icon_name=\"inv_potion_127.jpg\" \n                                        item_id={22844}\n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsNatureAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion nature\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsFire} \n                                        label=\"Fire Protection Potion\" \n                                        icon_name=\"inv_potion_16.jpg\" \n                                        item_id={6049}\n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterFire} \n                                        label=\"Greater Fire Protection Potion\" \n                                        icon_name=\"inv_potion_24.jpg\" \n                                        item_id={13457}\n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorFire} \n                                        label=\"Major Fire Protection Potion\" \n                                        icon_name=\"inv_potion_124.jpg\" \n                                        item_id={22841}\n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsFireAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion fire\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsFrost} \n                                            label=\"Frost Protection Potion\" \n                                            icon_name=\"inv_potion_13.jpg\" \n                                            item_id={6050}\n                                            cssClass=\"protection_potion frost\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterFrost} \n                                            label=\"Greater Frost Protection Potion\" \n                                            icon_name=\"inv_potion_20.jpg\" \n                                            item_id={13456}\n                                            cssClass=\"protection_potion frost\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorFrost} \n                                            label=\"Major Frost Protection Potion\" \n                                            icon_name=\"inv_potion_126.jpg\" \n                                            item_id={22842}\n                                            cssClass=\"protection_potion frost\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsFrostAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion frost\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsShadow} \n                                            label=\"Shadow Protection Potion\" \n                                            icon_name=\"inv_potion_44.jpg\" \n                                            item_id={6048}\n                                            cssClass=\"protection_potion shadow\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterShadow} \n                                            label=\"Greater Shadow Protection Potion\" \n                                            icon_name=\"inv_potion_23.jpg\" \n                                            item_id={13459}\n                                            cssClass=\"protection_potion shadow\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorShadow} \n                                            label=\"Major Shadow Protection Potion\" \n                                            icon_name=\"inv_potion_123.jpg\" \n                                            item_id={22846}\n                                            cssClass=\"protection_potion shadow\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsShadowAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion shadow\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsGreaterArcane} \n                                            label=\"Greater Arcane Protection Potion\" \n                                            icon_name=\"inv_potion_83.jpg\" \n                                            item_id={13461}\n                                            cssClass=\"protection_potion arcane\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridIconColumn field={DataPoints.ProtectionPotionsMajorArcane} \n                                            label=\"Major Arcane Protection Potion\" \n                                            icon_name=\"inv_potion_128.jpg\" \n                                            item_id={22845}\n                                            cssClass=\"protection_potion arcane\" \n                                            visibility={(ctx) => ctx.collapsed === false} />\n                            <GridColumn field={DataPoints.ProtectionPotionsArcaneAbsorbed} \n                                        label=\"Absorb\" \n                                        cssClass=\"protection_potion arcane\" \n                                        visibility={(ctx) => ctx.collapsed === false} />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Consumes} label=\"Consumes\" cssClass=\"odd-colgroup\">\n                            <GridIconColumn field={DataPoints.ConsumesPotions} \n                                            label=\"Potions\" \n                                            icon_name=\"inv_drink_06.jpg\" \n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesManaPots} \n                                            label=\"Mana Potions\" \n                                            icon_name=\"inv_potion_137.jpg\" \n                                            item_id={22832}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.classFilter !== \"Warrior\" && ctx.classFilter !== \"Rogue\" && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRejuvPots} \n                                            label=\"Rejuvenation Potions\" \n                                            icon_name=\"inv_potion_134.jpg\" \n                                            item_id={22850}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHealthPots} \n                                            label=\"Healing Potion\" \n                                            icon_name=\"inv_potion_131.jpg\" \n                                            item_id={22829}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFreeActionPotion} \n                                            label=\"Free/Living Action Potion\" \n                                            icon_name=\"inv_potion_04.jpg\" \n                                            item_id={5634}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRestorationPots} \n                                            label=\"Restorative Potion\" \n                                            icon_name=\"inv_potion_01.jpg\" \n                                            item_id={9030}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRagePotions} \n                                            label=\"Rage Potions\" \n                                            icon_name=\"inv_potion_41.jpg\" \n                                            item_id={13442}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\") || (ctx.classFilter === \"Warrior\")}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesIronshield} \n                                            label=\"Ironshield Potions\" \n                                            icon_name=\"inv_potion_133.jpg\" \n                                            item_id={22849}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\") || (ctx.roleFilter === \"tank\")}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesInsaneStrength} \n                                            label=\"Insane Strength Potion\" \n                                            icon_name=\"inv_potion_109.jpg\" \n                                            item_id={22828}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesShrouding} \n                                            label=\"Shrouding Potion\" \n                                            icon_name=\"inv_potion_144.jpg\" \n                                            item_id={22871}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFelRegeneration} \n                                            label=\"Fel Regeneration Potion\" \n                                            icon_name=\"inv_potion_140.jpg\" \n                                            item_id={31676}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHeroic} \n                                            label=\"Heroic Potion\" \n                                            icon_name=\"inv_potion_106.jpg\" \n                                            item_id={22837}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDestruction} \n                                            label=\"Destruction Potion\" \n                                            icon_name=\"inv_potion_107.jpg\" \n                                            item_id={22839}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHaste} \n                                            label=\"Haste Potion\" \n                                            icon_name=\"inv_potion_108.jpg\" \n                                            item_id={22838}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFelMana} \n                                            label=\"Fel Mana Potion\" \n                                            icon_name=\"inv_potion_138.jpg\" \n                                            item_id={31677}\n                                            cssClass=\"protection_potion frost\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesGems} \n                                            label=\"Gems/Runes/Stones\" \n                                            icon_name=\"inv_misc_gem_variety_01.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesRunes} \n                                            label=\"Dark/Demonic Runes\" \n                                            icon_name=\"inv_misc_rune_04.jpg\" \n                                            item_id={12662}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.classFilter !== \"Warrior\" && ctx.classFilter !== \"Rogue\" && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHealthStones} \n                                            label=\"Major Health Stone\" \n                                            icon_name=\"inv_stone_04.jpg\" \n                                            item_id={22105}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesNightmareSeed} \n                                            label=\"Nightmare Seed\" \n                                            item_id={22797}\n                                            icon_name=\"inv_misc_herb_nightmareseed.jpg\" \n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesWhipperRootTuber} \n                                            label=\"Whipper Root Tuber\" \n                                            icon_name=\"inv_misc_food_55.jpg\" \n                                            item_id={11951}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesThistleTea} \n                                            label=\"Thistle Tea\" \n                                            icon_name=\"inv_drink_milk_05.jpg\" \n                                            item_id={7676}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\" && ctx.roleFilter !== \"tank\") || (ctx.classFilter === \"Rogue\")}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesManaGem} \n                                            label=\"Mana Gem\" \n                                            icon_name=\"inv_misc_gem_stone_01.jpg\" \n                                            item_id={22044}\n                                            cssClass=\"protection_potion nature\"\n                                            visibility={(ctx) => (ctx.classFilter == null && ctx.collapsed === false && ctx.roleFilter !== \"healer\" && ctx.roleFilter !== \"tank\") || (ctx.classFilter === \"Mage\")}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesDrums} \n                                            label=\"Drums\" \n                                            icon_name=\"inv_misc_drum_02.jpg\" \n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsBattle} \n                                            label=\"Drums of Battle\" \n                                            icon_name=\"inv_misc_drum_02.jpg\" \n                                            item_id={29529}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsWar} \n                                            label=\"Drums of War\" \n                                            icon_name=\"inv_misc_drum_03.jpg\" \n                                            item_id={29528}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsRestoration} \n                                            label=\"Drums of Restoration\" \n                                            icon_name=\"inv_misc_drum_07.jpg\" \n                                            item_id={29531}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDrumsPanic} \n                                            label=\"Drums of Panic\" \n                                            icon_name=\"inv_misc_drum_06.jpg\" \n                                            item_id={29532}\n                                            cssClass=\"protection_potion holy\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesExplosives} \n                                            label=\"Bombs and Explosives\" \n                                            icon_name=\"inv_misc_bomb_06.jpg\" \n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHolyWater} \n                                            label=\"Stratholme Holy Water\" \n                                            icon_name=\"inv_potion_75.jpg\" \n                                            item_id={13180}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesSapperCharge} \n                                            label=\"Sapper Charge\" \n                                            icon_name=\"inv_gizmo_supersappercharge.jpg\" \n                                            item_id={23827}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesEzThro} \n                                            label=\"Ez-Thro Dynamite II\" \n                                            icon_name=\"inv_misc_bomb_03.jpg\" \n                                            item_id={18588}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesDenseDynamite} \n                                            label=\"Dense Dynamite\" \n                                            icon_name=\"inv_misc_bomb_06.jpg\" \n                                            item_id={18641}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesFelIronBombs} \n                                            label=\"Fel Iron Bomb\" \n                                            icon_name=\"spell_fire_selfdestruct.jpg\" \n                                            item_id={23736}\n                                            cssClass=\"protection_potion fire\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.ConsumesBandages} \n                                            label=\"First Aid\" \n                                            icon_name=\"spell_holy_sealofsacrifice.jpg\" \n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === true}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesHeavyRuneclothBandage} \n                                            label=\"Bandages\" \n                                            icon_name=\"inv_misc_bandage_netherweave_heavy.jpg\" \n                                            item_id={21991}\n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.ConsumesAntiVenom} \n                                            label=\"Powerful Anti-Venom\" \n                                            icon_name=\"inv_drink_14.jpg\" \n                                            item_id={19440}\n                                            cssClass=\"protection_potion priest\"\n                                            visibility={(ctx) => ctx.collapsed === false}\n                                            aggregate={true} />\n                        </GridColumnGroup>\n\n                        <GridColumnGroup id={GroupKeys.DispelsInterrupts} label=\"Dispels\" cssClass=\"even-colgroup\">\n                            <GridIconColumn field={DataPoints.DispelBoss}\n                                        label=\"Boss\" \n                                        cssClass=\"center\"\n                                        icon_url=\"https://image.flaticon.com/icons/png/128/3325/3325105.png\"\n                                        visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === true}\n                                        aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelTrash}\n                                        label=\"Trash\" \n                                        cssClass=\"center\"\n                                        icon_url=\"https://image.flaticon.com/icons/png/128/3022/3022156.png\"\n                                        visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === true}\n                                        aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelPoison} \n                                            label=\"Poison\" \n                                            icon_name=\"spell_nature_nullifypoison.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelDruidCurePoison} \n                                            label=\"Cure Poison\" \n                                            icon_name=\"spell_nature_nullifypoison.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8946}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelDruidAbolishPoison} \n                                            label=\"Abolish Poison\" \n                                            icon_name=\"spell_nature_nullifypoison_02.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2893}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanCurePoison} \n                                            label=\"Cure Poison\" \n                                            icon_name=\"spell_nature_nullifypoison.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={526}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanPoisonCleansingTotem} \n                                            label=\"Poison Cleansing Totem\" \n                                            icon_name=\"spell_nature_poisoncleansingtotem.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8166}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelDisease} \n                                            label=\"Disease\" \n                                            icon_name=\"spell_holy_nullifydisease.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelPriestCureDisease} \n                                            label=\"Cure Disease\" \n                                            icon_name=\"spell_holy_nullifydisease.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={528}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelPriestAbolishDisease} \n                                            label=\"Abolish Disease\" \n                                            icon_name=\"spell_nature_nullifydisease.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={552}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanCureDisease} \n                                            label=\"Cure Disease\" \n                                            icon_name=\"spell_nature_removedisease.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2870}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanDiseaseCleansingTotem} \n                                            label=\"Disease Cleansing Totem\" \n                                            icon_name=\"spell_nature_diseasecleansingtotem.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8170}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelCurse} \n                                            label=\"Curse\" \n                                            icon_name=\"spell_nature_removecurse.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelDruidRemoveCurse} \n                                            label=\"Remove Curse\" \n                                            icon_name=\"spell_holy_removecurse.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2782}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelMageRemoveLesserCurse} \n                                            label=\"Remove Lesser Curse\" \n                                            icon_name=\"spell_nature_removecurse.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={475}\n                                            visibility={(ctx) => ctx.classFilter === \"Mage\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelMagic} \n                                            label=\"Magic\" \n                                            icon_name=\"spell_holy_dispelmagic.jpg\" \n                                            cssClass=\"center \"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelPriestDispelMagic} \n                                            label=\"Dispel Magic\" \n                                            icon_name=\"spell_holy_dispelmagic.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={988}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelShamanPurge} \n                                            label=\"Purge\" \n                                            icon_name=\"spell_nature_purge.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8012}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelWarlockDevourMagic} \n                                            label=\"Devour Magic\" \n                                            icon_name=\"spell_nature_purge.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={27277}\n                                            visibility={(ctx) => ctx.classFilter === \"Warlock\"}\n                                            aggregate={true} />\n\n                            <GridIconColumn field={DataPoints.DispelFrenzy} \n                                            label=\"Frenzy\" \n                                            icon_name=\"ability_druid_challangingroar.jpg\" \n                                            cssClass=\"center\"\n                                            visibility={(ctx) => ctx.classFilter == null && ctx.collapsed === false}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.DispelHunterTranqShot} \n                                            label=\"Tranquilizing Shot\" \n                                            icon_name=\"spell_nature_drowsy.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={19801}\n                                            visibility={(ctx) => ctx.classFilter === \"Hunter\"}\n                                            aggregate={true} />\n                            \n                            <GridColumn field={DataPoints.InterruptTotal}\n                                        label=\"Interrupts\" \n                                        cssClass=\"center\"\n                                        visibility={(ctx) => ctx.classFilter == null}\n                                        aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptDruidBash} \n                                            label=\"Bash\" \n                                            icon_name=\"ability_druid_bash.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={8983}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptDruidFeralCharge} \n                                            label=\"Feral Charge\" \n                                            icon_name=\"ability_hunter_pet_bear.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={16979}\n                                            visibility={(ctx) => ctx.classFilter === \"Druid\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptMageCounterspell} \n                                            label=\"Counterspell\" \n                                            icon_name=\"spell_frost_iceshock.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={2139}\n                                            visibility={(ctx) => ctx.classFilter === \"Mage\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptPriestSilence} \n                                            label=\"Silence\" \n                                            icon_name=\"spell_shadow_impphaseshift.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={15487}\n                                            visibility={(ctx) => ctx.classFilter === \"Priest\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptShamanEarthShock} \n                                            label=\"Earth Shock\" \n                                            icon_name=\"spell_nature_earthshock.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={25454}\n                                            visibility={(ctx) => ctx.classFilter === \"Shaman\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptRogueKick} \n                                            label=\"Kick\" \n                                            icon_name=\"ability_kick.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={38768}\n                                            visibility={(ctx) => ctx.classFilter === \"Rogue\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptCheapShot} \n                                            label=\"Cheap Shot\" \n                                            icon_name=\"ability_cheapshot.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={1833}\n                                            visibility={(ctx) => ctx.classFilter === \"Rogue\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptWarlockSpellLock} \n                                            label=\"Spell Lock\" \n                                            icon_name=\"spell_shadow_mindrot.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={19647}\n                                            visibility={(ctx) => ctx.classFilter === \"Warlock\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptHunterIntimidate} \n                                            label=\"Intimidation\" \n                                            icon_name=\"ability_devour.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={19577}\n                                            visibility={(ctx) => ctx.classFilter === \"Hunter\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptWarstomp} \n                                            label=\"War Stomp\" \n                                            icon_name=\"ability_warstomp.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={20549}\n                                            visibility={(ctx) => ctx.classFilter === \"Hunter\" || ctx.classFilter === \"Druid\" || ctx.classFilter === \"Shaman\" || ctx.classFilter === \"Warrior\"}\n                                            aggregate={true} />\n                            <GridIconColumn field={DataPoints.InterruptWarriorPummel} \n                                            label=\"Pummel\" \n                                            icon_name=\"inv_gauntlets_04.jpg\" \n                                            cssClass=\"center\"\n                                            spell_id={6554}\n                                            visibility={(ctx) => ctx.classFilter === \"Warrior\"}\n                                            aggregate={true} />\n                            \n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Cooldowns} label=\"Cooldowns\" cssClass=\"odd-colgroup\">\n{/*                             <GridIconListColumn field={DataPoints.Cooldowns}\n                                        label=\" \"\n                                        cssClass=\"center\" /> */}\n                            <GridIconListColumn field={DataPoints.CooldownsRacial}\n                                        label=\" \"\n                                        cssClass=\"cooldowns center\" />\n                            <GridIconListColumn field={DataPoints.CooldownsAbility}\n                                        label=\" \"\n                                        cssClass=\"cooldowns center\" />\n                            <GridIconListColumn field={DataPoints.CooldownsItems}\n                                        label=\" \"\n                                        cssClass=\"cooldowns center\" />\n                        </GridColumnGroup>\n                        <GridColumnGroup id={GroupKeys.Tank} label=\"Tank Stats\" cssClass=\"even-colgroup\">\n                            <GridBarColumn label=\"Damage Taken\" width=\"270\" visibility={(ctx) => ctx.roleFilter === \"tank\"}>\n                                <GridBarColumnSection field={DataPoints.DamageTakenHit} label=\"Hit\" cssClass=\"class-colour1\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenCrushed} label=\"Crushing Blow\" cssClass=\"bad2\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenCrit} label=\"Crit\" cssClass=\"bad1\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenBlocked} label=\"Blocked\" cssClass=\"class-colour3\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenParry} label=\"Parry\" cssClass=\"good2\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenDodge} label=\"Dodge\" cssClass=\"good1\" />\n                                <GridBarColumnSection field={DataPoints.DamageTakenMiss} label=\"Miss\" cssClass=\"class-colour4\" />\n                            </GridBarColumn>\n                            <GridColumn label=\"Hit\" field={DataPoints.DamageTakenHit} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"} />\n                            <GridColumn label=\"Crush\" field={DataPoints.DamageTakenCrushed} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Crit\" field={DataPoints.DamageTakenCrit} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Block\" field={DataPoints.DamageTakenBlocked} format=\"%\" cssClass=\"right class-colour4 percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Parry\" field={DataPoints.DamageTakenParry} format=\"%\" cssClass=\"right percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Dodge\" field={DataPoints.DamageTakenDodge} format=\"%\" cssClass=\"right percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                            <GridColumn label=\"Miss\" field={DataPoints.DamageTakenMiss} format=\"%\" cssClass=\"right percentage\" visibility={(ctx) => ctx.roleFilter === \"tank\"}  />\n                        </GridColumnGroup>\n                    </Grid>\n                    <ReactTooltip />\n                </>\n            )\n        }\n    }\n}\n\nexport const SummaryReportWithRouter = withRouter(SummaryReport);","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function ReportLoad() {\n    let history = useHistory();\n    let [reportId, setReportId] = useState();\n\n    let handleChange = (event) => {\n        setReportId(event.target.value);\n    }\n\n    let handleSubmit = () => {\n        history.push(\"/\" + reportId);\n    }\n\n    return (\n        <div className=\"App\">\n            <form onSubmit={handleSubmit} >\n            Enter your Classic Warcraft Logs ID: <input type=\"text\" onChange={handleChange} /> <input type=\"submit\" value=\"Go\" />\n            </form>\n        </div>\n    )\n}","import './App.css';\nimport {Component} from \"react\";\nimport {HealerReportWithRouter as HealerReport} from \"./HealerReport/HealerReport\";\nimport {ShamanReportWithRouter as ShamanReport} from \"./ShamanReport/ShamanReport\";\nimport {SummaryReportWithRouter as SummaryReport} from \"./SummaryReport/SummaryReport\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { ReportLoad } from './ReportLoad';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n      <div className=\"nav-bar\">\n        <div className=\"bug-report\">\n          <a href=\"https://github.com/arbixal/wow-classic-heal-analyser/issues/new\" target=\"_blank\" rel=\"noreferrer\"><img alt=\"Github Logo\" src=\"GitHub-Mark-Light-32px.png\"></img> Report a Bug</a>\n        </div>\n        <h1>WoW Classic Log Analyser</h1>\n      </div>\n      <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <ReportLoad />\n            </Route>\n            <Route path=\"/:id/archived/shaman\">\n              <ShamanReport />\n            </Route>\n            <Route path=\"/:id/archived/healer\" >\n              <HealerReport />\n            </Route>\n            <Route path=\"/:id/:fightId?/:filter?\">\n              <SummaryReport />\n            </Route>\n          </Switch>\n      </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}